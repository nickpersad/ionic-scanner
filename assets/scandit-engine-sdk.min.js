wasmJSVersion = '5.8.0';
var key,
  Module = void 0 !== Module ? Module : {},
  moduleOverrides = {};
for (key in Module)
  Module.hasOwnProperty(key) && (moduleOverrides[key] = Module[key]);
var nodeFS,
  nodePath,
  arguments_ = [],
  thisProgram = './this.program',
  quit_ = function (e, t) {
    throw t;
  },
  ENVIRONMENT_IS_WEB = !1,
  ENVIRONMENT_IS_WORKER = !1,
  ENVIRONMENT_IS_NODE = !1,
  ENVIRONMENT_IS_SHELL = !1,
  ENVIRONMENT_IS_WEB = 'object' == typeof window,
  ENVIRONMENT_IS_WORKER = 'function' == typeof importScripts,
  ENVIRONMENT_IS_NODE =
    'object' == typeof process &&
    'object' == typeof process.versions &&
    'string' == typeof process.versions.node,
  ENVIRONMENT_IS_SHELL = !1,
  scriptDirectory = '';
function locateFile(e) {
  return Module.locateFile
    ? Module.locateFile(e, scriptDirectory)
    : scriptDirectory + e;
}
var scriptDirectory =
    0 !== (scriptDirectory = self.location.href).indexOf('blob:')
      ? scriptDirectory.substr(0, scriptDirectory.lastIndexOf('/') + 1)
      : '',
  read_ = function (e) {
    var t = new XMLHttpRequest();
    return t.open('GET', e, !1), t.send(null), t.responseText;
  },
  readBinary = function (e) {
    var t = new XMLHttpRequest();
    return (
      t.open('GET', e, !1),
      (t.responseType = 'arraybuffer'),
      t.send(null),
      new Uint8Array(t.response)
    );
  },
  readAsync = function (e, t, r) {
    var n = new XMLHttpRequest();
    n.open('GET', e, !0),
      (n.responseType = 'arraybuffer'),
      (n.onload = function () {
        200 == n.status || (0 == n.status && n.response) ? t(n.response) : r();
      }),
      (n.onerror = r),
      n.send(null);
  },
  setWindowTitle = function (e) {
    document.title = e;
  },
  out = Module.print || console.log.bind(console),
  err = Module.printErr || console.warn.bind(console);
for (key in moduleOverrides)
  moduleOverrides.hasOwnProperty(key) && (Module[key] = moduleOverrides[key]);
(moduleOverrides = null),
  Module.arguments && (arguments_ = Module.arguments),
  Module.thisProgram && (thisProgram = Module.thisProgram),
  Module.quit && (quit_ = Module.quit);
var STACK_ALIGN = 16;
function alignMemory(e, t) {
  return (t = t || STACK_ALIGN), Math.ceil(e / t) * t;
}
function warnOnce(e) {
  warnOnce.shown || (warnOnce.shown = {}),
    warnOnce.shown[e] || ((warnOnce.shown[e] = 1), err(e));
}
var wasmBinary,
  tempRet0 = 0,
  setTempRet0 = function (e) {
    tempRet0 = e;
  },
  getTempRet0 = function () {
    return tempRet0;
  };
Module.wasmBinary && (wasmBinary = Module.wasmBinary);
var wasmMemory,
  noExitRuntime = Module.noExitRuntime || !0;
function setValue(e, t, r, n) {
  switch ((r = '*' === (r = r || 'i8').charAt(r.length - 1) ? 'i32' : r)) {
    case 'i1':
    case 'i8':
      HEAP8[e >> 0] = t;
      break;
    case 'i16':
      HEAP16[e >> 1] = t;
      break;
    case 'i32':
      HEAP32[e >> 2] = t;
      break;
    case 'i64':
      (tempI64 = [
        t >>> 0,
        ((tempDouble = t),
        1 <= +Math.abs(tempDouble)
          ? 0 < tempDouble
            ? (0 |
                Math.min(+Math.floor(tempDouble / 4294967296), 4294967295)) >>>
              0
            : ~~+Math.ceil((tempDouble - (~~tempDouble >>> 0)) / 4294967296) >>>
              0
          : 0),
      ]),
        (HEAP32[e >> 2] = tempI64[0]),
        (HEAP32[(e + 4) >> 2] = tempI64[1]);
      break;
    case 'float':
      HEAPF32[e >> 2] = t;
      break;
    case 'double':
      HEAPF64[e >> 3] = t;
      break;
    default:
      abort('invalid type for setValue: ' + r);
  }
}
function getValue(e, t, r) {
  switch ((t = '*' === (t = t || 'i8').charAt(t.length - 1) ? 'i32' : t)) {
    case 'i1':
    case 'i8':
      return HEAP8[e >> 0];
    case 'i16':
      return HEAP16[e >> 1];
    case 'i32':
    case 'i64':
      return HEAP32[e >> 2];
    case 'float':
      return HEAPF32[e >> 2];
    case 'double':
      return HEAPF64[e >> 3];
    default:
      abort('invalid type for getValue: ' + t);
  }
  return null;
}
'object' != typeof WebAssembly && abort('no native wasm support detected');
var EXITSTATUS,
  ABORT = !1;
function assert(e, t) {
  e || abort('Assertion failed: ' + t);
}
function getCFunc(e) {
  var t = Module['_' + e];
  return (
    assert(
      t,
      'Cannot call unknown function ' + e + ', make sure it is exported'
    ),
    t
  );
}
function ccall(e, t, r, n, o) {
  var i = {
      string: function (e) {
        var t,
          r = 0;
        return (
          null != e &&
            0 !== e &&
            ((t = 1 + (e.length << 2)),
            stringToUTF8(e, (r = stackAlloc(t)), t)),
          r
        );
      },
      array: function (e) {
        var t = stackAlloc(e.length);
        return writeArrayToMemory(e, t), t;
      },
    },
    e = getCFunc(e),
    a = [],
    s = 0;
  if (n)
    for (var c = 0; c < n.length; c++) {
      var u = i[r[c]];
      u ? (0 === s && (s = stackSave()), (a[c] = u(n[c]))) : (a[c] = n[c]);
    }
  var l = (e = e.apply(null, a));
  return (
    (e = 'string' === t ? UTF8ToString(l) : 'boolean' === t ? Boolean(l) : l),
    0 !== s && stackRestore(s),
    e
  );
}
var buffer,
  HEAP8,
  HEAPU8,
  HEAP16,
  HEAPU16,
  HEAP32,
  HEAPU32,
  HEAPF32,
  HEAPF64,
  UTF8Decoder =
    'undefined' != typeof TextDecoder ? new TextDecoder('utf8') : void 0;
function UTF8ArrayToString(e, t, r) {
  for (var n = t + r, o = t; e[o] && !(n <= o); ) ++o;
  if (16 < o - t && e.subarray && UTF8Decoder)
    return UTF8Decoder.decode(e.subarray(t, o));
  for (var i = ''; t < o; ) {
    var a,
      s,
      c = e[t++];
    128 & c
      ? ((a = 63 & e[t++]),
        192 != (224 & c)
          ? ((s = 63 & e[t++]),
            (c =
              224 == (240 & c)
                ? ((15 & c) << 12) | (a << 6) | s
                : ((7 & c) << 18) | (a << 12) | (s << 6) | (63 & e[t++])) <
            65536
              ? (i += String.fromCharCode(c))
              : ((s = c - 65536),
                (i += String.fromCharCode(
                  55296 | (s >> 10),
                  56320 | (1023 & s)
                ))))
          : (i += String.fromCharCode(((31 & c) << 6) | a)))
      : (i += String.fromCharCode(c));
  }
  return i;
}
function UTF8ToString(e, t) {
  return e ? UTF8ArrayToString(HEAPU8, e, t) : '';
}
function stringToUTF8Array(e, t, r, n) {
  if (!(0 < n)) return 0;
  for (var o = r, i = r + n - 1, a = 0; a < e.length; ++a) {
    var s = e.charCodeAt(a);
    if (
      (s =
        55296 <= s && s <= 57343
          ? (65536 + ((1023 & s) << 10)) | (1023 & e.charCodeAt(++a))
          : s) <= 127
    ) {
      if (i <= r) break;
      t[r++] = s;
    } else if (s <= 2047) {
      if (i <= r + 1) break;
      (t[r++] = 192 | (s >> 6)), (t[r++] = 128 | (63 & s));
    } else if (s <= 65535) {
      if (i <= r + 2) break;
      (t[r++] = 224 | (s >> 12)),
        (t[r++] = 128 | ((s >> 6) & 63)),
        (t[r++] = 128 | (63 & s));
    } else {
      if (i <= r + 3) break;
      (t[r++] = 240 | (s >> 18)),
        (t[r++] = 128 | ((s >> 12) & 63)),
        (t[r++] = 128 | ((s >> 6) & 63)),
        (t[r++] = 128 | (63 & s));
    }
  }
  return (t[r] = 0), r - o;
}
function stringToUTF8(e, t, r) {
  return stringToUTF8Array(e, HEAPU8, t, r);
}
function lengthBytesUTF8(e) {
  for (var t = 0, r = 0; r < e.length; ++r) {
    var n = e.charCodeAt(r);
    (n =
      55296 <= n && n <= 57343
        ? (65536 + ((1023 & n) << 10)) | (1023 & e.charCodeAt(++r))
        : n) <= 127
      ? ++t
      : (t += n <= 2047 ? 2 : n <= 65535 ? 3 : 4);
  }
  return t;
}
function allocateUTF8(e) {
  var t = lengthBytesUTF8(e) + 1,
    r = _malloc(t);
  return r && stringToUTF8Array(e, HEAP8, r, t), r;
}
function allocateUTF8OnStack(e) {
  var t = lengthBytesUTF8(e) + 1,
    r = stackAlloc(t);
  return stringToUTF8Array(e, HEAP8, r, t), r;
}
function writeArrayToMemory(e, t) {
  HEAP8.set(e, t);
}
function writeAsciiToMemory(e, t, r) {
  for (var n = 0; n < e.length; ++n) HEAP8[t++ >> 0] = e.charCodeAt(n);
  r || (HEAP8[t >> 0] = 0);
}
function alignUp(e, t) {
  return 0 < e % t && (e += t - (e % t)), e;
}
function updateGlobalBufferAndViews(e) {
  (buffer = e),
    (Module.HEAP8 = HEAP8 = new Int8Array(e)),
    (Module.HEAP16 = HEAP16 = new Int16Array(e)),
    (Module.HEAP32 = HEAP32 = new Int32Array(e)),
    (Module.HEAPU8 = HEAPU8 = new Uint8Array(e)),
    (Module.HEAPU16 = HEAPU16 = new Uint16Array(e)),
    (Module.HEAPU32 = HEAPU32 = new Uint32Array(e)),
    (Module.HEAPF32 = HEAPF32 = new Float32Array(e)),
    (Module.HEAPF64 = HEAPF64 = new Float64Array(e));
}
var wasmTable,
  INITIAL_MEMORY = Module.INITIAL_MEMORY || 33554432,
  __ATPRERUN__ = [],
  __ATINIT__ = [],
  __ATMAIN__ = [],
  __ATPOSTRUN__ = [],
  runtimeInitialized = !1,
  runtimeExited = !1;
function preRun() {
  if (Module.preRun)
    for (
      'function' == typeof Module.preRun && (Module.preRun = [Module.preRun]);
      Module.preRun.length;

    )
      addOnPreRun(Module.preRun.shift());
  callRuntimeCallbacks(__ATPRERUN__);
}
function initRuntime() {
  (runtimeInitialized = !0),
    Module.noFSInit || FS.init.initialized || FS.init(),
    TTY.init(),
    callRuntimeCallbacks(__ATINIT__);
}
function preMain() {
  (FS.ignorePermissions = !1), callRuntimeCallbacks(__ATMAIN__);
}
function exitRuntime() {
  runtimeExited = !0;
}
function postRun() {
  if (Module.postRun)
    for (
      'function' == typeof Module.postRun &&
      (Module.postRun = [Module.postRun]);
      Module.postRun.length;

    )
      addOnPostRun(Module.postRun.shift());
  callRuntimeCallbacks(__ATPOSTRUN__);
}
function addOnPreRun(e) {
  __ATPRERUN__.unshift(e);
}
function addOnPostRun(e) {
  __ATPOSTRUN__.unshift(e);
}
__ATINIT__.push({
  func: function () {
    ___wasm_call_ctors();
  },
});
var runDependencies = 0,
  runDependencyWatcher = null,
  dependenciesFulfilled = null;
function getUniqueRunDependency(e) {
  return e;
}
function addRunDependency(e) {
  runDependencies++,
    Module.monitorRunDependencies &&
      Module.monitorRunDependencies(runDependencies);
}
function removeRunDependency(e) {
  var t;
  runDependencies--,
    Module.monitorRunDependencies &&
      Module.monitorRunDependencies(runDependencies),
    0 == runDependencies &&
      (null !== runDependencyWatcher &&
        (clearInterval(runDependencyWatcher), (runDependencyWatcher = null)),
      dependenciesFulfilled &&
        ((t = dependenciesFulfilled), (dependenciesFulfilled = null), t()));
}
function abort(e) {
  throw (
    (Module.onAbort && Module.onAbort(e),
    err((e += '')),
    (ABORT = !0),
    (EXITSTATUS = 1),
    (e = 'abort(' + e + '). Build with -s ASSERTIONS=1 for more info.'),
    new WebAssembly.RuntimeError(e))
  );
}
function hasPrefix(e, t) {
  return String.prototype.startsWith ? e.startsWith(t) : 0 === e.indexOf(t);
}
(Module.preloadedImages = {}), (Module.preloadedAudios = {});
var dataURIPrefix = 'data:application/octet-stream;base64,';
function isDataURI(e) {
  return hasPrefix(e, dataURIPrefix);
}
var fileURIPrefix = 'file://';
function isFileURI(e) {
  return hasPrefix(e, fileURIPrefix);
}
var tempDouble,
  tempI64,
  wasmBinaryFile = 'scandit-engine-sdk.wasm';
function getBinary(e) {
  try {
    if (e == wasmBinaryFile && wasmBinary) return new Uint8Array(wasmBinary);
    if (readBinary) return readBinary(e);
    throw 'both async and sync fetching of the wasm failed';
  } catch (e) {
    abort(e);
  }
}
function getBinaryPromise() {
  if (!wasmBinary) {
    if ('function' == typeof fetch && !isFileURI(wasmBinaryFile))
      return fetch(wasmBinaryFile, { credentials: 'same-origin' })
        .then(function (e) {
          if (!e.ok)
            throw "failed to load wasm binary file at '" + wasmBinaryFile + "'";
          return e.arrayBuffer();
        })
        .catch(function () {
          return getBinary(wasmBinaryFile);
        });
    if (readAsync)
      return new Promise(function (t, e) {
        readAsync(
          wasmBinaryFile,
          function (e) {
            t(new Uint8Array(e));
          },
          e
        );
      });
  }
  return Promise.resolve().then(function () {
    return getBinary(wasmBinaryFile);
  });
}
function createWasm() {
  var t = { a: asmLibraryArg };
  function r(e, t) {
    (e = e.exports),
      (Module.asm = e),
      updateGlobalBufferAndViews((wasmMemory = Module.asm.Xb).buffer),
      (wasmTable = Module.asm.Zb),
      removeRunDependency('wasm-instantiate');
  }
  function n(e) {
    r(e.instance);
  }
  function o(e) {
    return getBinaryPromise()
      .then(function (e) {
        return WebAssembly.instantiate(e, t);
      })
      .then(e, function (e) {
        err('failed to asynchronously prepare wasm: ' + e), abort(e);
      });
  }
  if ((addRunDependency('wasm-instantiate'), Module.instantiateWasm))
    try {
      return Module.instantiateWasm(t, r);
    } catch (e) {
      return err('Module.instantiateWasm callback failed with error: ' + e), !1;
    }
  return (
    wasmBinary ||
    'function' != typeof WebAssembly.instantiateStreaming ||
    isDataURI(wasmBinaryFile) ||
    isFileURI(wasmBinaryFile) ||
    'function' != typeof fetch
      ? o(n)
      : fetch(wasmBinaryFile, { credentials: 'same-origin' }).then(function (
          e
        ) {
          return WebAssembly.instantiateStreaming(e, t).then(n, function (e) {
            return (
              err('wasm streaming compile failed: ' + e),
              err('falling back to ArrayBuffer instantiation'),
              o(n)
            );
          });
        }),
    {}
  );
}
isDataURI(wasmBinaryFile) || (wasmBinaryFile = locateFile(wasmBinaryFile));
var _0x15fe = [
    'qYFdRdpdPW',
    'm8kSWRr+WOy',
    'ACoaFJldUa',
    'W6VdPLj1WQy',
    'zN8UW6Hj',
    'WQpdO0WrW4e',
    'W4VcTquepq',
    'zHbJgai',
    'CCkimave',
    'WQPSW4lcTCoU',
    'WOhcSJaXnG',
    'AchdTWddHW',
    'cCkcWRFdJJi',
    'WQtdSSkjtW',
    'E8o0WPBcO1m',
    'WONdUCkCwmkz',
    'WQhcPHirhq',
    'w0hdMCkRWQe',
    'W6JcTJGldW',
    'WQzWW7/cRCop',
    'WQxcKu01W6ddGSkU',
    'WRddH3CZW4O',
    'W4qsorxcSG',
    'WOdcRbGxdW',
    'CSosW6HXW4O',
    'WRrkW4VcVSom',
    'oe7dRdhdMq',
    'WOhcU8kJWPVdRa',
    'W4ebacZcPa',
    'AmosWPtcGee',
    'Et3cMSoMWOXeWPi',
    'ASkfprH0',
    'fSkQWOjOWRS',
    'W6malSkhyW',
    'ydzRW5iW',
    'W4ddKWhcVuK',
    'WQLQrhu',
    'cSkoWPldLWi',
    'Ah4AW6zK',
    'WQVcRCo1W5ddPq',
    'WPFcHg9ccG',
    'nmkNWQjlWPW',
    'pHZcHSoaWRK',
    'otpcNCoAWRG',
    'tmkgoG9d',
    'WPFcVZ1DW7C',
    'tXVdMHuB',
    'uHRdIaKc',
    'i8kdevL2',
    'W7ldPgHzWQ0',
    'WOBcQhHZdW',
    'l8kjWRRdHaW',
    'vCkbirLn',
    'WP5luq',
    'W7fwjrNcTW',
    'vCojudtdKG',
    'pmo3W4dcQKu',
    'W57dLsZcR0O',
    'bCkMWOJcJsu',
    'W64umSkSrq',
    'DtfYjc0',
    'mSk5WRBdUse',
    'm8kwWOHYWOK',
    'k8kzWRxcHYW',
    'WQ5Cw0vX',
    'WP5KbeNdHa',
    'W5uAnSoaWRzEWPlcRwieWRu',
    'WRtcOJXYW6G',
    'kSkKWOrLWQa',
    'pmk8hMrJ',
    'eSk9W4PJW4O',
    'jhL7W5hdImoqWQG',
    'n8k2WO9YWR0',
    'kCkIWOBcSsK',
    'WQzJumk5W5W',
    'W6WYW5ZcRCozDCojW5yOWOTw',
    'B8o+vdldMq',
    'WO5Jr8k7W6m',
    'W482WQ5q',
    'W7ZcULmRW4m',
    'zCoyW6boW7q',
    'FSofW5OSEq',
    'WQHYsSkXW7O',
    'WQnNW67cSCob',
    'WPdcOYL/W5q',
    'W4PTbtJcNW',
    'W4H9WOL3ga',
    'rxD/W7BdMq',
    'Ff/dU8kYWRK',
    'WQnsW47cRCoQ',
    'ErXMgZW',
    'xdFdGchdSG',
    'WQpcPd8A',
    'z8kfWQZdNHa',
    'WRXEDCkvW4G',
    'n8ovWPtdO8ko',
    'W7yWWQ/dQ8kwWRmEWOBdO0/dVW',
    'a8kiW7ivW7K',
    'rSkeWOpdObW',
    'k8kJhgG',
    'WPxcKZCDlq',
    'j23dTZtdGG',
    'nmkoWQxcImkE',
    'WQFcIxrhha',
    'W5uqbcBcIq',
    'WRVcKtCwgW',
    'mCooW5FdS8kB',
    'WRpcQtamfG',
    'Fmk2WPRdSay',
    'EYT0W4Co',
    'W4K3lGFcTW',
    'WPhcTmkDWOZdJa',
    'W6hdOx1FWO4',
    'lSkNWPDqWQi',
    'W5rBkHlcVW',
    'DSoZWPtcVfC',
    'nIrXWRKrW71ytNuPaG',
    'kSofrCktW5i',
    'tqZdQYGW',
    'W5G9WR5wW4S',
    'W49WWODfgG',
    'WPdcQqVdVa',
    'W7KNkSkyDa',
    'y35TW6hdJG',
    'W4b1WObDaW',
    'DLZdU8kpWRK',
    'W6O6bsOI',
    'ECojWO/cUxO',
    'WRahhmkGxCoxWOG',
    'WOJcQbjGW4u',
    'WRfFfepdRa',
    'tSoIWONcRK4',
    'W5lcIHKhjG',
    'kX/cR8oqWPK',
    'WPX9v8kuW6y',
    'WQzGwCkZW7S',
    'WPRcU1pdOdrnngFcRCo2WOZcVa',
    'oCkcWQZdJty',
    'kgddUchdTq',
    'BSoqW6WvqW',
    'W6aYWQ1mW74',
    'sCkOfZvw',
    'u8oUWPZcHxW',
    'W4FcRHvkWRGgWQ/dVb7cMCkH',
    'imkOf0XJ',
    'WQT3W5dcOmo3',
    'WQxcUL4AW4FdL8k1',
    'W6hdRgrgWQq',
    'WP5ZtmkRW74',
    'FmkdnWry',
    'AtZdJtJdJG',
    'WOvVc2RdSG',
    'hmkPpKzq',
    'WPlcVZ7dNCoQ',
    'lKxdTJFdKW',
    'BSogW4Svvq',
    'W7K1WRzAW7a',
    'WPddR8kCC8kF',
    'WPlcKmo8W77dPW',
    'W4OUcslcMa',
    'x8oZWOJcQee',
    'W6BcNGqxjW',
    'BSoTW6PXW68',
    'WRxdLfyuW6S',
    'et7cQCoKWPy',
    'W6pcP2egW7O',
    'WPbYumkOW4m',
    'WRrAW4lcOCoU',
    'WQLuySk7W50',
    'zh0L',
    'WRZcLt/dVCo7',
    'WOxcOqRdL8on',
    'W4BcKGuxgG',
    'omodq8ksW4O',
    'WPDeAmkqW6C',
    'kXJcOmobWRS',
    'fmkcWORcJc8',
    'iSkfWRFdMY4',
    'jCkoWQpcICob',
    'W47cNqa2lW',
    'WRFcGtXqW5y',
    'W7SlhSk4sq',
    'WO9DwCk4W60',
    'EmkTgabs',
    'tCoRWOZcV2a',
    'DCkycqvI',
    'W6bzWPjxoa',
    'oSk0k3ru',
    'W6xcRaC8gG',
    'fCkhWPldJtq',
    'W7ldHqRcPwG',
    'ycVdUayc',
    'WRnccw3dIG',
    'sqNdUr0S',
    'WONcHZWooG',
    'emk/WPxcHdm',
    'WR3cUcKrbW',
    'l8kdWR7cQmku',
    'AYddLWmN',
    'raDkW5Cb',
    'e8ktW70cW60',
    'FtDQW6yN',
    'qSo+W5ddNh8',
    'W7JcJSo4WRvi',
    'y8o1xs7dPG',
    'WRXKq8kUW7y',
    'e8kvW6SwW6S',
    'WPDyBCkAW7y',
    'W7iUcmkTqG',
    'aCkBW5aoW4q',
    'WORcLmkSWPxdNG',
    'WOjAvSkzW7u',
    'lmkKWR7dMq0',
    'pCofW5ZdKCko',
    'W5VcO8oMWPLC',
    'z1nlW5q',
    'rCoWW51OW5G',
    'WPnZWOxdUCkW',
    'W6/dGspcTM8',
    'W6ihl8kIqW',
    'WPFcVCoZW4ZdIG',
    'WRvUxNPU',
    'W7FcUgWvW4y',
    'WPNcPmkWWOJdLW',
    'W6y/WQH2W7O',
    'WPJcH8kHWP/dMW',
    'WQXTWQVdSCkG',
    'WP7cU8k/WQVdRq',
    'Ft/dIYNdKq',
    'W5RdIJxcHMO',
    'WOTBvSkaW7u',
    'jmotr8kNW4S',
    'W4bHWQDPpW',
    'WPxdVKalW4O',
    'sJ7dNdWm',
    'oSkwWR9IWOi',
    'sSokWQJcGL8',
    'kCk+jwDG',
    'rSkJhanW',
    'WONcTrHVW4C',
    'j8k+f2S',
    'WPdcOWldH8oG',
    'kmoytmkfW54',
    'W6jgWPjKdG',
    'W4OfbIJcIq',
    'f8k7iMHN',
    'jSoMDCkoW4G',
    'WOX6WO/dNCkr',
    'ErPjW4Sj',
    'nCoLnKRdOG',
    'WQdcOcuw',
    'DtBdOXpdHW',
    'W5pcIXOpla',
    'sCoeWQlcGh4',
    'WOFcRSk3WPZdMa',
    'o8kEpgDI',
    'mSkdWORdTs4',
    'WRfVWOBdUCkC',
    'sCoSW5P2W5i',
    'W5uLpmkUwW',
    'W5RdSmoTW4VcJmkVB8oDWPBcMrSL',
    'EqTGW5uC',
    'AshdHdSa',
    'F8omW4edvW',
    'mHRcI8orWR8',
    'WRXWWRNdQSkj',
    'WQH3r8kMW5m',
    's8kOmrnS',
    'WQFcOq9RW7q',
    'uJXMfbC',
    'W41ydtFcPq',
    'W7pdOwT6WPK',
    'WOPLFLjO',
    'WPFcGXaYfG',
    'W7mvbsFcTq',
    'W7ddMsqmkCk7W4BcKCk+W4i',
    'W5GRWQbOW5a',
    'jrRcNmolWRq',
    'W4BdPtFcMKu',
    'CCouWRBcGfy',
    'W57cSv0YW7O',
    'WOLouCk8W4a',
    'WO5tuCkWW6a',
    'le7dLYxdVW',
    'WQFcRapdOSob',
    'WRlcRmozW7FdSa',
    'WOjqW77cU8oA',
    'zaHVW4yP',
    'hCkbWOtcHs8',
    'WRj6W4hcOCoH',
    'WPhcRmorW73dSW',
    'WRlcQayZpa',
    'WR1lcq',
    'zfBdHSksWQW',
    'W4bJWPbHnW',
    'WOZdLN5FCq',
    'WO3cJtBdQ8oW',
    'W4FcQSo/WPTy',
    'WRvZWQ/dS8kP',
    'oCkDW5zTW48',
    'o8opW53dTCkc',
    'W58GWOnAW6S',
    'W73dSWpcG0W',
    'FSkwWRxdJJK',
    'kCkxWP9ZWRa',
    'W6e9WPTtW6a',
    'WPjzWQFdQmkn',
    'WQZcT8kTWPddUW',
    'p8kfcNru',
    'rWvPW6eC',
    't8o5wZtdVW',
    'WQTNW7BcV8ow',
    'DeaTW5fY',
    'WOVcRCo3W7NdIW',
    'W5XXWOT9mq',
    'WQbtwM90',
    'dCkJWPVcH8kq',
    'r3mWW4v/',
    'F1/dRCkwWPK',
    'mx3dKcldJG',
    'WQfAW4RcQ8oZ',
    'j8oLwmkrW5e',
    'BmkhpXv+',
    'W4VdIKL4WPS',
    'lSkzcMv9',
    'EdNcR2tcGa',
    'W5NcVSoRWODN',
    'hCkTW4qjW7S',
    'WOpcGmoZW4hdMW',
    'id3cL8oxWOG',
    'FmkfaZPT',
    'rmoeWQjyW7OuE8kiW5mF',
    'WQ3cIX5sW7a',
    'EftdG8kCWRe',
    'ACopW6v6W6a',
    'mCoPW5/dM8kT',
    'zvDEW5hdRq',
    'sYpdPGqf',
    'ymkrWRddKtG',
    'ExxdMCkkWPO',
    'nSkRWP7cUmkw',
    'dmk9W4bXW50',
    'W65wcbZcPq',
    'f8kfWRZdOXm',
    'AZ8VW6HC',
    'W4DpndRcPG',
    'lmo+q8kFW5S',
    'jrxcKSodW6WWE8kZpSoweNq',
    'WPbrE8kNW4G',
    'F1tdJ8kD',
    'W5yBoColWRyCWOdcN3WtWQSd',
    'hCoVgvNdIW',
    'aSkJWOZcIY8',
    'cSouW5tdOmkt',
    'AmkBdcf8',
    'AZD4W7ON',
    'sbD8W7O1',
    'WOVcLcNdLSoQ',
    'WPbLrSk3W4a',
    'WQ7cVGXZ',
    'W5jedtpcTW',
    'WOvUjLNdLq',
    'WRFcHgfNoG',
    'A0mZW7PQ',
    'DJnPWRRcPq',
    'emkTW4HOWPe',
    'DSozW5GgBG',
    'W5j7fJlcVG',
    'W6BcGSoVWQa',
    'WOJcRmo8W5/dIW',
    'n8k+ewvC',
    'WOFcTmkCWOxdOq',
    'hmkzW70gW7G',
    'W4iBWObKW4O',
    'i8ogW7RdV8kY',
    'zmouWQznW7G',
    'W6BcG0KRW6q',
    'WRtdLeKCW7m',
    'vwtdGSkEWQi',
    'W7/cQMSlW7W',
    'W47cV8oFWPXB',
    'WRaPcSkJz8oeWPO',
    'o8kbWPW',
    'W7SRWRTSW4S',
    'WRXFuCkwW7i',
    'qrfkW5iC',
    'W4a3WR5oW6a',
    'cSowW6NdTCkk',
    'WR3cPmkFWRldUW',
    'WQVcSgvVfG',
    'DCkaWPddRIa',
    'W5NcQCozWRvK',
    'g2xdKdRdRa',
    'WONcHduehq',
    'BmosW6r0W4i',
    'WODaymkbW4e',
    'WP3cQZ/dImoN',
    'WQHVr1za',
    'WRfNx0LE',
    'omkSWQLPWOK',
    't31MW6VdKq',
    'W4K2WO9VW54',
    'amkFWOJcSHa',
    'WRpcTcuhW7VcPgWXAHtcVWu',
    'WRFcKxLCkW',
    'WQJcGGX2W58',
    'zKzgW5ddTW',
    'W4hdRapcUe8',
    'WOHnB8kuW7y',
    'W4tdHbdcLK0',
    'BCkGWOpdLt0',
    'xLnRW4NdIW',
    'ACoiW6PRW4i',
    'WQZdGhewW68',
    'AJZdGqSb',
    'gSk6WR3cOYu',
    'WObLymkBW6W',
    'WPTRESkrW7W',
    'qMy5W6zN',
    'Btr7W58l',
    'DNpdKSktWRi',
    'rbddGIOL',
    'BJFdQrRdMq',
    'W6eIkqpcVG',
    'WOVcIYddUmoD',
    'WO9YymkMW68',
    'W75LWQDega',
    'ySoqWQRcUNu',
    'gCozf1/dPG',
    'WQVcHxb0kW',
    'W4xcOHblWRaiWRNdJHJcMmk7',
    'jmk1i0r2',
    'WQdcI8owW5VdLW',
    'AsRdUb8c',
    'WR1gFK9Y',
    'WOtcPCkXWRZdGa',
    'WOX9tSklW6m',
    'WPJcLJymdq',
    'W43cGI8BkW',
    'bCoViL7dLG',
    'oCkrWR0TWRe',
    'W5ZdSZ3cGMa',
    'D8kHdWnj',
    'xCoust7dIW',
    'bSoOm3/dGq',
    'rCoKW6iTra',
    'WPvrxNJdJq',
    'A8ouW43cThpdKGq+WOxcJZf0',
    'q8ofxI3dQW',
    'l8oYwmkvW5u',
    'WOTSdLJdPW',
    'AxWrW6Pm',
    'Cdjekbi',
    'wCoRurddPq',
    'W4pcQCoSWQ5A',
    'kgZdUd3dUW',
  ],
  _0x2a54e7 = function (e, t, r, n, o) {
    return _0x59d8(n - -181, e);
  },
  _0x4cf1a1 = function (e, t, r, n, o) {
    return _0x59d8(n - -181, e);
  },
  _0x3e11e6 = function (e, t, r, n, o) {
    return _0x59d8(n - -181, e);
  },
  _0x3668dc = function (e, t, r, n, o) {
    return _0x59d8(n - -181, e);
  },
  _0x176c54 = function (e, t, r, n, o) {
    return _0x59d8(n - -181, e);
  };
!(function (t) {
  function e(e, t, r, n) {
    return _0x59d8(t - 809, n);
  }
  function r(e, t, r, n) {
    return _0x59d8(t - 809, n);
  }
  function n(e, t, r, n) {
    return _0x59d8(t - 809, n);
  }
  function o(e, t, r, n) {
    return _0x59d8(t - 809, n);
  }
  for (;;)
    try {
      if (
        103884 ===
        parseInt(e(0, 1337, 0, '[dxK')) +
          parseInt(r(0, 1458, 0, 'Xb3q')) * -parseInt(r(0, 1352, 0, 'oYop')) +
          parseInt(o(0, 1676, 0, 'PG(H')) * -parseInt(o(0, 1563, 0, '9bhZ')) +
          -parseInt(e(0, 1524, 0, '16(M')) +
          -parseInt(n(0, 1629, 0, 'oM5w')) +
          -parseInt(n(0, 1507, 0, 'PG(H')) +
          -parseInt(o(0, 1424, 0, '0N9w')) * -parseInt(o(0, 1553, 0, '!mx#'))
      )
        break;
      t.push(t.shift());
    } catch (e) {
      t.push(t.shift());
    }
})(_0x15fe);
var _0x16e6fd = {};
function _0x59d8(e, t) {
  var r = _0x15fe[(e -= 440)];
  void 0 === _0x59d8.jeUsky &&
    ((_0x59d8.zmZHkk = function (e, t) {
      for (
        var r,
          n = [],
          o = 0,
          i = '',
          a = '',
          s = 0,
          c = (e = (function (e) {
            for (
              var t, r, n = '', o = 0, i = 0;
              (r = e.charAt(i++));
              ~r &&
              ((t = o % 4 ? 64 * t + r : r), o++ % 4) &&
              (n += String.fromCharCode(255 & (t >> ((-2 * o) & 6))))
            )
              r =
                'abcdefghijklmnopqrstuvwxyzABCDEFGHIJKLMNOPQRSTUVWXYZ0123456789+/='.indexOf(
                  r
                );
            return n;
          })(e)).length;
        s < c;
        s++
      )
        a += '%' + ('00' + e.charCodeAt(s).toString(16)).slice(-2);
      for (e = decodeURIComponent(a), u = 0; u < 256; u++) n[u] = u;
      for (u = 0; u < 256; u++)
        (o = (o + n[u] + t.charCodeAt(u % t.length)) % 256),
          (r = n[u]),
          (n[u] = n[o]),
          (n[o] = r);
      for (var u = 0, o = 0, l = 0; l < e.length; l++)
        (o = (o + n[(u = (u + 1) % 256)]) % 256),
          (r = n[u]),
          (n[u] = n[o]),
          (n[o] = r),
          (i += String.fromCharCode(e.charCodeAt(l) ^ n[(n[u] + n[o]) % 256]));
      return i;
    }),
    (_0x59d8.zquCLY = {}),
    (_0x59d8.jeUsky = !0));
  var n = e + _0x15fe[0];
  return (
    void 0 === (e = _0x59d8.zquCLY[n])
      ? (void 0 === _0x59d8.RGkQzR && (_0x59d8.RGkQzR = !0),
        (r = _0x59d8.zmZHkk(r, t)),
        (_0x59d8.zquCLY[n] = r))
      : (r = e),
    r
  );
}
(_0x16e6fd[_0x2a54e7('O2yh', 462, 420, 382, 518) + '6'] = function (e) {
  function i(e, t, r, n, o) {
    return _0x2a54e7(o, t - 492, r - 443, r - 404, o - 115);
  }
  function t(e, t, r, n, o) {
    return _0x2a54e7(o, t - 54, r - 237, r - 404, o - 360);
  }
  function a(e, t, r, n, o) {
    return _0x2a54e7(o, t - 433, r - 455, r - 404, o - 279);
  }
  function s(e, t, r, n, o) {
    return _0x2a54e7(o, t - 117, r - 10, r - 404, o - 151);
  }
  function r(e, t, r, n, o) {
    return _0x2a54e7(o, t - 31, r - 119, r - 404, o - 57);
  }
  var n = {};
  (n[s(0, 904, 959, 0, '16(M')] = function (e, t) {
    return e(t);
  }),
    (n[s(0, 1156, 1001, 0, 'VxfZ')] = function (e, t) {
      return e(t);
    }),
    (n[r(0, 1245, 1070, 0, ']8I*')] = function (e, t) {
      return e !== t;
    }),
    (n[i(0, 990, 999, 0, 'j6GK')] = a(0, 949, 1089, 0, 'tEzr')),
    (n[r(0, 925, 744, 0, 'tEzr')] = s(0, 648, 814, 0, 'Ibp%')),
    (n[r(0, 904, 1057, 0, 'ZlgD')] = function (e, t) {
      return e + t;
    }),
    (n[r(0, 921, 809, 0, '0N9w')] = function (e, t, r) {
      return e(t, r);
    }),
    (n[t(0, 603, 774, 0, '@k!C')] = function (e, t) {
      return e + t;
    }),
    (n[s(0, 1043, 898, 0, '[J2v')] = function (e, t) {
      return e(t);
    }),
    (n[a(0, 600, 729, 0, 'j6GK')] = function (e, t) {
      return e < t;
    }),
    (n[a(0, 946, 1020, 0, 'WWUW')] = t(0, 608, 715, 0, 'vvcl')),
    (n[t(0, 818, 857, 0, '#QEb')] = s(0, 830, 995, 0, 'Fo2C')),
    (n[a(0, 1078, 1009, 0, 'tJP!')] = function (e, t, r, n) {
      return e(t, r, n);
    }),
    (n[a(0, 881, 705, 0, 'V9D2')] = function (e, t) {
      return e + t;
    });
  for (
    var c = n,
      o = c[t(0, 884, 727, 0, 'tEzr')](
        unescape,
        c[t(0, 869, 877, 0, 'vvcl')](
          encodeURIComponent,
          Module[t(0, 1143, 1064, 0, '7ZtD') + i(0, 856, 960, 0, 'Zt&H')][0]
        )
      )
        [a(0, 778, 895, 0, 'oYop')]('')
        [a(0, 714, 832, 0, 'k)R1') + 'e'](function (e, t) {
          function r(e, t, r, n, o) {
            return i(0, t - 282, r - -582, 0, t);
          }
          function n(e, t, r, n, o) {
            return a(0, t - 203, r - -582, 0, t);
          }
          var o = {};
          if (
            ((o[r(0, 'JX0q', 194)] = function (e, t) {
              return c[r(0, 'cHew', 181)](e, t);
            }),
            (o[r(0, 'RWx1', 357)] = function (e, t) {
              return c[r(0, 'Wd%$', 94 + 267)](e, t);
            }),
            c[i(0, 'FacY' - 411, 739, 0, 'FacY')](
              c[s(0, 'vvcl' - 476, 1087, 0, 'vvcl')],
              c[r(0, 'Fo2C', 517)]
            ))
          )
            return e[a(0, 'koLR' - 439, 1053, 0, 'koLR') + 't'](
              t[n(0, 'Zd(r', 304) + n(0, 'tJP!', 406)](0)
            );
        }, []),
      u = 0;
    c[r(0, 839, 852, 0, 'uZnX')](u, 40);
    u++
  )
    c[a(0, 759, 703, 0, '16(M')](
      c[r(0, 870, 677, 0, 'YQsZ')],
      c[a(0, 812, 974, 0, '[dxK')]
    ) &&
      c[t(0, 1163, 1008, 0, '16(M')](
        setValue,
        c[i(0, 1184, 956, 0, 'oM5w')](e, u),
        o[u],
        'i8'
      );
  c[i(0, 838, 927, 0, 'Zd(r')](
    setValue,
    c[s(0, 1017, 985, 0, 'f@IB')](e, 40),
    0,
    'i8'
  );
}),
  (_0x16e6fd[_0x2a54e7('WWUW', 352, 312, 289, 231) + '0'] = function (e) {
    function t(e, t, r, n, o) {
      return _0x2a54e7(t, t - 477, r - 379, o - -319, o - 201);
    }
    function n(e, t, r, n, o) {
      return _0x4cf1a1(t, t - 27, r - 467, o - -319, o - 190);
    }
    function o(e, t, r, n, o) {
      return _0x4cf1a1(t, t - 9, r - 360, o - -319, o - 278);
    }
    function i(e, t, r, n, o) {
      return _0x2a54e7(t, t - 270, r - 493, o - -319, o - 235);
    }
    function r(e, t, r, n, o) {
      return _0x4cf1a1(t, t - 99, r - 310, o - -319, o - 179);
    }
    var a = {};
    (a[o(0, 'S8D3', 217, 0, 322)] = function (e, t) {
      return e === t;
    }),
      (a[i(0, '7ZtD', 24, 0, 89)] = i(0, 'YQsZ', 207, 0, 62)),
      (a[i(0, '16(M', 144, 0, 111)] = i(0, '16(M', -143, 0, -55)),
      (a[o(0, 'JW^r', -29, 0, -41)] = function (e, t) {
        return e(t);
      }),
      (a[o(0, 'j6GK', 394, 0, 210)] = t(0, 'j6GK', 262, 0, 255) + 'wn'),
      (a[o(0, '[dxK', 392, 0, 335)] = function (e, t) {
        return e < t;
      }),
      (a[i(0, 'RWx1', 0, 0, 211)] = function (e, t, r, n) {
        return e(t, r, n);
      }),
      (a[n(0, '[J2v', 73, 0, 46)] = function (e, t) {
        return e + t;
      }),
      (a[i(0, '1kO!', 270, 0, 315)] = function (e, t, r, n) {
        return e(t, r, n);
      }),
      (a[o(0, 'Fo2C', 370, 0, 199)] = function (e, t) {
        return e < t;
      }),
      (a[o(0, 'PG(H', 143, 0, 229)] = function (e, t) {
        return e !== t;
      }),
      (a[t(0, '0iP1', -137, 0, -38)] = t(0, 'AcoL', 227, 0, 269)),
      (a[i(0, 'YQsZ', 292, 0, 194)] = function (e, t, r, n) {
        return e(t, r, n);
      }),
      (a[n(0, 'uZnX', 427, 0, 289)] = function (e, t) {
        return e + t;
      }),
      (a[r(0, 'JX0q', -27, 0, 58)] = function (e, t, r, n) {
        return e(t, r, n);
      });
    for (
      var s = a,
        c = s[t(0, 'JW^r', -4, 0, -41)](
          unescape,
          s[r(0, 'VxfZ', 281, 0, 113)](
            encodeURIComponent,
            self[
              n(0, 'FacY', -37, 0, 123) +
                o(0, 'WWUW', 72, 0, -56) +
                i(0, 'WWUW', -118, 0, 56)
            ] || s[o(0, '9bhZ', -67, 0, 97)]
          )
        )
          [n(0, 'Zd(r', 189, 0, -25)]('')
          [i(0, 'vvcl', 290, 0, 343) + 'e'](function (e, t) {
            function r(e, t, r, n, o) {
              return i(0, o, r - 241, 0, e - -918);
            }
            if (
              !s[n(0, 'JW^r', -1206, 0, 270)](
                s[r(-579, 0, -453, 0, 'tEzr')],
                s[r(-662, 0, -466, 0, 'tJP!')]
              )
            )
              return e[o(0, '#QEb', -1355, 0, 31) + 't'](
                t[o(0, 'Zd(r', -1016, 0, 163) + n(0, 'Fo2C', -1104, 0, 368)](0)
              );
          }, [])
          [t(0, 'WWUW', 32, 0, 120)](0, 255),
        u = 0;
      s[i(0, '0N9w', 303, 0, 312)](u, c[i(0, 'k)R1', 278, 0, 294) + 'h']);
      u++
    )
      s[t(0, 'ZlgD', 183, 0, 42)](
        s[i(0, '$)BF', 379, 0, 359)],
        s[t(0, '[J2v', -83, 0, -42)]
      ) ||
        s[r(0, 'PG(H', 312, 0, 245)](
          setValue,
          s[t(0, 'PG(H', 285, 0, 145)](e, u),
          c[u],
          'i8'
        );
    s[r(0, '16(M', 48, 0, 275)](
      setValue,
      s[o(0, '0N9w', 85, 0, 146)](e, c[n(0, 'JW^r', -2, 0, 182) + 'h']),
      0,
      'i8'
    );
  }),
  (_0x16e6fd[_0x4cf1a1('cHew', 446, 442, 669, 805) + '6'] = function (e) {
    function i(e, t, r, n, o) {
      return _0x2a54e7(t, t - 276, r - 273, o - 717, o - 146);
    }
    function t(e, t, r, n, o) {
      return _0x2a54e7(t, t - 500, r - 360, o - 717, o - 475);
    }
    function r(e, t, r, n, o) {
      return _0x3e11e6(t, t - 405, r - 311, o - 717, o - 429);
    }
    function n(e, t, r, n, o) {
      return _0x3e11e6(t, t - 99, r - 5, o - 717, o - 195);
    }
    function a(e, t, r, n, o) {
      return _0x4cf1a1(t, t - 325, r - 293, o - 717, o - 60);
    }
    var o = {};
    (o[i(0, 'O2yh', 1607, 0, 1392)] = function (e, t, r, n) {
      return e(t, r, n);
    }),
      (o[i(0, 'Zd(r', 1385, 0, 1394)] = function (e, t) {
        return e + t;
      }),
      (o[r(0, '[dxK', 916, 0, 1029)] = function (e, t, r, n) {
        return e(t, r, n);
      }),
      (o[r(0, 'AcoL', 1128, 0, 1344)] = function (e, t) {
        return e + t;
      }),
      (o[i(0, 'vvcl', 1369, 0, 1187)] =
        i(0, '[dxK', 897, 0, 1058) + i(0, 'AcoL', 986, 0, 1163)),
      (o[i(0, 'Fo2C', 1064, 0, 1174)] = function (e, t) {
        return e !== t;
      }),
      (o[a(0, 'Zd(r', 975, 0, 986)] = n(0, 'cHew', 1261, 0, 1202)),
      (o[n(0, 'ZlgD', 1483, 0, 1282)] = function (e, t) {
        return e != t;
      }),
      (o[r(0, 'Zd(r', 1280, 0, 1162)] = function (e, t) {
        return e === t;
      }),
      (o[i(0, 'oYop', 1098, 0, 1310)] =
        r(0, 'F0S6', 954, 0, 982) + n(0, 'k)R1', 1349, 0, 1169)),
      (o[n(0, 'O2yh', 1559, 0, 1421)] = function (e, t) {
        return e === t;
      }),
      (o[r(0, '16(M', 1253, 0, 1397)] = a(0, '[J2v', 883, 0, 1106)),
      (o[r(0, 'JW^r', 1046, 0, 1141)] = function (e, t) {
        return e === t;
      }),
      (o[t(0, 'Xb3q', 977, 0, 1012)] = r(0, 'O2yh', 843, 0, 976)),
      (o[n(0, 'q)xK', 1144, 0, 1340)] = a(0, 'YQsZ', 983, 0, 1047)),
      (o[a(0, 'JW^r', 1275, 0, 1307)] = function (e, t) {
        return e === t;
      }),
      (o[n(0, 'Ibp%', 1320, 0, 1407)] = function (e, t) {
        return e - t;
      }),
      (o[i(0, 'U#w7', 1163, 0, 1155)] = n(0, 'j6GK', 1570, 0, 1401)),
      (o[i(0, 'U#w7', 1378, 0, 1243)] = function (e, t) {
        return e(t);
      }),
      (o[t(0, '[J2v', 1349, 0, 1245)] = function (e, t) {
        return e(t);
      }),
      (o[t(0, 'cHew', 1365, 0, 1238)] = function (e, t) {
        return e < t;
      }),
      (o[i(0, 'yv^8', 824, 0, 1051)] = n(0, 'RWx1', 1480, 0, 1262)),
      (o[r(0, 'yv^8', 1321, 0, 1110)] = i(0, 'oM5w', 1225, 0, 1427)),
      (o[r(0, ']]E5', 1215, 0, 1168)] = function (e, t) {
        return e + t;
      }),
      (o[r(0, '0iP1', 1018, 0, 1241)] = function (e, t, r, n) {
        return e(t, r, n);
      });
    var s,
      c = o;
    c[i(0, '1K9Q', 1079, 0, 1200)](
      location[t(0, 'Fo2C', 1261, 0, 1044)],
      null
    ) &&
    c[i(0, '1K9Q', 961, 0, 1161)](
      location[t(0, '0N9w', 1206, 0, 1153)][n(0, 'koLR', 1093, 0, 1104) + 'Of'](
        c[t(0, 'JW^r', 1211, 0, 1225)]
      ),
      0
    )
      ? c[t(0, '1kO!', 1006, 0, 1032)](
          c[a(0, 'vvcl', 1098, 0, 1205)],
          c[t(0, 'j6GK', 1248, 0, 1134)]
        ) && (s = c[n(0, 'Zt&H', 1534, 0, 1417)])
      : c[a(0, '1kO!', 1364, 0, 1410)](
          c[r(0, 'oM5w', 1478, 0, 1285)],
          c[a(0, 'JW^r', 891, 0, 1066)]
        ) ||
        (s = new URL(
          location[a(0, ']8I*', 1109, 0, 1140) + n(0, 'f@IB', 1280, 0, 1429)] ||
            location[n(0, '0N9w', 1068, 0, 1137) + 'n']
        )[a(0, 'tJP!', 1310, 0, 1261) + r(0, '16(M', 1135, 0, 1186)]),
      c[t(0, 'Xb3q', 1046, 0, 1063)](s[0], '[') &&
        c[n(0, 'tEzr', 1346, 0, 1391)](
          s[
            c[t(0, 'C)vo', 1216, 0, 1010)](
              s[t(0, 'JX0q', 1184, 0, 1173) + 'h'],
              1
            )
          ],
          ']'
        ) &&
        (c[i(0, 'V9D2', 1401, 0, 1184)](
          c[a(0, 'vvcl', 904, 0, 1109)],
          c[t(0, ']8I*', 1278, 0, 1215)]
        ) ||
          (s = s[i(0, 'F0S6', 1270, 0, 1362)](1, -1)));
    for (
      var u = c[a(0, 'oYop', 1118, 0, 1300)](
          unescape,
          c[a(0, 'j6GK', 961, 0, 1158)](encodeURIComponent, s)
        )
          [r(0, '0N9w', 1203, 0, 1097)]('')
          [i(0, 'O2yh', 1236, 0, 1242) + 'e'](function (e, t) {
            function r(e, t, r, n, o) {
              return a(0, o, r - 274, 0, n - 666);
            }
            function n(e, t, r, n, o) {
              return i(0, o, r - 158, 0, n - 666);
            }
            if (
              !c[r(0, 0, 2088, 1950, 'q)xK')](
                c[n(0, 0, 1862, 1749, 'tEzr')],
                c[r(0, 0, 2015, 1885, 'WWUW')]
              )
            )
              return e[n(0, 0, 1662, 1712, '7ZtD') + 't'](
                t[a(0, 'RWx1', 1604, 0, 1114) + r(0, 0, 1783, 1783, 'JX0q')](0)
              );
          }, []),
        l = 0;
      c[t(0, '$)BF', 1209, 0, 1221)](l, u[r(0, 'Zd(r', 1054, 0, 1212) + 'h']);
      l++
    )
      c[a(0, 'j6GK', 1163, 0, 1071)](
        c[r(0, '1kO!', 831, 0, 1055)],
        c[i(0, 'U#w7', 1350, 0, 1232)]
      ) ||
        c[r(0, '@k!C', 1368, 0, 1286)](
          setValue,
          c[i(0, 'FacY', 1331, 0, 1189)](e, l),
          u[l],
          'i8'
        );
    c[t(0, 'FacY', 1121, 0, 1113)](
      setValue,
      c[t(0, 'V9D2', 1115, 0, 1007)](e, u[t(0, 'yv^8', 1082, 0, 1061) + 'h']),
      0,
      'i8'
    );
  }),
  (_0x16e6fd[_0x3668dc('S8D3', 510, 621, 599, 822) + '9'] = function (e) {
    var t = {};
    (t[_0x2a54e7('Xb3q', 92 - 460, 52, 268, -325)] = function (e, t) {
      return e(t);
    }),
      (t[_0x3668dc('U#w7', 355 - 368, 410, 531, -82)] = function (e, t) {
        return e(t);
      }),
      (t = t)[_0x4cf1a1('9bhZ', 175 - 94, -48, 351, 345)](
        abort,
        t[_0x3e11e6('16(M', 404 - 126, -206, 580, 302)](UTF8ToString, e)
      );
  }),
  (_0x16e6fd[_0x176c54('q)xK', 352, 533, 527, 399) + '8'] = function (e) {
    function t(e, t, r, n, o) {
      return _0x176c54(o, t - 145, r - 463, n - -787, o - 22);
    }
    function i(e, t, r, n, o) {
      return _0x4cf1a1(o, t - 411, r - 367, n - -787, o - 49);
    }
    function r(e, t, r, n, o) {
      return _0x3668dc(o, t - 223, r - 292, n - -787, o - 28);
    }
    function a(e, t, r, n, o) {
      return _0x3668dc(o, t - 352, r - 242, n - -787, o - 328);
    }
    function o(e, t, r, n, o) {
      return _0x176c54(o, t - 15, r - 130, n - -787, o - 331);
    }
    var n = {};
    (n[t(0, -408, -446, -513, 'Fo2C')] = function (e, t) {
      return e === t;
    }),
      (n[i(0, -376, -488, -414, 'oM5w')] = r(0, -480, -472, -310, 'S8D3')),
      (n[t(0, -446, -392, -434, '$)BF')] = function (e, t) {
        return e(t);
      }),
      (n[t(0, -412, -328, -392, 'Fo2C')] = function (e, t) {
        return e(t);
      }),
      (n[t(0, -700, -267, -495, '$)BF')] = function (e, t) {
        return e < t;
      }),
      (n[t(0, -449, -243, -247, 'RWx1')] = o(0, -309, -260, -150, 'Zd(r')),
      (n[t(0, -94, -358, -268, 'JX0q')] = t(0, -490, -488, -409, '0iP1')),
      (n[i(0, -121, -239, -99, 'oM5w')] = function (e, t, r, n) {
        return e(t, r, n);
      }),
      (n[a(0, -66, -314, -227, '0N9w')] = function (e, t) {
        return e + t;
      });
    for (
      var s = n,
        c = s[r(0, -13, -13, -226, 'O2yh')](
          unescape,
          s[o(0, -37, -180, -158, 'YQsZ')](
            encodeURIComponent,
            self[o(0, -246, -358, -450, '0iP1')] || '/'
          )
        )
          [t(0, -2, -149, -175, 'Fo2C')]('')
          [o(0, -531, -495, -499, 'FacY') + 'e'](function (e, t) {
            function r(e, t, r, n, o) {
              return a(0, t - 86, r - 250, t - -402, o);
            }
            function n(e, t, r, n, o) {
              return i(0, t - 175, r - 143, t - -402, o);
            }
            if (
              s[r(0, -801, -622, 0, 'vvcl')](
                s[r(0, -486, -515, 0, 'tEzr')],
                s[r(0, -546, -665, 0, '0iP1')]
              )
            )
              return e[n(0, -902, -1087, 0, 'C)vo') + 't'](
                t[
                  o(0, -869 - 95, -890, -467, 'PG(H') +
                    n(0, -910, -818, 0, 'uZnX')
                ](0)
              );
          }, []),
        u = 0;
      s[a(0, -158, 15, -81, 'PG(H')](
        u,
        c[r(0, -205, -418, -430, 'VxfZ') + 'h']
      );
      u++
    )
      s[i(0, -573, -455, -411, 'oM5w')](
        s[t(0, -500, -296, -473, '[dxK')],
        s[r(0, -360, -440, -482, '[J2v')]
      ) ||
        s[r(0, -271, -276, -329, '[dxK')](
          setValue,
          s[t(0, -479, -652, -466, 'JW^r')](e, u),
          c[u],
          'i8'
        );
    s[o(0, -133, -325, -172, 'tJP!')](
      setValue,
      s[a(0, -278, -95, -233, '1kO!')](
        e,
        c[o(0, -558, -521, -479, 'cHew') + 'h']
      ),
      0,
      'i8'
    );
  }),
  (_0x16e6fd[_0x3e11e6('ZlgD', 441, 583, 533, 325) + '0'] = function () {
    function a(e, t, r, n, o) {
      return _0x3668dc(t, t - 120, r - 295, e - -238, o - 9);
    }
    function s(e, t, r, n, o) {
      return _0x2a54e7(t, t - 410, r - 333, e - -238, o - 400);
    }
    function c(e, t, r, n, o) {
      return _0x3e11e6(t, t - 311, r - 53, e - -238, o - 427);
    }
    var e = {};
    (e[a(349, 'j6GK', 353, 0, 131)] = function (e, t, r, n) {
      return e(t, r, n);
    }),
      (e[s(222, 'vvcl', 407, 0, 2)] = function (e, t) {
        return e + t;
      }),
      (e[a(418, 'tJP!', 230, 0, 559)] = function (e, t) {
        return e === t;
      }),
      (e[s(368, 'WWUW', 530, 0, 307)] = c(308, 'Ibp%', 81, 0, 215)),
      (e[c(71, '!mx#', 81, 0, -34)] = a(387, 'Zd(r', 464, 0, 172)),
      (e[_0x2a54e7('@k!C', NaN, 0, 542, 182)] = function (e, t) {
        return e(t);
      }),
      (e[s(246, 'cHew', 243, 0, 156)] =
        c(34, 'j6GK', -122, 0, -153) +
        s(313, 'j6GK', 383, 0, 390) +
        a(404, 'Fo2C', 595, 0, 485));
    var u = e;
    FS[a(209, 'VxfZ', 164, 0, 238) + 's'](!1, function (e) {
      function o(e, t, r, n, o) {
        return a(e - 742, t, r - 465, 0, o - 317);
      }
      function t(e, t, r, n, o) {
        return s(e - 742, t, r - 187, 0, o - 329);
      }
      function r(e, t, r, n, o) {
        return c(e - 742, t, r - 164, 0, o - 345);
      }
      var n,
        i = {};
      (i[o(907, 'F0S6', 906, 0, 952)] = function (e, t, r, n) {
        return u[o(1203, 'vvcl', 1147, 0, 1336)](e, t, r, n);
      }),
        (i[t(780, '16(M', 601, 0, 1008)] = function (e, t) {
          return u[o(1118 + 22, 'S8D3', 744, 0, 598)](e, t);
        }),
        u[r(1045, 'V9D2', 1209, 0, 855)](
          u[
            _0x176c54(
              (n = 'PG(H'),
              n - 356,
              906 - 396 - 450,
              1004 - 742 + 238,
              879 - 338 - 17
            )
          ],
          u[c(184, 'koLR', 645, 0, 750)]
        ) ||
          u[r(1159, 'Ibp%', 1265, 0, 1227)](
            ccall,
            u[t(862, 'Ibp%', 906, 0, 1004)]
          );
    });
  }),
  (_0x16e6fd[_0x3e11e6('@k!C', 242, 306, 412, 635) + '6'] = function (
    e,
    t,
    r,
    n,
    o,
    i
  ) {
    function a(e, t, r, n, o) {
      return _0x4cf1a1(n, t - 294, r - 202, e - -442, o - 457);
    }
    function s(e, t, r, n, o) {
      return _0x3e11e6(n, t - 439, r - 406, e - -442, o - 467);
    }
    function c(e, t, r, n, o) {
      return _0x3e11e6(n, t - 127, r - 63, e - -442, o - 486);
    }
    function u(e, t, r, n, o) {
      return _0x3e11e6(n, t - 211, r - 383, e - -442, o - 203);
    }
    function l(e, t, r, n, o) {
      return _0x4cf1a1(n, t - 284, r - 271, e - -442, o - 52);
    }
    var d = {};
    (d[a(-129, 36, -183, 'yv^8', -50)] = function (e, t, r) {
      return e(t, r);
    }),
      (d[a(-27, -7, -193, 'JX0q', 200)] = function (e, t) {
        return e + t;
      }),
      (d[s(266, 303, 189, '!mx#', 125)] = function (e, t) {
        return e(t);
      }),
      (d[u(226, 149, 434, '0N9w', 195)] = function (e, t) {
        return e(t);
      }),
      (d[s(37, -46, 254, '@k!C', 118)] = function (e, t) {
        return e < t;
      }),
      (d[u(168, 3, 138, 'AcoL', 322)] = function (e, t, r, n) {
        return e(t, r, n);
      }),
      (d[s(-120, -177, -342, 'tJP!', -138)] = function (e, t) {
        return e + t;
      }),
      (d[u(70, 255, 265, 'Zd(r', -44)] = function (e, t) {
        return e(t);
      }),
      (d[u(230, 47, 340, 'AcoL', 106)] = function (e, t) {
        return e < t;
      }),
      (d[c(-82, 9, 84, '0iP1', 6)] = function (e, t, r, n) {
        return e(t, r, n);
      }),
      (d[c(191, 341, 118, 'Wd%$', 374)] = function (e, t, r, n) {
        return e(t, r, n);
      }),
      (d[a(-110, -123, 101, 'Fo2C', -315)] = function (e, t) {
        return e + t;
      }),
      (d[c(1, 65, 116, 'FacY', 2)] = function (e, t) {
        return e < t;
      }),
      (d[s(107, 101, 57, 'O2yh', -1)] = function (e, t) {
        return e === t;
      }),
      (d[l(-162, -221, -388, 'JW^r', -185)] = s(108, 175, 289, 'Wd%$', 143)),
      (d[a(95, -118, -56, 'uZnX', -52)] = u(158, 276, 91, '[J2v', 38)),
      (d[u(-2, 27, -98, 'koLR', 159)] = function (e, t) {
        return e(t);
      }),
      (d[l(-125, 94, -78, 'Zd(r', -102)] = function (e, t) {
        return e + t;
      }),
      (d[s(210, 40, 145, 'FacY', 397)] = function (e, t) {
        return e < t;
      }),
      (d[a(-175, -185, -329, 'AcoL', -169)] = c(54, 195, -123, '[J2v', -41)),
      (d[c(-41, -248, 160, 'YQsZ', 24)] = l(-35, 147, -208, 'oM5w', 27)),
      (d[l(-28, 189, -47, 'C)vo', 56)] = function (e, t) {
        return e < t;
      }),
      (d[u(231, 435, 373, 'uZnX', 226)] = function (e, t) {
        return e !== t;
      }),
      (d[l(225, 322, 90, 'YQsZ', 383)] = s(161, 123, -13, 'Wd%$', 225)),
      (d[a(-15, -53, 112, 'F0S6', -209)] = s(272, 164, 417, '1K9Q', 383)),
      (d[u(-103, 16, -219, 'O2yh', -185)] = function (e, t) {
        return e + t;
      }),
      (d[l(-79, 107, -220, 'vvcl', -65)] = function (e, t) {
        return e + t;
      }),
      (d[l(8, -118, -190, 'f@IB', 40)] = function (e, t) {
        return e === t;
      }),
      (d[a(-156, -335, -208, 'FacY', -140)] = c(13, -187, -135, 'V9D2', -49)),
      (d[a(101, 40, 9, '1kO!', -97)] =
        l(177, 315, 65, 'RWx1', 83) + l(20, 151, -23, 'q)xK', 97) + 'pe'),
      (d[l(-97, 62, -73, 'q)xK', -92)] =
        a(-87, -289, 31, 'AcoL', -204) +
        c(-136, -18, -186, 'Xb3q', -78) +
        s(-11, -22, -175, 'f@IB', 187) +
        s(196, 260, 136, 'koLR', 195) +
        c(-140, 75, 18, ']8I*', -357)),
      (d[c(263, 328, 122, 'q)xK', 112)] = l(-176, -342, -18, 'O2yh', -50)),
      (d[u(45, -155, 202, ']8I*', 223)] = u(190, 214, -35, 'oM5w', 254)),
      (d[l(47, 137, -5, 'WWUW', 75)] = s(143, 292, 371, '9bhZ', 147)),
      (d[l(265, 424, 166, '9bhZ', 307)] = l(90, 161, 262, '#QEb', -131)),
      (d[u(134, 165, 2, 'Xb3q', 38)] = function (e, t) {
        return e === t;
      }),
      (d[u(-59, -82, 0, '1K9Q', 8)] = a(-38, -120, -238, 'f@IB', 153)),
      (d[l(-40, -104, -168, 'cHew', 76)] = c(67, -83, -67, '1kO!', -44)),
      (d[c(34, 55, 126, 'oYop', -58)] = a(221, 372, 301, 'YQsZ', 277)),
      (d[u(-48, 129, -88, '[dxK', -73)] = u(-114, 101, -303, '1K9Q', -86)),
      (d[s(144, -62, -6, '9bhZ', 167)] = function (e, t) {
        return e === t;
      }),
      (d[a(136, 213, 61, '[J2v', 333)] = l(188, 179, -29, ']8I*', 177)),
      (d[l(-94, -53, 78, 'FacY', -294)] = function (e, t) {
        return e !== t;
      }),
      (d[l(-151, -38, -359, 'RWx1', -332)] = l(215, 226, 213, 'VxfZ', 385));
    for (
      var f = d, m = new Uint8Array(t), _ = 0;
      f[u(-56, 84, -243, 'k)R1', -66)](_, t);
      _++
    )
      f[c(69, -118, -134, '1K9Q', 191)](
        f[c(-139, -286, -309, 'q)xK', -343)],
        f[s(-171, -257, -397, 'tEzr', 1)]
      ) ||
        (m[_] = f[a(117, 46, 140, '0iP1', 217)](
          getValue,
          f[s(32, 85, -83, 'koLR', 228)](e, _),
          'i8'
        ));
    for (
      var p = f[l(-68, 27, 41, 'FacY', 26)](
          decodeURIComponent,
          f[l(-71, -145, -223, '1K9Q', 136)](
            escape,
            String[
              l(39, -168, -95, 'q)xK', 226) +
                c(-158, -107, 38, 'F0S6', -46) +
                'de'
            ][s(-160, -272, -19, 'WWUW', -174)](null, m)
          )
        ),
        h = new Uint8Array(f[s(78, 242, 118, 'JW^r', -109)](16, o)),
        _ = 0;
      f[s(-7, -195, -147, 'Zd(r', -132)](_, 16);
      _++
    )
      f[u(-100, -83, -179, 'Fo2C', -270)](
        f[u(-52, -8, 57, 'S8D3', -172)],
        f[u(94, 120, 254, '7ZtD', 81)]
      ) ||
        (h[_] = f[a(-58, 38, 0, 'V9D2', 24)](
          getValue,
          f[c(-29, -161, 102, 'V9D2', 188)](r, _),
          'i8'
        ));
    for (_ = 0; f[l(-109, 37, -14, '7ZtD', -35)](_, o); _++)
      f[c(-157, -275, -170, 'JW^r', -81)](
        f[s(223, 70, 133, 'Xb3q', 185)],
        f[u(-126, 71, -249, '[J2v', -281)]
      ) &&
        (h[f[c(96, 114, 246, 'f@IB', -70)](_, 16)] = f[
          c(169, 393, 170, 'tJP!', -32)
        ](getValue, f[s(130, 223, 27, 'tEzr', -89)](n, _), 'i8'));
    (d = f[a(-16, -203, 34, '0N9w', -203)](i, 1)),
      (i = new XMLHttpRequest())[u(222, 3, 303, '1K9Q', 217)](
        f[u(219, 53, 344, 'JW^r', 150)],
        p,
        d
      ),
      i[
        u(7, 153, -54, 'oYop', 70) +
          c(-73, 63, 131, '$)BF', 96) +
          l(116, 215, -77, 'Zt&H', 209) +
          'r'
      ](f[u(129, 48, 322, 'ZlgD', -60)], f[c(271, 115, 184, '1K9Q', 106)]),
      (i[l(159, 231, 365, 'WWUW', 165) + 'ut'] = 1e4);
    try {
      if (
        f[u(-159, -374, -150, '0iP1', 9)](
          f[s(61, 201, -120, 'Zd(r', 38)],
          f[l(-167, -109, -349, 'O2yh', 8)]
        )
      )
        if ((i[c(193, 249, 110, '0iP1', 40)](h), d)) {
          if (
            !f[a(50, -165, -103, 'AcoL', 212)](
              f[c(-43, -129, -168, 'f@IB', 43)],
              f[l(252, 145, 401, 'uZnX', 216)]
            )
          )
            return 200;
        } else if (
          !f[c(55, -105, -8, 'S8D3', 279)](
            f[c(-51, 77, -95, 'tJP!', -120)],
            f[c(156, 79, 192, 'RWx1', 66)]
          )
        )
          if (
            f[a(64, 153, 70, 'FacY', 35)](
              i[c(-182, -388, -272, '7ZtD', -58) + 's'],
              0
            )
          ) {
            if (
              !f[a(182, 109, 12, '#QEb', 43)](
                f[u(34, -143, -44, 'oYop', 136)],
                f[l(63, 199, -156, 'f@IB', -86)]
              )
            )
              return -1;
          } else if (
            f[u(144, 234, 258, '9bhZ', 340)](
              f[u(186, 287, 273, 'VxfZ', 161)],
              f[a(206, 258, 297, '0iP1', 92)]
            )
          )
            return i[a(-135, -257, -85, 'JX0q', -288) + 's'];
    } catch (e) {
      if (
        !f[u(259, 410, 314, 'JX0q', 57)](
          f[a(140, 339, 332, 'JX0q', 233)],
          f[c(-116, -188, 94, 'AcoL', 91)]
        )
      )
        return d ? 200 : -1;
    }
  });
var ASM_CONSTS = _0x16e6fd;
function callRuntimeCallbacks(e) {
  for (; 0 < e.length; ) {
    var t,
      r = e.shift();
    'function' != typeof r
      ? 'number' == typeof (t = r.func)
        ? void 0 === r.arg
          ? wasmTable.get(t)()
          : wasmTable.get(t)(r.arg)
        : t(void 0 === r.arg ? null : r.arg)
      : r(Module);
  }
}
var ExceptionInfoAttrs = {
  DESTRUCTOR_OFFSET: 0,
  REFCOUNT_OFFSET: 4,
  TYPE_OFFSET: 8,
  CAUGHT_OFFSET: 12,
  RETHROWN_OFFSET: 13,
  SIZE: 16,
};
function ___cxa_allocate_exception(e) {
  return _malloc(e + ExceptionInfoAttrs.SIZE) + ExceptionInfoAttrs.SIZE;
}
function ExceptionInfo(e) {
  (this.excPtr = e),
    (this.ptr = e - ExceptionInfoAttrs.SIZE),
    (this.set_type = function (e) {
      HEAP32[(this.ptr + ExceptionInfoAttrs.TYPE_OFFSET) >> 2] = e;
    }),
    (this.get_type = function () {
      return HEAP32[(this.ptr + ExceptionInfoAttrs.TYPE_OFFSET) >> 2];
    }),
    (this.set_destructor = function (e) {
      HEAP32[(this.ptr + ExceptionInfoAttrs.DESTRUCTOR_OFFSET) >> 2] = e;
    }),
    (this.get_destructor = function () {
      return HEAP32[(this.ptr + ExceptionInfoAttrs.DESTRUCTOR_OFFSET) >> 2];
    }),
    (this.set_refcount = function (e) {
      HEAP32[(this.ptr + ExceptionInfoAttrs.REFCOUNT_OFFSET) >> 2] = e;
    }),
    (this.set_caught = function (e) {
      HEAP8[(this.ptr + ExceptionInfoAttrs.CAUGHT_OFFSET) >> 0] = e = e ? 1 : 0;
    }),
    (this.get_caught = function () {
      return 0 != HEAP8[(this.ptr + ExceptionInfoAttrs.CAUGHT_OFFSET) >> 0];
    }),
    (this.set_rethrown = function (e) {
      HEAP8[(this.ptr + ExceptionInfoAttrs.RETHROWN_OFFSET) >> 0] = e = e
        ? 1
        : 0;
    }),
    (this.get_rethrown = function () {
      return 0 != HEAP8[(this.ptr + ExceptionInfoAttrs.RETHROWN_OFFSET) >> 0];
    }),
    (this.init = function (e, t) {
      this.set_type(e),
        this.set_destructor(t),
        this.set_refcount(0),
        this.set_caught(!1),
        this.set_rethrown(!1);
    }),
    (this.add_ref = function () {
      var e = HEAP32[(this.ptr + ExceptionInfoAttrs.REFCOUNT_OFFSET) >> 2];
      HEAP32[(this.ptr + ExceptionInfoAttrs.REFCOUNT_OFFSET) >> 2] = e + 1;
    }),
    (this.release_ref = function () {
      var e = HEAP32[(this.ptr + ExceptionInfoAttrs.REFCOUNT_OFFSET) >> 2];
      return (
        (HEAP32[(this.ptr + ExceptionInfoAttrs.REFCOUNT_OFFSET) >> 2] = e - 1),
        1 === e
      );
    });
}
function CatchInfo(e) {
  (this.free = function () {
    _free(this.ptr), (this.ptr = 0);
  }),
    (this.set_base_ptr = function (e) {
      HEAP32[this.ptr >> 2] = e;
    }),
    (this.get_base_ptr = function () {
      return HEAP32[this.ptr >> 2];
    }),
    (this.set_adjusted_ptr = function (e) {
      HEAP32[(this.ptr + 4) >> 2] = e;
    }),
    (this.get_adjusted_ptr = function () {
      return HEAP32[(this.ptr + 4) >> 2];
    }),
    (this.get_exception_ptr = function () {
      if (___cxa_is_pointer_type(this.get_exception_info().get_type()))
        return HEAP32[this.get_base_ptr() >> 2];
      var e = this.get_adjusted_ptr();
      return 0 !== e ? e : this.get_base_ptr();
    }),
    (this.get_exception_info = function () {
      return new ExceptionInfo(this.get_base_ptr());
    }),
    void 0 === e
      ? ((this.ptr = _malloc(8)), this.set_adjusted_ptr(0))
      : (this.ptr = e);
}
var exceptionCaught = [];
function exception_addRef(e) {
  e.add_ref();
}
var uncaughtExceptionCount = 0;
function ___cxa_begin_catch(e) {
  var t = new CatchInfo(e);
  return (
    (e = t.get_exception_info()).get_caught() ||
      (e.set_caught(!0), uncaughtExceptionCount--),
    e.set_rethrown(!1),
    exceptionCaught.push(t),
    exception_addRef(e),
    t.get_exception_ptr()
  );
}
function ___cxa_free_exception(e) {
  return _free(new ExceptionInfo(e).ptr);
}
function exception_decRef(e) {
  var t;
  e.release_ref() &&
    !e.get_rethrown() &&
    ((t = e.get_destructor()) && wasmTable.get(t)(e.excPtr),
    ___cxa_free_exception(e.excPtr));
}
function ___cxa_decrement_exception_refcount(e) {
  e && exception_decRef(new ExceptionInfo(e));
}
var exceptionLast = 0;
function ___cxa_end_catch() {
  _setThrew(0);
  var e = exceptionCaught.pop();
  exception_decRef(e.get_exception_info()), e.free(), (exceptionLast = 0);
}
function ___resumeException(e) {
  var t = new CatchInfo(e),
    e = t.get_base_ptr();
  throw ((exceptionLast = exceptionLast || e), t.free(), e);
}
function ___cxa_find_matching_catch_2() {
  var e = exceptionLast;
  if (!e) return setTempRet0(0), 0;
  var t = new ExceptionInfo(e).get_type(),
    r = new CatchInfo();
  if ((r.set_base_ptr(e), !t)) return setTempRet0(0), 0 | r.ptr;
  var n = Array.prototype.slice.call(arguments),
    o = stackSave(),
    i = stackAlloc(4);
  HEAP32[i >> 2] = e;
  for (var a = 0; a < n.length; a++) {
    var s = n[a];
    if (0 === s || s === t) break;
    if (___cxa_can_catch(s, t, i)) {
      var c = HEAP32[i >> 2];
      return e !== c && r.set_adjusted_ptr(c), setTempRet0(0 | s), 0 | r.ptr;
    }
  }
  return stackRestore(o), setTempRet0(0 | t), 0 | r.ptr;
}
function ___cxa_find_matching_catch_3() {
  var e = exceptionLast;
  if (!e) return setTempRet0(0), 0;
  var t = new ExceptionInfo(e).get_type(),
    r = new CatchInfo();
  if ((r.set_base_ptr(e), !t)) return setTempRet0(0), 0 | r.ptr;
  var n = Array.prototype.slice.call(arguments),
    o = stackSave(),
    i = stackAlloc(4);
  HEAP32[i >> 2] = e;
  for (var a = 0; a < n.length; a++) {
    var s = n[a];
    if (0 === s || s === t) break;
    if (___cxa_can_catch(s, t, i)) {
      var c = HEAP32[i >> 2];
      return e !== c && r.set_adjusted_ptr(c), setTempRet0(0 | s), 0 | r.ptr;
    }
  }
  return stackRestore(o), setTempRet0(0 | t), 0 | r.ptr;
}
function ___cxa_find_matching_catch_4() {
  var e = exceptionLast;
  if (!e) return setTempRet0(0), 0;
  var t = new ExceptionInfo(e).get_type(),
    r = new CatchInfo();
  if ((r.set_base_ptr(e), !t)) return setTempRet0(0), 0 | r.ptr;
  var n = Array.prototype.slice.call(arguments),
    o = stackSave(),
    i = stackAlloc(4);
  HEAP32[i >> 2] = e;
  for (var a = 0; a < n.length; a++) {
    var s = n[a];
    if (0 === s || s === t) break;
    if (___cxa_can_catch(s, t, i)) {
      var c = HEAP32[i >> 2];
      return e !== c && r.set_adjusted_ptr(c), setTempRet0(0 | s), 0 | r.ptr;
    }
  }
  return stackRestore(o), setTempRet0(0 | t), 0 | r.ptr;
}
function ___cxa_increment_exception_refcount(e) {
  e && exception_addRef(new ExceptionInfo(e));
}
function ___cxa_rethrow() {
  var e = exceptionCaught.pop();
  e || abort('no exception to throw');
  var t = e.get_exception_info(),
    r = e.get_base_ptr();
  throw (
    (t.get_rethrown()
      ? e.free()
      : (exceptionCaught.push(e),
        t.set_rethrown(!0),
        t.set_caught(!1),
        uncaughtExceptionCount++),
    (exceptionLast = r))
  );
}
function ___cxa_rethrow_primary_exception(e) {
  var t;
  e &&
    ((t = new CatchInfo()).set_base_ptr(e),
    (e = t.get_exception_info()),
    exceptionCaught.push(t),
    e.set_rethrown(!0),
    ___cxa_rethrow());
}
function ___cxa_throw(e, t, r) {
  throw (
    (new ExceptionInfo(e).init(t, r),
    uncaughtExceptionCount++,
    (exceptionLast = e))
  );
}
function ___cxa_uncaught_exceptions() {
  return uncaughtExceptionCount;
}
function _tzset() {
  var e, t, r, n, o;
  function i(e) {
    return (e = e.toTimeString().match(/\(([A-Za-z ]+)\)$/)) ? e[1] : 'GMT';
  }
  _tzset.called ||
    ((_tzset.called = !0),
    (r = new Date().getFullYear()),
    (n = new Date(r, 0, 1)),
    (o = new Date(r, 6, 1)),
    (e = n.getTimezoneOffset()),
    (t = o.getTimezoneOffset()),
    (r = Math.max(e, t)),
    (HEAP32[__get_timezone() >> 2] = 60 * r),
    (HEAP32[__get_daylight() >> 2] = Number(e != t)),
    (n = i(n)),
    (o = i(o)),
    (n = allocateUTF8(n)),
    (o = allocateUTF8(o)),
    t < e
      ? ((HEAP32[__get_tzname() >> 2] = n),
        (HEAP32[(__get_tzname() + 4) >> 2] = o))
      : ((HEAP32[__get_tzname() >> 2] = o),
        (HEAP32[(__get_tzname() + 4) >> 2] = n)));
}
function _localtime_r(e, t) {
  _tzset();
  var r = new Date(1e3 * HEAP32[e >> 2]);
  (HEAP32[t >> 2] = r.getSeconds()),
    (HEAP32[(t + 4) >> 2] = r.getMinutes()),
    (HEAP32[(t + 8) >> 2] = r.getHours()),
    (HEAP32[(t + 12) >> 2] = r.getDate()),
    (HEAP32[(t + 16) >> 2] = r.getMonth()),
    (HEAP32[(t + 20) >> 2] = r.getFullYear() - 1900),
    (HEAP32[(t + 24) >> 2] = r.getDay());
  var n = new Date(r.getFullYear(), 0, 1),
    e = ((r.getTime() - n.getTime()) / 864e5) | 0;
  return (
    (HEAP32[(t + 28) >> 2] = e),
    (HEAP32[(t + 36) >> 2] = -60 * r.getTimezoneOffset()),
    (e =
      0 |
      ((e = new Date(r.getFullYear(), 6, 1).getTimezoneOffset()) !=
        (n = n.getTimezoneOffset()) &&
        r.getTimezoneOffset() == Math.min(n, e))),
    (HEAP32[(t + 32) >> 2] = e),
    (e = HEAP32[(__get_tzname() + (e ? 4 : 0)) >> 2]),
    (HEAP32[(t + 40) >> 2] = e),
    t
  );
}
function ___localtime_r(e, t) {
  return _localtime_r(e, t);
}
function setErrNo(e) {
  return (HEAP32[___errno_location() >> 2] = e);
}
var PATH = {
  splitPath: function (e) {
    return /^(\/?|)([\s\S]*?)((?:\.{1,2}|[^\/]+?|)(\.[^.\/]*|))(?:[\/]*)$/
      .exec(e)
      .slice(1);
  },
  normalizeArray: function (e, t) {
    for (var r = 0, n = e.length - 1; 0 <= n; n--) {
      var o = e[n];
      '.' === o
        ? e.splice(n, 1)
        : '..' === o
        ? (e.splice(n, 1), r++)
        : r && (e.splice(n, 1), r--);
    }
    if (t) for (; r; r--) e.unshift('..');
    return e;
  },
  normalize: function (e) {
    var t = '/' === e.charAt(0),
      r = '/' === e.substr(-1);
    return (
      (e =
        (e = PATH.normalizeArray(
          e.split('/').filter(function (e) {
            return !!e;
          }),
          !t
        ).join('/')) || t
          ? e
          : '.') &&
        r &&
        (e += '/'),
      (t ? '/' : '') + e
    );
  },
  dirname: function (e) {
    var e = (t = PATH.splitPath(e))[0],
      t = t[1];
    return e || t ? e + (t && t.substr(0, t.length - 1)) : '.';
  },
  basename: function (e) {
    if ('/' === e) return '/';
    var t = (e = (e = PATH.normalize(e)).replace(/\/$/, '')).lastIndexOf('/');
    return -1 === t ? e : e.substr(t + 1);
  },
  extname: function (e) {
    return PATH.splitPath(e)[3];
  },
  join: function () {
    var e = Array.prototype.slice.call(arguments, 0);
    return PATH.normalize(e.join('/'));
  },
  join2: function (e, t) {
    return PATH.normalize(e + '/' + t);
  },
};
function getRandomDevice() {
  if ('object' != typeof crypto || 'function' != typeof crypto.getRandomValues)
    return function () {
      abort('randomDevice');
    };
  var e = new Uint8Array(1);
  return function () {
    return crypto.getRandomValues(e), e[0];
  };
}
var PATH_FS = {
    resolve: function () {
      for (var e = '', t = !1, r = arguments.length - 1; -1 <= r && !t; r--) {
        var n = 0 <= r ? arguments[r] : FS.cwd();
        if ('string' != typeof n)
          throw new TypeError('Arguments to path.resolve must be strings');
        if (!n) return '';
        (e = n + '/' + e), (t = '/' === n.charAt(0));
      }
      return (
        (t ? '/' : '') +
          (e = PATH.normalizeArray(
            e.split('/').filter(function (e) {
              return !!e;
            }),
            !t
          ).join('/')) || '.'
      );
    },
    relative: function (e, t) {
      function r(e) {
        for (var t = 0; t < e.length && '' === e[t]; t++);
        for (var r = e.length - 1; 0 <= r && '' === e[r]; r--);
        return r < t ? [] : e.slice(t, r - t + 1);
      }
      (e = PATH_FS.resolve(e).substr(1)), (t = PATH_FS.resolve(t).substr(1));
      for (
        var n = r(e.split('/')),
          o = r(t.split('/')),
          i = Math.min(n.length, o.length),
          a = i,
          s = 0;
        s < i;
        s++
      )
        if (n[s] !== o[s]) {
          a = s;
          break;
        }
      for (var c = [], s = a; s < n.length; s++) c.push('..');
      return (c = c.concat(o.slice(a))).join('/');
    },
  },
  TTY = {
    ttys: [],
    init: function () {},
    shutdown: function () {},
    register: function (e, t) {
      (TTY.ttys[e] = { input: [], output: [], ops: t }),
        FS.registerDevice(e, TTY.stream_ops);
    },
    stream_ops: {
      open: function (e) {
        var t = TTY.ttys[e.node.rdev];
        if (!t) throw new FS.ErrnoError(43);
        (e.tty = t), (e.seekable = !1);
      },
      close: function (e) {
        e.tty.ops.flush(e.tty);
      },
      flush: function (e) {
        e.tty.ops.flush(e.tty);
      },
      read: function (e, t, r, n, o) {
        if (!e.tty || !e.tty.ops.get_char) throw new FS.ErrnoError(60);
        for (var i, a = 0, s = 0; s < n; s++) {
          try {
            i = e.tty.ops.get_char(e.tty);
          } catch (e) {
            throw new FS.ErrnoError(29);
          }
          if (void 0 === i && 0 === a) throw new FS.ErrnoError(6);
          if (null == i) break;
          a++, (t[r + s] = i);
        }
        return a && (e.node.timestamp = Date.now()), a;
      },
      write: function (e, t, r, n, o) {
        if (!e.tty || !e.tty.ops.put_char) throw new FS.ErrnoError(60);
        try {
          for (var i = 0; i < n; i++) e.tty.ops.put_char(e.tty, t[r + i]);
        } catch (e) {
          throw new FS.ErrnoError(29);
        }
        return n && (e.node.timestamp = Date.now()), i;
      },
    },
    default_tty_ops: {
      get_char: function (e) {
        if (!e.input.length) {
          var t = null;
          if (
            ('undefined' != typeof window && 'function' == typeof window.prompt
              ? null !== (t = window.prompt('Input: ')) && (t += '\n')
              : 'function' == typeof readline &&
                null !== (t = readline()) &&
                (t += '\n'),
            !t)
          )
            return null;
          e.input = intArrayFromString(t, !0);
        }
        return e.input.shift();
      },
      put_char: function (e, t) {
        null === t || 10 === t
          ? (out(UTF8ArrayToString(e.output, 0)), (e.output = []))
          : 0 != t && e.output.push(t);
      },
      flush: function (e) {
        e.output &&
          0 < e.output.length &&
          (out(UTF8ArrayToString(e.output, 0)), (e.output = []));
      },
    },
    default_tty1_ops: {
      put_char: function (e, t) {
        null === t || 10 === t
          ? (err(UTF8ArrayToString(e.output, 0)), (e.output = []))
          : 0 != t && e.output.push(t);
      },
      flush: function (e) {
        e.output &&
          0 < e.output.length &&
          (err(UTF8ArrayToString(e.output, 0)), (e.output = []));
      },
    },
  };
function mmapAlloc(e) {
  for (var t = alignMemory(e, 16384), r = _malloc(t); e < t; )
    HEAP8[r + e++] = 0;
  return r;
}
var MEMFS = {
    ops_table: null,
    mount: function (e) {
      return MEMFS.createNode(null, '/', 16895, 0);
    },
    createNode: function (e, t, r, n) {
      if (FS.isBlkdev(r) || FS.isFIFO(r)) throw new FS.ErrnoError(63);
      return (
        MEMFS.ops_table ||
          (MEMFS.ops_table = {
            dir: {
              node: {
                getattr: MEMFS.node_ops.getattr,
                setattr: MEMFS.node_ops.setattr,
                lookup: MEMFS.node_ops.lookup,
                mknod: MEMFS.node_ops.mknod,
                rename: MEMFS.node_ops.rename,
                unlink: MEMFS.node_ops.unlink,
                rmdir: MEMFS.node_ops.rmdir,
                readdir: MEMFS.node_ops.readdir,
                symlink: MEMFS.node_ops.symlink,
              },
              stream: { llseek: MEMFS.stream_ops.llseek },
            },
            file: {
              node: {
                getattr: MEMFS.node_ops.getattr,
                setattr: MEMFS.node_ops.setattr,
              },
              stream: {
                llseek: MEMFS.stream_ops.llseek,
                read: MEMFS.stream_ops.read,
                write: MEMFS.stream_ops.write,
                allocate: MEMFS.stream_ops.allocate,
                mmap: MEMFS.stream_ops.mmap,
                msync: MEMFS.stream_ops.msync,
              },
            },
            link: {
              node: {
                getattr: MEMFS.node_ops.getattr,
                setattr: MEMFS.node_ops.setattr,
                readlink: MEMFS.node_ops.readlink,
              },
              stream: {},
            },
            chrdev: {
              node: {
                getattr: MEMFS.node_ops.getattr,
                setattr: MEMFS.node_ops.setattr,
              },
              stream: FS.chrdev_stream_ops,
            },
          }),
        (n = FS.createNode(e, t, r, n)),
        FS.isDir(n.mode)
          ? ((n.node_ops = MEMFS.ops_table.dir.node),
            (n.stream_ops = MEMFS.ops_table.dir.stream),
            (n.contents = {}))
          : FS.isFile(n.mode)
          ? ((n.node_ops = MEMFS.ops_table.file.node),
            (n.stream_ops = MEMFS.ops_table.file.stream),
            (n.usedBytes = 0),
            (n.contents = null))
          : FS.isLink(n.mode)
          ? ((n.node_ops = MEMFS.ops_table.link.node),
            (n.stream_ops = MEMFS.ops_table.link.stream))
          : FS.isChrdev(n.mode) &&
            ((n.node_ops = MEMFS.ops_table.chrdev.node),
            (n.stream_ops = MEMFS.ops_table.chrdev.stream)),
        (n.timestamp = Date.now()),
        e && ((e.contents[t] = n), (e.timestamp = n.timestamp)),
        n
      );
    },
    getFileDataAsTypedArray: function (e) {
      return e.contents
        ? e.contents.subarray
          ? e.contents.subarray(0, e.usedBytes)
          : new Uint8Array(e.contents)
        : new Uint8Array(0);
    },
    expandFileStorage: function (e, t) {
      var r = e.contents ? e.contents.length : 0;
      t <= r ||
        ((t = Math.max(t, (r * (r < 1048576 ? 2 : 1.125)) >>> 0)),
        0 != r && (t = Math.max(t, 256)),
        (r = e.contents),
        (e.contents = new Uint8Array(t)),
        0 < e.usedBytes && e.contents.set(r.subarray(0, e.usedBytes), 0));
    },
    resizeFileStorage: function (e, t) {
      var r;
      e.usedBytes != t &&
        (0 == t
          ? ((e.contents = null), (e.usedBytes = 0))
          : ((r = e.contents),
            (e.contents = new Uint8Array(t)),
            r && e.contents.set(r.subarray(0, Math.min(t, e.usedBytes))),
            (e.usedBytes = t)));
    },
    node_ops: {
      getattr: function (e) {
        var t = {};
        return (
          (t.dev = FS.isChrdev(e.mode) ? e.id : 1),
          (t.ino = e.id),
          (t.mode = e.mode),
          (t.nlink = 1),
          (t.uid = 0),
          (t.gid = 0),
          (t.rdev = e.rdev),
          FS.isDir(e.mode)
            ? (t.size = 4096)
            : FS.isFile(e.mode)
            ? (t.size = e.usedBytes)
            : FS.isLink(e.mode)
            ? (t.size = e.link.length)
            : (t.size = 0),
          (t.atime = new Date(e.timestamp)),
          (t.mtime = new Date(e.timestamp)),
          (t.ctime = new Date(e.timestamp)),
          (t.blksize = 4096),
          (t.blocks = Math.ceil(t.size / t.blksize)),
          t
        );
      },
      setattr: function (e, t) {
        void 0 !== t.mode && (e.mode = t.mode),
          void 0 !== t.timestamp && (e.timestamp = t.timestamp),
          void 0 !== t.size && MEMFS.resizeFileStorage(e, t.size);
      },
      lookup: function (e, t) {
        throw FS.genericErrors[44];
      },
      mknod: function (e, t, r, n) {
        return MEMFS.createNode(e, t, r, n);
      },
      rename: function (e, t, r) {
        if (FS.isDir(e.mode)) {
          var n;
          try {
            n = FS.lookupNode(t, r);
          } catch (e) {}
          if (n) for (var o in n.contents) throw new FS.ErrnoError(55);
        }
        delete e.parent.contents[e.name],
          (e.parent.timestamp = Date.now()),
          (e.name = r),
          (t.contents[r] = e),
          (t.timestamp = e.parent.timestamp),
          (e.parent = t);
      },
      unlink: function (e, t) {
        delete e.contents[t], (e.timestamp = Date.now());
      },
      rmdir: function (e, t) {
        for (var r in FS.lookupNode(e, t).contents) throw new FS.ErrnoError(55);
        delete e.contents[t], (e.timestamp = Date.now());
      },
      readdir: function (e) {
        var t,
          r = ['.', '..'];
        for (t in e.contents) e.contents.hasOwnProperty(t) && r.push(t);
        return r;
      },
      symlink: function (e, t, r) {
        return ((t = MEMFS.createNode(e, t, 41471, 0)).link = r), t;
      },
      readlink: function (e) {
        if (!FS.isLink(e.mode)) throw new FS.ErrnoError(28);
        return e.link;
      },
    },
    stream_ops: {
      read: function (e, t, r, n, o) {
        var i = e.node.contents;
        if (o >= e.node.usedBytes) return 0;
        var a = Math.min(e.node.usedBytes - o, n);
        if (8 < a && i.subarray) t.set(i.subarray(o, o + a), r);
        else for (var s = 0; s < a; s++) t[r + s] = i[o + s];
        return a;
      },
      write: function (e, t, r, n, o, i) {
        if ((t.buffer === HEAP8.buffer && (i = !1), !n)) return 0;
        var a = e.node;
        if (
          ((a.timestamp = Date.now()),
          t.subarray && (!a.contents || a.contents.subarray))
        ) {
          if (i) return (a.contents = t.subarray(r, r + n)), (a.usedBytes = n);
          if (0 === a.usedBytes && 0 === o)
            return (a.contents = t.slice(r, r + n)), (a.usedBytes = n);
          if (o + n <= a.usedBytes)
            return a.contents.set(t.subarray(r, r + n), o), n;
        }
        if (
          (MEMFS.expandFileStorage(a, o + n), a.contents.subarray && t.subarray)
        )
          a.contents.set(t.subarray(r, r + n), o);
        else for (var s = 0; s < n; s++) a.contents[o + s] = t[r + s];
        return (a.usedBytes = Math.max(a.usedBytes, o + n)), n;
      },
      llseek: function (e, t, r) {
        if (
          (1 === r
            ? (t += e.position)
            : 2 === r && FS.isFile(e.node.mode) && (t += e.node.usedBytes),
          t < 0)
        )
          throw new FS.ErrnoError(28);
        return t;
      },
      allocate: function (e, t, r) {
        MEMFS.expandFileStorage(e.node, t + r),
          (e.node.usedBytes = Math.max(e.node.usedBytes, t + r));
      },
      mmap: function (e, t, r, n, o, i) {
        if (0 !== t) throw new FS.ErrnoError(28);
        if (!FS.isFile(e.node.mode)) throw new FS.ErrnoError(43);
        var a,
          s,
          e = e.node.contents;
        if (2 & i || e.buffer !== buffer) {
          if (
            ((0 < n || n + r < e.length) &&
              (e = e.subarray
                ? e.subarray(n, n + r)
                : Array.prototype.slice.call(e, n, n + r)),
            (s = !0),
            !(a = mmapAlloc(r)))
          )
            throw new FS.ErrnoError(48);
          HEAP8.set(e, a);
        } else (s = !1), (a = e.byteOffset);
        return { ptr: a, allocated: s };
      },
      msync: function (e, t, r, n, o) {
        if (!FS.isFile(e.node.mode)) throw new FS.ErrnoError(43);
        return 2 & o || MEMFS.stream_ops.write(e, t, 0, n, r, !1), 0;
      },
    },
  },
  IDBFS = {
    dbs: {},
    indexedDB: function () {
      if ('undefined' != typeof indexedDB) return indexedDB;
      var e = null;
      return (
        assert(
          (e =
            'object' == typeof window
              ? window.indexedDB ||
                window.mozIndexedDB ||
                window.webkitIndexedDB ||
                window.msIndexedDB
              : e),
          'IDBFS used, but indexedDB not supported'
        ),
        e
      );
    },
    DB_VERSION: 21,
    DB_STORE_NAME: 'FILE_DATA',
    mount: function (e) {
      return MEMFS.mount.apply(null, arguments);
    },
    syncfs: function (t, n, o) {
      IDBFS.getLocalSet(t, function (e, r) {
        return e
          ? o(e)
          : void IDBFS.getRemoteSet(t, function (e, t) {
              return e ? o(e) : void IDBFS.reconcile(n ? t : r, n ? r : t, o);
            });
      });
    },
    getDB: function (e, t) {
      var r,
        n = IDBFS.dbs[e];
      if (n) return t(null, n);
      try {
        r = IDBFS.indexedDB().open(e, IDBFS.DB_VERSION);
      } catch (e) {
        return t(e);
      }
      if (!r) return t('Unable to connect to IndexedDB');
      (r.onupgradeneeded = function (e) {
        var t = e.target.result,
          e = e.target.transaction;
        (t = t.objectStoreNames.contains(IDBFS.DB_STORE_NAME)
          ? e.objectStore(IDBFS.DB_STORE_NAME)
          : t.createObjectStore(IDBFS.DB_STORE_NAME)).indexNames.contains(
          'timestamp'
        ) || t.createIndex('timestamp', 'timestamp', { unique: !1 });
      }),
        (r.onsuccess = function () {
          (n = r.result), (IDBFS.dbs[e] = n), t(null, n);
        }),
        (r.onerror = function (e) {
          t(this.error), e.preventDefault();
        });
    },
    getLocalSet: function (e, t) {
      var r = {};
      function n(e) {
        return '.' !== e && '..' !== e;
      }
      function o(t) {
        return function (e) {
          return PATH.join2(t, e);
        };
      }
      for (
        var i = FS.readdir(e.mountpoint).filter(n).map(o(e.mountpoint));
        i.length;

      ) {
        var a,
          s = i.pop();
        try {
          a = FS.stat(s);
        } catch (e) {
          return t(e);
        }
        FS.isDir(a.mode) && i.push.apply(i, FS.readdir(s).filter(n).map(o(s))),
          (r[s] = { timestamp: a.mtime });
      }
      return t(null, { type: 'local', entries: r });
    },
    getRemoteSet: function (e, n) {
      var o = {};
      IDBFS.getDB(e.mountpoint, function (e, t) {
        if (e) return n(e);
        try {
          var r = t.transaction([IDBFS.DB_STORE_NAME], 'readonly');
          (r.onerror = function (e) {
            n(this.error), e.preventDefault();
          }),
            (r
              .objectStore(IDBFS.DB_STORE_NAME)
              .index('timestamp')
              .openKeyCursor().onsuccess = function (e) {
              if (!(e = e.target.result))
                return n(null, { type: 'remote', db: t, entries: o });
              (o[e.primaryKey] = { timestamp: e.key }), e.continue();
            });
        } catch (e) {
          return n(e);
        }
      });
    },
    loadLocalEntry: function (e, t) {
      try {
        var r = FS.lookupPath(e).node,
          n = FS.stat(e);
      } catch (e) {
        return t(e);
      }
      return FS.isDir(n.mode)
        ? t(null, { timestamp: n.mtime, mode: n.mode })
        : FS.isFile(n.mode)
        ? ((r.contents = MEMFS.getFileDataAsTypedArray(r)),
          t(null, { timestamp: n.mtime, mode: n.mode, contents: r.contents }))
        : t(new Error('node type not supported'));
    },
    storeLocalEntry: function (e, t, r) {
      try {
        if (FS.isDir(t.mode)) FS.mkdirTree(e, t.mode);
        else {
          if (!FS.isFile(t.mode))
            return r(new Error('node type not supported'));
          FS.writeFile(e, t.contents, { canOwn: !0 });
        }
        FS.chmod(e, t.mode), FS.utime(e, t.timestamp, t.timestamp);
      } catch (e) {
        return r(e);
      }
      r(null);
    },
    removeLocalEntry: function (e, t) {
      try {
        FS.lookupPath(e);
        var r = FS.stat(e);
        FS.isDir(r.mode) ? FS.rmdir(e) : FS.isFile(r.mode) && FS.unlink(e);
      } catch (e) {
        return t(e);
      }
      t(null);
    },
    loadRemoteEntry: function (e, t, r) {
      ((t = e.get(t)).onsuccess = function (e) {
        r(null, e.target.result);
      }),
        (t.onerror = function (e) {
          r(this.error), e.preventDefault();
        });
    },
    storeRemoteEntry: function (e, t, r, n) {
      ((t = e.put(r, t)).onsuccess = function () {
        n(null);
      }),
        (t.onerror = function (e) {
          n(this.error), e.preventDefault();
        });
    },
    removeRemoteEntry: function (e, t, r) {
      ((t = e.delete(t)).onsuccess = function () {
        r(null);
      }),
        (t.onerror = function (e) {
          r(this.error), e.preventDefault();
        });
    },
    reconcile: function (n, o, t) {
      var i = 0,
        a = [];
      Object.keys(n.entries).forEach(function (e) {
        var t = n.entries[e],
          r = o.entries[e];
        (r && t.timestamp.getTime() == r.timestamp.getTime()) ||
          (a.push(e), i++);
      });
      var r = [];
      if (
        (Object.keys(o.entries).forEach(function (e) {
          o.entries[e], n.entries[e] || (r.push(e), i++);
        }),
        !i)
      )
        return t(null);
      var s = !1,
        e = ('remote' === n.type ? n : o).db.transaction(
          [IDBFS.DB_STORE_NAME],
          'readwrite'
        ),
        c = e.objectStore(IDBFS.DB_STORE_NAME);
      function u(e) {
        if (e && !s) return (s = !0), t(e);
      }
      (e.onerror = function (e) {
        u(this.error), e.preventDefault();
      }),
        (e.oncomplete = function (e) {
          s || t(null);
        }),
        a.sort().forEach(function (r) {
          'local' === o.type
            ? IDBFS.loadRemoteEntry(c, r, function (e, t) {
                return e ? u(e) : void IDBFS.storeLocalEntry(r, t, u);
              })
            : IDBFS.loadLocalEntry(r, function (e, t) {
                return e ? u(e) : void IDBFS.storeRemoteEntry(c, r, t, u);
              });
        }),
        r
          .sort()
          .reverse()
          .forEach(function (e) {
            'local' === o.type
              ? IDBFS.removeLocalEntry(e, u)
              : IDBFS.removeRemoteEntry(c, e, u);
          });
    },
  },
  FS = {
    root: null,
    mounts: [],
    devices: {},
    streams: [],
    nextInode: 1,
    nameTable: null,
    currentPath: '/',
    initialized: !1,
    ignorePermissions: !0,
    trackingDelegate: {},
    tracking: { openFlags: { READ: 1, WRITE: 2 } },
    ErrnoError: null,
    genericErrors: {},
    filesystems: null,
    syncFSRequests: 0,
    lookupPath: function (e, t) {
      if (((t = t || {}), !(e = PATH_FS.resolve(FS.cwd(), e))))
        return { path: '', node: null };
      var r,
        n = { follow_mount: !0, recurse_count: 0 };
      for (r in n) void 0 === t[r] && (t[r] = n[r]);
      if (8 < t.recurse_count) throw new FS.ErrnoError(32);
      for (
        var o = PATH.normalizeArray(
            e.split('/').filter(function (e) {
              return !!e;
            }),
            !1
          ),
          i = FS.root,
          a = '/',
          s = 0;
        s < o.length;
        s++
      ) {
        var c = s === o.length - 1;
        if (c && t.parent) break;
        if (
          ((i = FS.lookupNode(i, o[s])),
          (a = PATH.join2(a, o[s])),
          FS.isMountpoint(i) &&
            (!c || (c && t.follow_mount)) &&
            (i = i.mounted.root),
          !c || t.follow)
        )
          for (var u = 0; FS.isLink(i.mode); ) {
            var l = FS.readlink(a),
              a = PATH_FS.resolve(PATH.dirname(a), l),
              i = FS.lookupPath(a, { recurse_count: t.recurse_count }).node;
            if (40 < u++) throw new FS.ErrnoError(32);
          }
      }
      return { path: a, node: i };
    },
    getPath: function (e) {
      for (var t; ; ) {
        if (FS.isRoot(e)) {
          var r = e.mount.mountpoint;
          return t ? ('/' !== r[r.length - 1] ? r + '/' + t : r + t) : r;
        }
        (t = t ? e.name + '/' + t : e.name), (e = e.parent);
      }
    },
    hashName: function (e, t) {
      for (var r = 0, n = 0; n < t.length; n++)
        r = ((r << 5) - r + t.charCodeAt(n)) | 0;
      return ((e + r) >>> 0) % FS.nameTable.length;
    },
    hashAddNode: function (e) {
      var t = FS.hashName(e.parent.id, e.name);
      (e.name_next = FS.nameTable[t]), (FS.nameTable[t] = e);
    },
    hashRemoveNode: function (e) {
      var t = FS.hashName(e.parent.id, e.name);
      if (FS.nameTable[t] === e) FS.nameTable[t] = e.name_next;
      else
        for (var r = FS.nameTable[t]; r; ) {
          if (r.name_next === e) {
            r.name_next = e.name_next;
            break;
          }
          r = r.name_next;
        }
    },
    lookupNode: function (e, t) {
      if ((r = FS.mayLookup(e))) throw new FS.ErrnoError(r, e);
      for (
        var r = FS.hashName(e.id, t), n = FS.nameTable[r];
        n;
        n = n.name_next
      ) {
        var o = n.name;
        if (n.parent.id === e.id && o === t) return n;
      }
      return FS.lookup(e, t);
    },
    createNode: function (e, t, r, n) {
      return (n = new FS.FSNode(e, t, r, n)), FS.hashAddNode(n), n;
    },
    destroyNode: function (e) {
      FS.hashRemoveNode(e);
    },
    isRoot: function (e) {
      return e === e.parent;
    },
    isMountpoint: function (e) {
      return !!e.mounted;
    },
    isFile: function (e) {
      return 32768 == (61440 & e);
    },
    isDir: function (e) {
      return 16384 == (61440 & e);
    },
    isLink: function (e) {
      return 40960 == (61440 & e);
    },
    isChrdev: function (e) {
      return 8192 == (61440 & e);
    },
    isBlkdev: function (e) {
      return 24576 == (61440 & e);
    },
    isFIFO: function (e) {
      return 4096 == (61440 & e);
    },
    isSocket: function (e) {
      return 49152 == (49152 & e);
    },
    flagModes: { r: 0, 'r+': 2, w: 577, 'w+': 578, a: 1089, 'a+': 1090 },
    modeStringToFlags: function (e) {
      var t = FS.flagModes[e];
      if (void 0 === t) throw new Error('Unknown file open mode: ' + e);
      return t;
    },
    flagsToPermissionString: function (e) {
      var t = ['r', 'w', 'rw'][3 & e];
      return 512 & e && (t += 'w'), t;
    },
    nodePermissions: function (e, t) {
      return FS.ignorePermissions ||
        ((-1 === t.indexOf('r') || 292 & e.mode) &&
          (-1 === t.indexOf('w') || 146 & e.mode) &&
          (-1 === t.indexOf('x') || 73 & e.mode))
        ? 0
        : 2;
    },
    mayLookup: function (e) {
      return FS.nodePermissions(e, 'x') || (e.node_ops.lookup ? 0 : 2);
    },
    mayCreate: function (e, t) {
      try {
        return FS.lookupNode(e, t), 20;
      } catch (e) {}
      return FS.nodePermissions(e, 'wx');
    },
    mayDelete: function (e, t, r) {
      var n;
      try {
        n = FS.lookupNode(e, t);
      } catch (e) {
        return e.errno;
      }
      if ((e = FS.nodePermissions(e, 'wx'))) return e;
      if (r) {
        if (!FS.isDir(n.mode)) return 54;
        if (FS.isRoot(n) || FS.getPath(n) === FS.cwd()) return 10;
      } else if (FS.isDir(n.mode)) return 31;
      return 0;
    },
    mayOpen: function (e, t) {
      return e
        ? FS.isLink(e.mode)
          ? 32
          : FS.isDir(e.mode) &&
            ('r' !== FS.flagsToPermissionString(t) || 512 & t)
          ? 31
          : FS.nodePermissions(e, FS.flagsToPermissionString(t))
        : 44;
    },
    MAX_OPEN_FDS: 4096,
    nextfd: function (e, t) {
      t = t || FS.MAX_OPEN_FDS;
      for (var r = (e = e || 0); r <= t; r++) if (!FS.streams[r]) return r;
      throw new FS.ErrnoError(33);
    },
    getStream: function (e) {
      return FS.streams[e];
    },
    createStream: function (e, t, r) {
      FS.FSStream ||
        ((FS.FSStream = function () {}),
        (FS.FSStream.prototype = {
          object: {
            get: function () {
              return this.node;
            },
            set: function (e) {
              this.node = e;
            },
          },
          isRead: {
            get: function () {
              return 1 != (2097155 & this.flags);
            },
          },
          isWrite: {
            get: function () {
              return 0 != (2097155 & this.flags);
            },
          },
          isAppend: {
            get: function () {
              return 1024 & this.flags;
            },
          },
        }));
      var n,
        o = new FS.FSStream();
      for (n in e) o[n] = e[n];
      return (e = o), (r = FS.nextfd(t, r)), (e.fd = r), (FS.streams[r] = e);
    },
    closeStream: function (e) {
      FS.streams[e] = null;
    },
    chrdev_stream_ops: {
      open: function (e) {
        var t = FS.getDevice(e.node.rdev);
        (e.stream_ops = t.stream_ops),
          e.stream_ops.open && e.stream_ops.open(e);
      },
      llseek: function () {
        throw new FS.ErrnoError(70);
      },
    },
    major: function (e) {
      return e >> 8;
    },
    minor: function (e) {
      return 255 & e;
    },
    makedev: function (e, t) {
      return (e << 8) | t;
    },
    registerDevice: function (e, t) {
      FS.devices[e] = { stream_ops: t };
    },
    getDevice: function (e) {
      return FS.devices[e];
    },
    getMounts: function (e) {
      for (var t = [], r = [e]; r.length; ) {
        var n = r.pop();
        t.push(n), r.push.apply(r, n.mounts);
      }
      return t;
    },
    syncfs: function (t, r) {
      'function' == typeof t && ((r = t), (t = !1)),
        FS.syncFSRequests++,
        1 < FS.syncFSRequests &&
          err(
            'warning: ' +
              FS.syncFSRequests +
              ' FS.syncfs operations in flight at once, probably just doing extra work'
          );
      var n = FS.getMounts(FS.root.mount),
        o = 0;
      function i(e) {
        return FS.syncFSRequests--, r(e);
      }
      function a(e) {
        if (e) return a.errored ? void 0 : ((a.errored = !0), i(e));
        ++o >= n.length && i(null);
      }
      n.forEach(function (e) {
        return e.type.syncfs ? void e.type.syncfs(e, t, a) : a(null);
      });
    },
    mount: function (e, t, r) {
      var n = '/' === r,
        o = !r;
      if (n && FS.root) throw new FS.ErrnoError(10);
      if (!n && !o) {
        var i = FS.lookupPath(r, { follow_mount: !1 });
        if (((r = i.path), (i = i.node), FS.isMountpoint(i)))
          throw new FS.ErrnoError(10);
        if (!FS.isDir(i.mode)) throw new FS.ErrnoError(54);
      }
      return (
        (((e = e.mount(
          (r = { type: e, opts: t, mountpoint: r, mounts: [] })
        )).mount = r).root = e),
        n
          ? (FS.root = e)
          : i && ((i.mounted = r), i.mount && i.mount.mounts.push(r)),
        e
      );
    },
    unmount: function (e) {
      var t = FS.lookupPath(e, { follow_mount: !1 });
      if (!FS.isMountpoint(t.node)) throw new FS.ErrnoError(28);
      var t = (e = t.node).mounted,
        n = FS.getMounts(t);
      Object.keys(FS.nameTable).forEach(function (e) {
        for (var t = FS.nameTable[e]; t; ) {
          var r = t.name_next;
          -1 !== n.indexOf(t.mount) && FS.destroyNode(t), (t = r);
        }
      }),
        (e.mounted = null),
        (t = e.mount.mounts.indexOf(t)),
        e.mount.mounts.splice(t, 1);
    },
    lookup: function (e, t) {
      return e.node_ops.lookup(e, t);
    },
    mknod: function (e, t, r) {
      var n = FS.lookupPath(e, { parent: !0 }).node,
        o = PATH.basename(e);
      if (!o || '.' === o || '..' === o) throw new FS.ErrnoError(28);
      if ((e = FS.mayCreate(n, o))) throw new FS.ErrnoError(e);
      if (!n.node_ops.mknod) throw new FS.ErrnoError(63);
      return n.node_ops.mknod(n, o, t, r);
    },
    create: function (e, t) {
      return (
        (t = void 0 !== t ? t : 438), (t &= 4095), FS.mknod(e, (t |= 32768), 0)
      );
    },
    mkdir: function (e, t) {
      return (
        (t = void 0 !== t ? t : 511), (t &= 1023), FS.mknod(e, (t |= 16384), 0)
      );
    },
    mkdirTree: function (e, t) {
      for (var r = e.split('/'), n = '', o = 0; o < r.length; ++o)
        if (r[o]) {
          n += '/' + r[o];
          try {
            FS.mkdir(n, t);
          } catch (e) {
            if (20 != e.errno) throw e;
          }
        }
    },
    mkdev: function (e, t, r) {
      return void 0 === r && ((r = t), (t = 438)), FS.mknod(e, (t |= 8192), r);
    },
    symlink: function (e, t) {
      if (!PATH_FS.resolve(e)) throw new FS.ErrnoError(44);
      var r = FS.lookupPath(t, { parent: !0 }).node;
      if (!r) throw new FS.ErrnoError(44);
      var n = PATH.basename(t);
      if ((t = FS.mayCreate(r, n))) throw new FS.ErrnoError(t);
      if (!r.node_ops.symlink) throw new FS.ErrnoError(63);
      return r.node_ops.symlink(r, n, e);
    },
    rename: function (t, r) {
      var e = PATH.dirname(t),
        n = PATH.dirname(r),
        o = PATH.basename(t),
        i = PATH.basename(r),
        a = (u = FS.lookupPath(t, { parent: !0 })).node,
        s = FS.lookupPath(r, { parent: !0 }).node;
      if (!a || !s) throw new FS.ErrnoError(44);
      if (a.mount !== s.mount) throw new FS.ErrnoError(75);
      var c,
        u = FS.lookupNode(a, o);
      if ('.' !== (n = PATH_FS.relative(t, n)).charAt(0))
        throw new FS.ErrnoError(28);
      if ('.' !== (n = PATH_FS.relative(r, e)).charAt(0))
        throw new FS.ErrnoError(55);
      try {
        c = FS.lookupNode(s, i);
      } catch (e) {}
      if (u !== c) {
        if (((n = FS.isDir(u.mode)), (o = FS.mayDelete(a, o, n))))
          throw new FS.ErrnoError(o);
        if ((o = c ? FS.mayDelete(s, i, n) : FS.mayCreate(s, i)))
          throw new FS.ErrnoError(o);
        if (!a.node_ops.rename) throw new FS.ErrnoError(63);
        if (FS.isMountpoint(u) || (c && FS.isMountpoint(c)))
          throw new FS.ErrnoError(10);
        if (s !== a && (o = FS.nodePermissions(a, 'w')))
          throw new FS.ErrnoError(o);
        try {
          FS.trackingDelegate.willMovePath &&
            FS.trackingDelegate.willMovePath(t, r);
        } catch (e) {
          err(
            "FS.trackingDelegate['willMovePath']('" +
              t +
              "', '" +
              r +
              "') threw an exception: " +
              e.message
          );
        }
        FS.hashRemoveNode(u);
        try {
          a.node_ops.rename(u, s, i);
        } catch (e) {
          throw e;
        } finally {
          FS.hashAddNode(u);
        }
        try {
          FS.trackingDelegate.onMovePath &&
            FS.trackingDelegate.onMovePath(t, r);
        } catch (e) {
          err(
            "FS.trackingDelegate['onMovePath']('" +
              t +
              "', '" +
              r +
              "') threw an exception: " +
              e.message
          );
        }
      }
    },
    rmdir: function (t) {
      var e = FS.lookupPath(t, { parent: !0 }).node,
        r = PATH.basename(t),
        n = FS.lookupNode(e, r),
        o = FS.mayDelete(e, r, !0);
      if (o) throw new FS.ErrnoError(o);
      if (!e.node_ops.rmdir) throw new FS.ErrnoError(63);
      if (FS.isMountpoint(n)) throw new FS.ErrnoError(10);
      try {
        FS.trackingDelegate.willDeletePath &&
          FS.trackingDelegate.willDeletePath(t);
      } catch (e) {
        err(
          "FS.trackingDelegate['willDeletePath']('" +
            t +
            "') threw an exception: " +
            e.message
        );
      }
      e.node_ops.rmdir(e, r), FS.destroyNode(n);
      try {
        FS.trackingDelegate.onDeletePath && FS.trackingDelegate.onDeletePath(t);
      } catch (e) {
        err(
          "FS.trackingDelegate['onDeletePath']('" +
            t +
            "') threw an exception: " +
            e.message
        );
      }
    },
    readdir: function (e) {
      if (!(e = FS.lookupPath(e, { follow: !0 }).node).node_ops.readdir)
        throw new FS.ErrnoError(54);
      return e.node_ops.readdir(e);
    },
    unlink: function (t) {
      var e = FS.lookupPath(t, { parent: !0 }).node,
        r = PATH.basename(t),
        n = FS.lookupNode(e, r),
        o = FS.mayDelete(e, r, !1);
      if (o) throw new FS.ErrnoError(o);
      if (!e.node_ops.unlink) throw new FS.ErrnoError(63);
      if (FS.isMountpoint(n)) throw new FS.ErrnoError(10);
      try {
        FS.trackingDelegate.willDeletePath &&
          FS.trackingDelegate.willDeletePath(t);
      } catch (e) {
        err(
          "FS.trackingDelegate['willDeletePath']('" +
            t +
            "') threw an exception: " +
            e.message
        );
      }
      e.node_ops.unlink(e, r), FS.destroyNode(n);
      try {
        FS.trackingDelegate.onDeletePath && FS.trackingDelegate.onDeletePath(t);
      } catch (e) {
        err(
          "FS.trackingDelegate['onDeletePath']('" +
            t +
            "') threw an exception: " +
            e.message
        );
      }
    },
    readlink: function (e) {
      if (!(e = FS.lookupPath(e).node)) throw new FS.ErrnoError(44);
      if (!e.node_ops.readlink) throw new FS.ErrnoError(28);
      return PATH_FS.resolve(FS.getPath(e.parent), e.node_ops.readlink(e));
    },
    stat: function (e, t) {
      if (!(t = FS.lookupPath(e, { follow: !t }).node))
        throw new FS.ErrnoError(44);
      if (!t.node_ops.getattr) throw new FS.ErrnoError(63);
      return t.node_ops.getattr(t);
    },
    lstat: function (e) {
      return FS.stat(e, !0);
    },
    chmod: function (e, t, r) {
      if (
        !(e = 'string' == typeof e ? FS.lookupPath(e, { follow: !r }).node : e)
          .node_ops.setattr
      )
        throw new FS.ErrnoError(63);
      e.node_ops.setattr(e, {
        mode: (4095 & t) | (-4096 & e.mode),
        timestamp: Date.now(),
      });
    },
    lchmod: function (e, t) {
      FS.chmod(e, t, !0);
    },
    fchmod: function (e, t) {
      if (!(e = FS.getStream(e))) throw new FS.ErrnoError(8);
      FS.chmod(e.node, t);
    },
    chown: function (e, t, r, n) {
      if (
        !(e = 'string' == typeof e ? FS.lookupPath(e, { follow: !n }).node : e)
          .node_ops.setattr
      )
        throw new FS.ErrnoError(63);
      e.node_ops.setattr(e, { timestamp: Date.now() });
    },
    lchown: function (e, t, r) {
      FS.chown(e, t, r, !0);
    },
    fchown: function (e, t, r) {
      if (!(e = FS.getStream(e))) throw new FS.ErrnoError(8);
      FS.chown(e.node, t, r);
    },
    truncate: function (e, t) {
      if (t < 0) throw new FS.ErrnoError(28);
      var r;
      if (
        !(r = 'string' == typeof e ? FS.lookupPath(e, { follow: !0 }).node : e)
          .node_ops.setattr
      )
        throw new FS.ErrnoError(63);
      if (FS.isDir(r.mode)) throw new FS.ErrnoError(31);
      if (!FS.isFile(r.mode)) throw new FS.ErrnoError(28);
      if ((e = FS.nodePermissions(r, 'w'))) throw new FS.ErrnoError(e);
      r.node_ops.setattr(r, { size: t, timestamp: Date.now() });
    },
    ftruncate: function (e, t) {
      if (!(e = FS.getStream(e))) throw new FS.ErrnoError(8);
      if (0 == (2097155 & e.flags)) throw new FS.ErrnoError(28);
      FS.truncate(e.node, t);
    },
    utime: function (e, t, r) {
      (e = FS.lookupPath(e, { follow: !0 }).node).node_ops.setattr(e, {
        timestamp: Math.max(t, r),
      });
    },
    open: function (t, e, r, n, o) {
      if ('' === t) throw new FS.ErrnoError(44);
      if (
        ((r = void 0 === r ? 438 : r),
        (r =
          64 & (e = 'string' == typeof e ? FS.modeStringToFlags(e) : e)
            ? (4095 & r) | 32768
            : 0),
        'object' == typeof t)
      )
        i = t;
      else {
        t = PATH.normalize(t);
        try {
          var i = FS.lookupPath(t, { follow: !(131072 & e) }).node;
        } catch (e) {}
      }
      var a,
        s = !1;
      if (64 & e)
        if (i) {
          if (128 & e) throw new FS.ErrnoError(20);
        } else (i = FS.mknod(t, r, 0)), (s = !0);
      if (!i) throw new FS.ErrnoError(44);
      if ((FS.isChrdev(i.mode) && (e &= -513), 65536 & e && !FS.isDir(i.mode)))
        throw new FS.ErrnoError(54);
      if (!s && (s = FS.mayOpen(i, e))) throw new FS.ErrnoError(s);
      512 & e && FS.truncate(i, 0),
        (e &= -131713),
        (o = FS.createStream(
          {
            node: i,
            path: FS.getPath(i),
            flags: e,
            seekable: !0,
            position: 0,
            stream_ops: i.stream_ops,
            ungotten: [],
            error: !1,
          },
          n,
          o
        )).stream_ops.open && o.stream_ops.open(o),
        !Module.logReadFiles ||
          1 & e ||
          (FS.readFiles || (FS.readFiles = {}),
          t in FS.readFiles ||
            ((FS.readFiles[t] = 1),
            err('FS.trackingDelegate error on read file: ' + t)));
      try {
        FS.trackingDelegate.onOpenFile &&
          ((a = 0),
          1 != (2097155 & e) && (a |= FS.tracking.openFlags.READ),
          0 != (2097155 & e) && (a |= FS.tracking.openFlags.WRITE),
          FS.trackingDelegate.onOpenFile(t, a));
      } catch (e) {
        err(
          "FS.trackingDelegate['onOpenFile']('" +
            t +
            "', flags) threw an exception: " +
            e.message
        );
      }
      return o;
    },
    close: function (e) {
      if (FS.isClosed(e)) throw new FS.ErrnoError(8);
      e.getdents && (e.getdents = null);
      try {
        e.stream_ops.close && e.stream_ops.close(e);
      } catch (e) {
        throw e;
      } finally {
        FS.closeStream(e.fd);
      }
      e.fd = null;
    },
    isClosed: function (e) {
      return null === e.fd;
    },
    llseek: function (e, t, r) {
      if (FS.isClosed(e)) throw new FS.ErrnoError(8);
      if (!e.seekable || !e.stream_ops.llseek) throw new FS.ErrnoError(70);
      if (0 != r && 1 != r && 2 != r) throw new FS.ErrnoError(28);
      return (
        (e.position = e.stream_ops.llseek(e, t, r)),
        (e.ungotten = []),
        e.position
      );
    },
    read: function (e, t, r, n, o) {
      if (n < 0 || o < 0) throw new FS.ErrnoError(28);
      if (FS.isClosed(e)) throw new FS.ErrnoError(8);
      if (1 == (2097155 & e.flags)) throw new FS.ErrnoError(8);
      if (FS.isDir(e.node.mode)) throw new FS.ErrnoError(31);
      if (!e.stream_ops.read) throw new FS.ErrnoError(28);
      var i = void 0 !== o;
      if (i) {
        if (!e.seekable) throw new FS.ErrnoError(70);
      } else o = e.position;
      return (o = e.stream_ops.read(e, t, r, n, o)), i || (e.position += o), o;
    },
    write: function (t, e, r, n, o, i) {
      if (n < 0 || o < 0) throw new FS.ErrnoError(28);
      if (FS.isClosed(t)) throw new FS.ErrnoError(8);
      if (0 == (2097155 & t.flags)) throw new FS.ErrnoError(8);
      if (FS.isDir(t.node.mode)) throw new FS.ErrnoError(31);
      if (!t.stream_ops.write) throw new FS.ErrnoError(28);
      t.seekable && 1024 & t.flags && FS.llseek(t, 0, 2);
      var a = void 0 !== o;
      if (a) {
        if (!t.seekable) throw new FS.ErrnoError(70);
      } else o = t.position;
      (i = t.stream_ops.write(t, e, r, n, o, i)), a || (t.position += i);
      try {
        t.path &&
          FS.trackingDelegate.onWriteToFile &&
          FS.trackingDelegate.onWriteToFile(t.path);
      } catch (e) {
        err(
          "FS.trackingDelegate['onWriteToFile']('" +
            t.path +
            "') threw an exception: " +
            e.message
        );
      }
      return i;
    },
    allocate: function (e, t, r) {
      if (FS.isClosed(e)) throw new FS.ErrnoError(8);
      if (t < 0 || r <= 0) throw new FS.ErrnoError(28);
      if (0 == (2097155 & e.flags)) throw new FS.ErrnoError(8);
      if (!FS.isFile(e.node.mode) && !FS.isDir(e.node.mode))
        throw new FS.ErrnoError(43);
      if (!e.stream_ops.allocate) throw new FS.ErrnoError(138);
      e.stream_ops.allocate(e, t, r);
    },
    mmap: function (e, t, r, n, o, i) {
      if (0 != (2 & o) && 0 == (2 & i) && 2 != (2097155 & e.flags))
        throw new FS.ErrnoError(2);
      if (1 == (2097155 & e.flags)) throw new FS.ErrnoError(2);
      if (!e.stream_ops.mmap) throw new FS.ErrnoError(43);
      return e.stream_ops.mmap(e, t, r, n, o, i);
    },
    msync: function (e, t, r, n, o) {
      return e && e.stream_ops.msync ? e.stream_ops.msync(e, t, r, n, o) : 0;
    },
    munmap: function (e) {
      return 0;
    },
    ioctl: function (e, t, r) {
      if (!e.stream_ops.ioctl) throw new FS.ErrnoError(59);
      return e.stream_ops.ioctl(e, t, r);
    },
    readFile: function (e, t) {
      if (
        (((t = t || {}).flags = t.flags || 0),
        (t.encoding = t.encoding || 'binary'),
        'utf8' !== t.encoding && 'binary' !== t.encoding)
      )
        throw new Error('Invalid encoding type "' + t.encoding + '"');
      var r,
        n = FS.open(e, t.flags),
        o = FS.stat(e).size,
        e = new Uint8Array(o);
      return (
        FS.read(n, e, 0, o, 0),
        'utf8' === t.encoding
          ? (r = UTF8ArrayToString(e, 0))
          : 'binary' === t.encoding && (r = e),
        FS.close(n),
        r
      );
    },
    writeFile: function (e, t, r) {
      (r = r || {}).flags = r.flags || 577;
      var n = FS.open(e, r.flags, r.mode);
      if ('string' == typeof t) {
        var o = new Uint8Array(lengthBytesUTF8(t) + 1),
          e = stringToUTF8Array(t, o, 0, o.length);
        FS.write(n, o, 0, e, void 0, r.canOwn);
      } else {
        if (!ArrayBuffer.isView(t)) throw new Error('Unsupported data type');
        FS.write(n, t, 0, t.byteLength, void 0, r.canOwn);
      }
      FS.close(n);
    },
    cwd: function () {
      return FS.currentPath;
    },
    chdir: function (e) {
      var t = FS.lookupPath(e, { follow: !0 });
      if (null === t.node) throw new FS.ErrnoError(44);
      if (!FS.isDir(t.node.mode)) throw new FS.ErrnoError(54);
      if ((e = FS.nodePermissions(t.node, 'x'))) throw new FS.ErrnoError(e);
      FS.currentPath = t.path;
    },
    createDefaultDirectories: function () {
      FS.mkdir('/tmp'), FS.mkdir('/home'), FS.mkdir('/home/web_user');
    },
    createDefaultDevices: function () {
      FS.mkdir('/dev'),
        FS.registerDevice(FS.makedev(1, 3), {
          read: function () {
            return 0;
          },
          write: function (e, t, r, n, o) {
            return n;
          },
        }),
        FS.mkdev('/dev/null', FS.makedev(1, 3)),
        TTY.register(FS.makedev(5, 0), TTY.default_tty_ops),
        TTY.register(FS.makedev(6, 0), TTY.default_tty1_ops),
        FS.mkdev('/dev/tty', FS.makedev(5, 0)),
        FS.mkdev('/dev/tty1', FS.makedev(6, 0));
      var e = getRandomDevice();
      FS.createDevice('/dev', 'random', e),
        FS.createDevice('/dev', 'urandom', e),
        FS.mkdir('/dev/shm'),
        FS.mkdir('/dev/shm/tmp');
    },
    createSpecialDirectories: function () {
      FS.mkdir('/proc');
      var t = FS.mkdir('/proc/self');
      FS.mkdir('/proc/self/fd'),
        FS.mount(
          {
            mount: function () {
              var e = FS.createNode(t, 'fd', 16895, 73);
              return (
                (e.node_ops = {
                  lookup: function (e, t) {
                    var r = FS.getStream(+t);
                    if (!r) throw new FS.ErrnoError(8);
                    return ((t = {
                      parent: null,
                      mount: { mountpoint: 'fake' },
                      node_ops: {
                        readlink: function () {
                          return r.path;
                        },
                      },
                    }).parent = t);
                  },
                }),
                e
              );
            },
          },
          {},
          '/proc/self/fd'
        );
    },
    createStandardStreams: function () {
      Module.stdin
        ? FS.createDevice('/dev', 'stdin', Module.stdin)
        : FS.symlink('/dev/tty', '/dev/stdin'),
        Module.stdout
          ? FS.createDevice('/dev', 'stdout', null, Module.stdout)
          : FS.symlink('/dev/tty', '/dev/stdout'),
        Module.stderr
          ? FS.createDevice('/dev', 'stderr', null, Module.stderr)
          : FS.symlink('/dev/tty1', '/dev/stderr'),
        FS.open('/dev/stdin', 0),
        FS.open('/dev/stdout', 1),
        FS.open('/dev/stderr', 1);
    },
    ensureErrnoError: function () {
      FS.ErrnoError ||
        ((FS.ErrnoError = function (e, t) {
          (this.node = t),
            (this.setErrno = function (e) {
              this.errno = e;
            }),
            this.setErrno(e),
            (this.message = 'FS error');
        }),
        (FS.ErrnoError.prototype = new Error()),
        (FS.ErrnoError.prototype.constructor = FS.ErrnoError),
        [44].forEach(function (e) {
          (FS.genericErrors[e] = new FS.ErrnoError(e)),
            (FS.genericErrors[e].stack = '<generic error, no stack>');
        }));
    },
    staticInit: function () {
      FS.ensureErrnoError(),
        (FS.nameTable = new Array(4096)),
        FS.mount(MEMFS, {}, '/'),
        FS.createDefaultDirectories(),
        FS.createDefaultDevices(),
        FS.createSpecialDirectories(),
        (FS.filesystems = { MEMFS: MEMFS, IDBFS: IDBFS });
    },
    init: function (e, t, r) {
      (FS.init.initialized = !0),
        FS.ensureErrnoError(),
        (Module.stdin = e || Module.stdin),
        (Module.stdout = t || Module.stdout),
        (Module.stderr = r || Module.stderr),
        FS.createStandardStreams();
    },
    quit: function () {
      FS.init.initialized = !1;
      var e = Module._fflush;
      e && e(0);
      for (var t = 0; t < FS.streams.length; t++) {
        var r = FS.streams[t];
        r && FS.close(r);
      }
    },
    getMode: function (e, t) {
      var r = 0;
      return e && (r |= 365), t && (r |= 146), r;
    },
    findObject: function (e, t) {
      return (t = FS.analyzePath(e, t)).exists ? t.object : null;
    },
    analyzePath: function (e, t) {
      try {
        e = (n = FS.lookupPath(e, { follow: !t })).path;
      } catch (e) {}
      var r = {
        isRoot: !1,
        exists: !1,
        error: 0,
        name: null,
        path: null,
        object: null,
        parentExists: !1,
        parentPath: null,
        parentObject: null,
      };
      try {
        var n = FS.lookupPath(e, { parent: !0 });
        (r.parentExists = !0),
          (r.parentPath = n.path),
          (r.parentObject = n.node),
          (r.name = PATH.basename(e)),
          (n = FS.lookupPath(e, { follow: !t })),
          (r.exists = !0),
          (r.path = n.path),
          (r.object = n.node),
          (r.name = n.node.name),
          (r.isRoot = '/' === n.path);
      } catch (e) {
        r.error = e.errno;
      }
      return r;
    },
    createPath: function (e, t, r, n) {
      e = 'string' == typeof e ? e : FS.getPath(e);
      for (var o = t.split('/').reverse(); o.length; ) {
        var i = o.pop();
        if (i) {
          var a = PATH.join2(e, i);
          try {
            FS.mkdir(a);
          } catch (e) {}
          e = a;
        }
      }
      return a;
    },
    createFile: function (e, t, r, n, o) {
      return (
        (t = PATH.join2('string' == typeof e ? e : FS.getPath(e), t)),
        (o = FS.getMode(n, o)),
        FS.create(t, o)
      );
    },
    createDataFile: function (e, t, r, n, o, i) {
      if (
        ((e = t ? PATH.join2('string' == typeof e ? e : FS.getPath(e), t) : e),
        (n = FS.getMode(n, o)),
        (o = FS.create(e, n)),
        r)
      ) {
        if ('string' == typeof r) {
          for (var a = new Array(r.length), s = 0, c = r.length; s < c; ++s)
            a[s] = r.charCodeAt(s);
          r = a;
        }
        FS.chmod(o, 146 | n),
          (e = FS.open(o, 577)),
          FS.write(e, r, 0, r.length, 0, i),
          FS.close(e),
          FS.chmod(o, n);
      }
      return o;
    },
    createDevice: function (e, t, c, a) {
      var r = PATH.join2('string' == typeof e ? e : FS.getPath(e), t),
        e = FS.getMode(!!c, !!a);
      return (
        FS.createDevice.major || (FS.createDevice.major = 64),
        (t = FS.makedev(FS.createDevice.major++, 0)),
        FS.registerDevice(t, {
          open: function (e) {
            e.seekable = !1;
          },
          close: function (e) {
            a && a.buffer && a.buffer.length && a(10);
          },
          read: function (e, t, r, n, o) {
            for (var i, a = 0, s = 0; s < n; s++) {
              try {
                i = c();
              } catch (e) {
                throw new FS.ErrnoError(29);
              }
              if (void 0 === i && 0 === a) throw new FS.ErrnoError(6);
              if (null == i) break;
              a++, (t[r + s] = i);
            }
            return a && (e.node.timestamp = Date.now()), a;
          },
          write: function (e, t, r, n, o) {
            for (var i = 0; i < n; i++)
              try {
                a(t[r + i]);
              } catch (e) {
                throw new FS.ErrnoError(29);
              }
            return n && (e.node.timestamp = Date.now()), i;
          },
        }),
        FS.mkdev(r, e, t)
      );
    },
    forceLoadFile: function (e) {
      if (e.isDevice || e.isFolder || e.link || e.contents) return !0;
      if ('undefined' != typeof XMLHttpRequest)
        throw new Error(
          'Lazy loading should have been performed (contents set) in createLazyFile, but it was not. Lazy loading only works in web workers. Use --embed-file or --preload-file in emcc on the main thread.'
        );
      if (!read_)
        throw new Error('Cannot load without read() or XMLHttpRequest.');
      try {
        (e.contents = intArrayFromString(read_(e.url), !0)),
          (e.usedBytes = e.contents.length);
      } catch (e) {
        throw new FS.ErrnoError(29);
      }
    },
    createLazyFile: function (e, t, a, r, n) {
      function o() {
        (this.lengthKnown = !1), (this.chunks = []);
      }
      (o.prototype.get = function (e) {
        if (!(e > this.length - 1 || e < 0)) {
          var t = e % this.chunkSize,
            e = (e / this.chunkSize) | 0;
          return this.getter(e)[t];
        }
      }),
        (o.prototype.setDataGetter = function (e) {
          this.getter = e;
        }),
        (o.prototype.cacheLength = function () {
          var e = new XMLHttpRequest();
          if (
            (e.open('HEAD', a, !1),
            e.send(null),
            !((200 <= e.status && e.status < 300) || 304 === e.status))
          )
            throw new Error("Couldn't load " + a + '. Status: ' + e.status);
          var n = Number(e.getResponseHeader('Content-length')),
            t = (r = e.getResponseHeader('Accept-Ranges')) && 'bytes' === r,
            r = (r = e.getResponseHeader('Content-Encoding')) && 'gzip' === r,
            o = 1048576;
          t || (o = n);
          var i = this;
          i.setDataGetter(function (e) {
            var t = e * o,
              r = (e + 1) * o - 1,
              r = Math.min(r, n - 1);
            if (
              (void 0 === i.chunks[e] &&
                (i.chunks[e] = (function (e, t) {
                  if (t < e)
                    throw new Error(
                      'invalid range (' +
                        e +
                        ', ' +
                        t +
                        ') or no bytes requested!'
                    );
                  if (n - 1 < t)
                    throw new Error(
                      'only ' + n + ' bytes available! programmer error!'
                    );
                  var r = new XMLHttpRequest();
                  if (
                    (r.open('GET', a, !1),
                    n !== o &&
                      r.setRequestHeader('Range', 'bytes=' + e + '-' + t),
                    'undefined' != typeof Uint8Array &&
                      (r.responseType = 'arraybuffer'),
                    r.overrideMimeType &&
                      r.overrideMimeType('text/plain; charset=x-user-defined'),
                    r.send(null),
                    !((200 <= r.status && r.status < 300) || 304 === r.status))
                  )
                    throw new Error(
                      "Couldn't load " + a + '. Status: ' + r.status
                    );
                  return void 0 !== r.response
                    ? new Uint8Array(r.response || [])
                    : intArrayFromString(r.responseText || '', !0);
                })(t, r)),
              void 0 === i.chunks[e])
            )
              throw new Error('doXHR failed!');
            return i.chunks[e];
          }),
            (!r && n) ||
              ((o = n = 1),
              (n = this.getter(0).length),
              (o = n),
              out(
                'LazyFiles on gzip forces download of the whole file when length is accessed'
              )),
            (this._length = n),
            (this._chunkSize = o),
            (this.lengthKnown = !0);
        });
      var i =
          'undefined' != typeof XMLHttpRequest
            ? ((i = new o()),
              Object.defineProperties(i, {
                length: {
                  get: function () {
                    return this.lengthKnown || this.cacheLength(), this._length;
                  },
                },
                chunkSize: {
                  get: function () {
                    return (
                      this.lengthKnown || this.cacheLength(), this._chunkSize
                    );
                  },
                },
              }),
              { isDevice: !1, contents: i })
            : { isDevice: !1, url: a },
        c = FS.createFile(e, t, i, r, n);
      i.contents
        ? (c.contents = i.contents)
        : i.url && ((c.contents = null), (c.url = i.url)),
        Object.defineProperties(c, {
          usedBytes: {
            get: function () {
              return this.contents.length;
            },
          },
        });
      var s = {};
      return (
        Object.keys(c.stream_ops).forEach(function (e) {
          var t = c.stream_ops[e];
          s[e] = function () {
            return FS.forceLoadFile(c), t.apply(null, arguments);
          };
        }),
        (s.read = function (e, t, r, n, o) {
          FS.forceLoadFile(c);
          var i = e.node.contents;
          if (o >= i.length) return 0;
          var a = Math.min(i.length - o, n);
          if (i.slice) for (var s = 0; s < a; s++) t[r + s] = i[o + s];
          else for (s = 0; s < a; s++) t[r + s] = i.get(o + s);
          return a;
        }),
        (c.stream_ops = s),
        c
      );
    },
    createPreloadedFile: function (o, i, e, a, s, c, u, l, d, f) {
      Browser.init();
      var m = i ? PATH_FS.resolve(PATH.join2(o, i)) : o,
        _ = getUniqueRunDependency('cp ' + m);
      function t(t) {
        function r(e) {
          f && f(),
            l || FS.createDataFile(o, i, e, a, s, d),
            c && c(),
            removeRunDependency(_);
        }
        var n = !1;
        Module.preloadPlugins.forEach(function (e) {
          n ||
            (e.canHandle(m) &&
              (e.handle(t, m, r, function () {
                u && u(), removeRunDependency(_);
              }),
              (n = !0)));
        }),
          n || r(t);
      }
      addRunDependency(_),
        'string' == typeof e
          ? Browser.asyncLoad(
              e,
              function (e) {
                t(e);
              },
              u
            )
          : t(e);
    },
    indexedDB: function () {
      return (
        window.indexedDB ||
        window.mozIndexedDB ||
        window.webkitIndexedDB ||
        window.msIndexedDB
      );
    },
    DB_NAME: function () {
      return 'EM_FS_' + window.location.pathname;
    },
    DB_VERSION: 20,
    DB_STORE_NAME: 'FILE_DATA',
    saveFilesToDB: function (a, s, c) {
      (s = s || function () {}), (c = c || function () {});
      var e = FS.indexedDB();
      try {
        var u = e.open(FS.DB_NAME(), FS.DB_VERSION);
      } catch (e) {
        return c(e);
      }
      (u.onupgradeneeded = function () {
        out('creating db'), u.result.createObjectStore(FS.DB_STORE_NAME);
      }),
        (u.onsuccess = function () {
          var e = u.result.transaction([FS.DB_STORE_NAME], 'readwrite'),
            t = e.objectStore(FS.DB_STORE_NAME),
            r = 0,
            n = 0,
            o = a.length;
          function i() {
            (0 == n ? s : c)();
          }
          a.forEach(function (e) {
            ((e = t.put(FS.analyzePath(e).object.contents, e)).onsuccess =
              function () {
                ++r + n == o && i();
              }),
              (e.onerror = function () {
                r + ++n == o && i();
              });
          }),
            (e.onerror = c);
        }),
        (u.onerror = c);
    },
    loadFilesFromDB: function (s, c, u) {
      (c = c || function () {}), (u = u || function () {});
      var e = FS.indexedDB();
      try {
        var l = e.open(FS.DB_NAME(), FS.DB_VERSION);
      } catch (e) {
        return u(e);
      }
      (l.onupgradeneeded = u),
        (l.onsuccess = function () {
          var e = l.result;
          try {
            var t = e.transaction([FS.DB_STORE_NAME], 'readonly');
          } catch (e) {
            return void u(e);
          }
          var r = t.objectStore(FS.DB_STORE_NAME),
            n = 0,
            o = 0,
            i = s.length;
          function a() {
            (0 == o ? c : u)();
          }
          s.forEach(function (e) {
            var t = r.get(e);
            (t.onsuccess = function () {
              FS.analyzePath(e).exists && FS.unlink(e),
                FS.createDataFile(
                  PATH.dirname(e),
                  PATH.basename(e),
                  t.result,
                  !0,
                  !0,
                  !0
                ),
                ++n + o == i && a();
            }),
              (t.onerror = function () {
                n + ++o == i && a();
              });
          }),
            (t.onerror = u);
        }),
        (l.onerror = u);
    },
  },
  SYSCALLS = {
    mappings: {},
    DEFAULT_POLLMASK: 5,
    umask: 511,
    calculateAt: function (e, t, r) {
      if ('/' === t[0]) return t;
      var n;
      if (-100 === e) n = FS.cwd();
      else {
        if (!(e = FS.getStream(e))) throw new FS.ErrnoError(8);
        n = e.path;
      }
      if (0 != t.length) return PATH.join2(n, t);
      if (!r) throw new FS.ErrnoError(44);
      return n;
    },
    doStat: function (e, t, r) {
      try {
        var n = e(t);
      } catch (e) {
        if (
          e &&
          e.node &&
          PATH.normalize(t) !== PATH.normalize(FS.getPath(e.node))
        )
          return -54;
        throw e;
      }
      return (
        (HEAP32[r >> 2] = n.dev),
        (HEAP32[(r + 4) >> 2] = 0),
        (HEAP32[(r + 8) >> 2] = n.ino),
        (HEAP32[(r + 12) >> 2] = n.mode),
        (HEAP32[(r + 16) >> 2] = n.nlink),
        (HEAP32[(r + 20) >> 2] = n.uid),
        (HEAP32[(r + 24) >> 2] = n.gid),
        (HEAP32[(r + 28) >> 2] = n.rdev),
        (HEAP32[(r + 32) >> 2] = 0),
        (tempI64 = [
          n.size >>> 0,
          ((tempDouble = n.size),
          1 <= +Math.abs(tempDouble)
            ? 0 < tempDouble
              ? (0 |
                  Math.min(
                    +Math.floor(tempDouble / 4294967296),
                    4294967295
                  )) >>>
                0
              : ~~+Math.ceil(
                  (tempDouble - (~~tempDouble >>> 0)) / 4294967296
                ) >>> 0
            : 0),
        ]),
        (HEAP32[(r + 40) >> 2] = tempI64[0]),
        (HEAP32[(r + 44) >> 2] = tempI64[1]),
        (HEAP32[(r + 48) >> 2] = 4096),
        (HEAP32[(r + 52) >> 2] = n.blocks),
        (HEAP32[(r + 56) >> 2] = (n.atime.getTime() / 1e3) | 0),
        (HEAP32[(r + 60) >> 2] = 0),
        (HEAP32[(r + 64) >> 2] = (n.mtime.getTime() / 1e3) | 0),
        (HEAP32[(r + 68) >> 2] = 0),
        (HEAP32[(r + 72) >> 2] = (n.ctime.getTime() / 1e3) | 0),
        (HEAP32[(r + 76) >> 2] = 0),
        (tempI64 = [
          n.ino >>> 0,
          ((tempDouble = n.ino),
          1 <= +Math.abs(tempDouble)
            ? 0 < tempDouble
              ? (0 |
                  Math.min(
                    +Math.floor(tempDouble / 4294967296),
                    4294967295
                  )) >>>
                0
              : ~~+Math.ceil(
                  (tempDouble - (~~tempDouble >>> 0)) / 4294967296
                ) >>> 0
            : 0),
        ]),
        (HEAP32[(r + 80) >> 2] = tempI64[0]),
        (HEAP32[(r + 84) >> 2] = tempI64[1]),
        0
      );
    },
    doMsync: function (e, t, r, n, o) {
      (e = HEAPU8.slice(e, e + r)), FS.msync(t, e, o, r, n);
    },
    doMkdir: function (e, t) {
      return (
        '/' === (e = PATH.normalize(e))[e.length - 1] &&
          (e = e.substr(0, e.length - 1)),
        FS.mkdir(e, t, 0),
        0
      );
    },
    doMknod: function (e, t, r) {
      switch (61440 & t) {
        case 32768:
        case 8192:
        case 24576:
        case 4096:
        case 49152:
          break;
        default:
          return -28;
      }
      return FS.mknod(e, t, r), 0;
    },
    doReadlink: function (e, t, r) {
      if (r <= 0) return -28;
      var n = FS.readlink(e),
        o = Math.min(r, lengthBytesUTF8(n)),
        e = HEAP8[t + o];
      return stringToUTF8(n, t, r + 1), (HEAP8[t + o] = e), o;
    },
    doAccess: function (e, t) {
      if (-8 & t) return -28;
      var r = FS.lookupPath(e, { follow: !0 }).node;
      return r
        ? ((e = ''),
          4 & t && (e += 'r'),
          2 & t && (e += 'w'),
          1 & t && (e += 'x'),
          e && FS.nodePermissions(r, e) ? -2 : 0)
        : -44;
    },
    doDup: function (e, t, r) {
      var n = FS.getStream(r);
      return n && FS.close(n), FS.open(e, t, 0, r, r).fd;
    },
    doReadv: function (e, t, r, n) {
      for (var o = 0, i = 0; i < r; i++) {
        var a = HEAP32[(t + 8 * i) >> 2],
          s = HEAP32[(t + (8 * i + 4)) >> 2];
        if ((a = FS.read(e, HEAP8, a, s, n)) < 0) return -1;
        if (((o += a), a < s)) break;
      }
      return o;
    },
    doWritev: function (e, t, r, n) {
      for (var o = 0, i = 0; i < r; i++) {
        var a = HEAP32[(t + 8 * i) >> 2],
          s = HEAP32[(t + (8 * i + 4)) >> 2];
        if ((s = FS.write(e, HEAP8, a, s, n)) < 0) return -1;
        o += s;
      }
      return o;
    },
    varargs: void 0,
    get: function () {
      return (SYSCALLS.varargs += 4), HEAP32[(SYSCALLS.varargs - 4) >> 2];
    },
    getStr: function (e) {
      return UTF8ToString(e);
    },
    getStreamFromFD: function (e) {
      if (!(e = FS.getStream(e))) throw new FS.ErrnoError(8);
      return e;
    },
    get64: function (e, t) {
      return e;
    },
  };
function ___sys_fcntl64(e, t, r) {
  SYSCALLS.varargs = r;
  try {
    var n = SYSCALLS.getStreamFromFD(e);
    switch (t) {
      case 0:
        return (o = SYSCALLS.get()) < 0
          ? -28
          : FS.open(n.path, n.flags, 0, o).fd;
      case 1:
      case 2:
        return 0;
      case 3:
        return n.flags;
      case 4:
        var o = SYSCALLS.get();
        return (n.flags |= o), 0;
      case 12:
        return (o = SYSCALLS.get()), (HEAP16[(o + 0) >> 1] = 2), 0;
      case 13:
      case 14:
        return 0;
      case 16:
      case 8:
        return -28;
      case 9:
        return setErrNo(28), -1;
      default:
        return -28;
    }
  } catch (e) {
    return (void 0 !== FS && e instanceof FS.ErrnoError) || abort(e), -e.errno;
  }
}
function ___sys_getdents64(e, t, r) {
  try {
    var n = SYSCALLS.getStreamFromFD(e);
    n.getdents || (n.getdents = FS.readdir(n.path));
    for (
      var o = 0, i = FS.llseek(n, 0, 1), a = Math.floor(i / 280);
      a < n.getdents.length && o + 280 <= r;

    ) {
      var s,
        c,
        u = n.getdents[a],
        l =
          '.' === u[0]
            ? ((c = 1), 4)
            : ((c = (s = FS.lookupNode(n.node, u)).id),
              FS.isChrdev(s.mode)
                ? 2
                : FS.isDir(s.mode)
                ? 4
                : FS.isLink(s.mode)
                ? 10
                : 8);
      (tempI64 = [
        c >>> 0,
        ((tempDouble = c),
        1 <= +Math.abs(tempDouble)
          ? 0 < tempDouble
            ? (0 |
                Math.min(+Math.floor(tempDouble / 4294967296), 4294967295)) >>>
              0
            : ~~+Math.ceil((tempDouble - (~~tempDouble >>> 0)) / 4294967296) >>>
              0
          : 0),
      ]),
        (HEAP32[(t + o) >> 2] = tempI64[0]),
        (HEAP32[(t + o + 4) >> 2] = tempI64[1]),
        (tempI64 = [
          (280 * (a + 1)) >>> 0,
          ((tempDouble = 280 * (a + 1)),
          1 <= +Math.abs(tempDouble)
            ? 0 < tempDouble
              ? (0 |
                  Math.min(
                    +Math.floor(tempDouble / 4294967296),
                    4294967295
                  )) >>>
                0
              : ~~+Math.ceil(
                  (tempDouble - (~~tempDouble >>> 0)) / 4294967296
                ) >>> 0
            : 0),
        ]),
        (HEAP32[(t + o + 8) >> 2] = tempI64[0]),
        (HEAP32[(t + o + 12) >> 2] = tempI64[1]),
        (HEAP16[(t + o + 16) >> 1] = 280),
        (HEAP8[(t + o + 18) >> 0] = l),
        stringToUTF8(u, t + o + 19, 256),
        (o += 280),
        (a += 1);
    }
    return FS.llseek(n, 280 * a, 0), o;
  } catch (e) {
    return (void 0 !== FS && e instanceof FS.ErrnoError) || abort(e), -e.errno;
  }
}
function ___sys_ioctl(e, t, r) {
  SYSCALLS.varargs = r;
  try {
    var n = SYSCALLS.getStreamFromFD(e);
    switch (t) {
      case 21509:
      case 21505:
        return n.tty ? 0 : -59;
      case 21510:
      case 21511:
      case 21512:
      case 21506:
      case 21507:
      case 21508:
        return n.tty ? 0 : -59;
      case 21519:
        if (!n.tty) return -59;
        var o = SYSCALLS.get();
        return (HEAP32[o >> 2] = 0);
      case 21520:
        return n.tty ? -28 : -59;
      case 21531:
        return (o = SYSCALLS.get()), FS.ioctl(n, t, o);
      case 21523:
      case 21524:
        return n.tty ? 0 : -59;
      default:
        abort('bad ioctl syscall ' + t);
    }
  } catch (e) {
    return (void 0 !== FS && e instanceof FS.ErrnoError) || abort(e), -e.errno;
  }
}
function ___sys_open(e, t, r) {
  SYSCALLS.varargs = r;
  try {
    var n = SYSCALLS.getStr(e),
      o = r ? SYSCALLS.get() : 0;
    return FS.open(n, t, o).fd;
  } catch (e) {
    return (void 0 !== FS && e instanceof FS.ErrnoError) || abort(e), -e.errno;
  }
}
function ___sys_rename(e, t) {
  try {
    return (
      (e = SYSCALLS.getStr(e)), (t = SYSCALLS.getStr(t)), FS.rename(e, t), 0
    );
  } catch (e) {
    return (void 0 !== FS && e instanceof FS.ErrnoError) || abort(e), -e.errno;
  }
}
function ___sys_rmdir(e) {
  try {
    return (e = SYSCALLS.getStr(e)), FS.rmdir(e), 0;
  } catch (e) {
    return (void 0 !== FS && e instanceof FS.ErrnoError) || abort(e), -e.errno;
  }
}
function ___sys_stat64(e, t) {
  try {
    return (e = SYSCALLS.getStr(e)), SYSCALLS.doStat(FS.stat, e, t);
  } catch (e) {
    return (void 0 !== FS && e instanceof FS.ErrnoError) || abort(e), -e.errno;
  }
}
function ___sys_statfs64(e, t, r) {
  try {
    return (
      (e = SYSCALLS.getStr(e)),
      (HEAP32[(r + 4) >> 2] = 4096),
      (HEAP32[(r + 40) >> 2] = 4096),
      (HEAP32[(r + 8) >> 2] = 1e6),
      (HEAP32[(r + 12) >> 2] = 5e5),
      (HEAP32[(r + 16) >> 2] = 5e5),
      (HEAP32[(r + 20) >> 2] = FS.nextInode),
      (HEAP32[(r + 24) >> 2] = 1e6),
      (HEAP32[(r + 28) >> 2] = 42),
      (HEAP32[(r + 44) >> 2] = 2),
      (HEAP32[(r + 36) >> 2] = 255),
      0
    );
  } catch (e) {
    return (void 0 !== FS && e instanceof FS.ErrnoError) || abort(e), -e.errno;
  }
}
function ___sys_unlink(e) {
  try {
    return (e = SYSCALLS.getStr(e)), FS.unlink(e), 0;
  } catch (e) {
    return (void 0 !== FS && e instanceof FS.ErrnoError) || abort(e), -e.errno;
  }
}
function _abort() {
  abort();
}
var _emscripten_get_now =
    'undefined' != typeof dateNow
      ? dateNow
      : function () {
          return performance.now();
        },
  _emscripten_get_now_is_monotonic = !0;
function _clock_gettime(e, t) {
  var r;
  if (0 === e) r = Date.now();
  else {
    if ((1 !== e && 4 !== e) || !_emscripten_get_now_is_monotonic)
      return setErrNo(28), -1;
    r = _emscripten_get_now();
  }
  return (
    (HEAP32[t >> 2] = (r / 1e3) | 0),
    (HEAP32[(t + 4) >> 2] = ((r % 1e3) * 1e3 * 1e3) | 0),
    0
  );
}
function _emscripten_set_main_loop_timing(e, t) {
  return (
    (Browser.mainLoop.timingMode = e),
    (Browser.mainLoop.timingValue = t),
    Browser.mainLoop.func
      ? (0 == e
          ? ((Browser.mainLoop.scheduler = function () {
              var e =
                0 |
                Math.max(
                  0,
                  Browser.mainLoop.tickStartTime + t - _emscripten_get_now()
                );
              setTimeout(Browser.mainLoop.runner, e);
            }),
            (Browser.mainLoop.method = 'timeout'))
          : 1 == e
          ? ((Browser.mainLoop.scheduler = function () {
              Browser.requestAnimationFrame(Browser.mainLoop.runner);
            }),
            (Browser.mainLoop.method = 'rAF'))
          : 2 == e &&
            ('undefined' == typeof setImmediate &&
              ((r = []),
              (n = 'setimmediate'),
              addEventListener(
                'message',
                function (e) {
                  (e.data !== n && e.data.target !== n) ||
                    (e.stopPropagation(), r.shift()());
                },
                !0
              ),
              (setImmediate = function (e) {
                r.push(e),
                  void 0 === Module.setImmediates &&
                    (Module.setImmediates = []),
                  Module.setImmediates.push(e),
                  postMessage({ target: n });
              })),
            (Browser.mainLoop.scheduler = function () {
              setImmediate(Browser.mainLoop.runner);
            }),
            (Browser.mainLoop.method = 'immediate')),
        0)
      : 1
  );
  var r, n;
}
function setMainLoop(o, e, t, r, n) {
  (noExitRuntime = !0),
    assert(
      !Browser.mainLoop.func,
      'emscripten_set_main_loop: there can only be one main loop function at once: call emscripten_cancel_main_loop to cancel the previous one before setting a new one with different parameters.'
    ),
    (Browser.mainLoop.func = o),
    (Browser.mainLoop.arg = r);
  var i = Browser.mainLoop.currentlyRunningMainloop;
  if (
    ((Browser.mainLoop.runner = function () {
      if (!ABORT) {
        if (0 < Browser.mainLoop.queue.length) {
          var e,
            t,
            r = Date.now(),
            n = Browser.mainLoop.queue.shift();
          return (
            n.func(n.arg),
            Browser.mainLoop.remainingBlockers &&
              ((t =
                (e = Browser.mainLoop.remainingBlockers) % 1 == 0
                  ? e - 1
                  : Math.floor(e)),
              n.counted
                ? (Browser.mainLoop.remainingBlockers = t)
                : (Browser.mainLoop.remainingBlockers =
                    (8 * e + (t += 0.5)) / 9)),
            console.log(
              'main loop blocker "' +
                n.name +
                '" took ' +
                (Date.now() - r) +
                ' ms'
            ),
            Browser.mainLoop.updateStatus(),
            i < Browser.mainLoop.currentlyRunningMainloop
              ? void 0
              : void setTimeout(Browser.mainLoop.runner, 0)
          );
        }
        i < Browser.mainLoop.currentlyRunningMainloop ||
          ((Browser.mainLoop.currentFrameNumber =
            (Browser.mainLoop.currentFrameNumber + 1) | 0),
          1 == Browser.mainLoop.timingMode &&
          1 < Browser.mainLoop.timingValue &&
          Browser.mainLoop.currentFrameNumber % Browser.mainLoop.timingValue !=
            0
            ? Browser.mainLoop.scheduler()
            : (0 == Browser.mainLoop.timingMode &&
                (Browser.mainLoop.tickStartTime = _emscripten_get_now()),
              Browser.mainLoop.runIter(o),
              i < Browser.mainLoop.currentlyRunningMainloop ||
                ('object' == typeof SDL &&
                  SDL.audio &&
                  SDL.audio.queueNewAudioData &&
                  SDL.audio.queueNewAudioData(),
                Browser.mainLoop.scheduler())));
      }
    }),
    n ||
      (e && 0 < e
        ? _emscripten_set_main_loop_timing(0, 1e3 / e)
        : _emscripten_set_main_loop_timing(1, 1),
      Browser.mainLoop.scheduler()),
    t)
  )
    throw 'unwind';
}
var Browser = {
    mainLoop: {
      scheduler: null,
      method: '',
      currentlyRunningMainloop: 0,
      func: null,
      arg: 0,
      timingMode: 0,
      timingValue: 0,
      currentFrameNumber: 0,
      queue: [],
      pause: function () {
        (Browser.mainLoop.scheduler = null),
          Browser.mainLoop.currentlyRunningMainloop++;
      },
      resume: function () {
        Browser.mainLoop.currentlyRunningMainloop++;
        var e = Browser.mainLoop.timingMode,
          t = Browser.mainLoop.timingValue,
          r = Browser.mainLoop.func;
        (Browser.mainLoop.func = null),
          setMainLoop(r, 0, !1, Browser.mainLoop.arg, !0),
          _emscripten_set_main_loop_timing(e, t),
          Browser.mainLoop.scheduler();
      },
      updateStatus: function () {
        var e, t, r;
        Module.setStatus &&
          ((e = Module.statusMessage || 'Please wait...'),
          (t = Browser.mainLoop.remainingBlockers),
          (r = Browser.mainLoop.expectedBlockers),
          t
            ? t < r
              ? Module.setStatus(e + ' (' + (r - t) + '/' + r + ')')
              : Module.setStatus(e)
            : Module.setStatus(''));
      },
      runIter: function (e) {
        if (!(ABORT || (Module.preMainLoop && !1 === Module.preMainLoop()))) {
          try {
            e();
          } catch (e) {
            if (e instanceof ExitStatus) return;
            if ('unwind' == e) return;
            throw (
              (e &&
                'object' == typeof e &&
                e.stack &&
                err('exception thrown: ' + [e, e.stack]),
              e)
            );
          }
          Module.postMainLoop && Module.postMainLoop();
        }
      },
    },
    isFullscreen: !1,
    pointerLock: !1,
    moduleContextCreatedCallbacks: [],
    workers: [],
    init: function () {
      if (
        (Module.preloadPlugins || (Module.preloadPlugins = []),
        !Browser.initted)
      ) {
        Browser.initted = !0;
        try {
          new Blob(), (Browser.hasBlobConstructor = !0);
        } catch (e) {
          (Browser.hasBlobConstructor = !1),
            console.log(
              'warning: no blob constructor, cannot create blobs with mimetypes'
            );
        }
        (Browser.BlobBuilder =
          'undefined' != typeof MozBlobBuilder
            ? MozBlobBuilder
            : 'undefined' != typeof WebKitBlobBuilder
            ? WebKitBlobBuilder
            : Browser.hasBlobConstructor
            ? null
            : console.log('warning: no BlobBuilder')),
          (Browser.URLObject =
            'undefined' != typeof window
              ? window.URL || window.webkitURL
              : void 0),
          Module.noImageDecoding ||
            void 0 !== Browser.URLObject ||
            (console.log(
              'warning: Browser does not support creating object URLs. Built-in browser image decoding will not be available.'
            ),
            (Module.noImageDecoding = !0));
        var e = {
          canHandle: function (e) {
            return !Module.noImageDecoding && /\.(jpg|jpeg|png|bmp)$/i.test(e);
          },
          handle: function (t, r, n, o) {
            var e,
              i = null;
            if (Browser.hasBlobConstructor)
              try {
                (i = new Blob([t], { type: Browser.getMimetype(r) })).size !==
                  t.length &&
                  (i = new Blob([new Uint8Array(t).buffer], {
                    type: Browser.getMimetype(r),
                  }));
              } catch (e) {
                warnOnce(
                  'Blob constructor present but fails: ' +
                    e +
                    '; falling back to blob builder'
                );
              }
            i ||
              ((e = new Browser.BlobBuilder()).append(new Uint8Array(t).buffer),
              (i = e.getBlob()));
            var a = Browser.URLObject.createObjectURL(i),
              s = new Image();
            (s.onload = function () {
              assert(s.complete, 'Image ' + r + ' could not be decoded');
              var e = document.createElement('canvas');
              (e.width = s.width),
                (e.height = s.height),
                e.getContext('2d').drawImage(s, 0, 0),
                (Module.preloadedImages[r] = e),
                Browser.URLObject.revokeObjectURL(a),
                n && n(t);
            }),
              (s.onerror = function (e) {
                console.log('Image ' + a + ' could not be decoded'), o && o();
              }),
              (s.src = a);
          },
        };
        Module.preloadPlugins.push(e),
          (e = {
            canHandle: function (e) {
              return (
                !Module.noAudioDecoding &&
                e.substr(-4) in { '.ogg': 1, '.wav': 1, '.mp3': 1 }
              );
            },
            handle: function (t, r, n, e) {
              var o = !1;
              function i(e) {
                o || ((o = !0), (Module.preloadedAudios[r] = e), n && n(t));
              }
              function a() {
                o ||
                  ((o = !0),
                  (Module.preloadedAudios[r] = new Audio()),
                  e && e());
              }
              if (!Browser.hasBlobConstructor) return a();
              try {
                var s = new Blob([t], { type: Browser.getMimetype(r) });
              } catch (e) {
                return a();
              }
              var s = Browser.URLObject.createObjectURL(s),
                c = new Audio();
              c.addEventListener(
                'canplaythrough',
                function () {
                  i(c);
                },
                !1
              ),
                (c.onerror = function (e) {
                  o ||
                    (console.log(
                      'warning: browser could not fully decode audio ' +
                        r +
                        ', trying slower base64 approach'
                    ),
                    (c.src =
                      'data:audio/x-' +
                      r.substr(-3) +
                      ';base64,' +
                      (function (e) {
                        for (
                          var t =
                              'ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789+/',
                            r = '',
                            n = 0,
                            o = 0,
                            i = 0;
                          i < e.length;
                          i++
                        )
                          for (n = (n << 8) | e[i], o += 8; 6 <= o; ) {
                            var a = (n >> (o - 6)) & 63;
                            (o -= 6), (r += t[a]);
                          }
                        return (
                          2 == o
                            ? ((r += t[(3 & n) << 4]), (r += '=='))
                            : 4 == o && ((r += t[(15 & n) << 2]), (r += '=')),
                          r
                        );
                      })(t)),
                    i(c));
                }),
                (c.src = s),
                Browser.safeSetTimeout(function () {
                  i(c);
                }, 1e4);
            },
          }),
          Module.preloadPlugins.push(e),
          (e = Module.canvas) &&
            ((e.requestPointerLock =
              e.requestPointerLock ||
              e.mozRequestPointerLock ||
              e.webkitRequestPointerLock ||
              e.msRequestPointerLock ||
              function () {}),
            (e.exitPointerLock =
              document.exitPointerLock ||
              document.mozExitPointerLock ||
              document.webkitExitPointerLock ||
              document.msExitPointerLock ||
              function () {}),
            (e.exitPointerLock = e.exitPointerLock.bind(document)),
            document.addEventListener('pointerlockchange', t, !1),
            document.addEventListener('mozpointerlockchange', t, !1),
            document.addEventListener('webkitpointerlockchange', t, !1),
            document.addEventListener('mspointerlockchange', t, !1),
            Module.elementPointerLock &&
              e.addEventListener(
                'click',
                function (e) {
                  !Browser.pointerLock &&
                    Module.canvas.requestPointerLock &&
                    (Module.canvas.requestPointerLock(), e.preventDefault());
                },
                !1
              ));
      }
      function t() {
        Browser.pointerLock =
          document.pointerLockElement === Module.canvas ||
          document.mozPointerLockElement === Module.canvas ||
          document.webkitPointerLockElement === Module.canvas ||
          document.msPointerLockElement === Module.canvas;
      }
    },
    createContext: function (e, t, r, n) {
      if (t && Module.ctx && e == Module.canvas) return Module.ctx;
      var o, i;
      if (t) {
        var a = { antialias: !1, alpha: !1, majorVersion: 1 };
        if (n) for (var s in n) a[s] = n[s];
        void 0 !== GL &&
          (i = GL.createContext(e, a)) &&
          (o = GL.getContext(i).GLctx);
      } else o = e.getContext('2d');
      return o
        ? (r &&
            (t ||
              assert(
                void 0 === GLctx,
                'cannot set in module if GLctx is used, but we are a non-GL context that would replace it'
              ),
            (Module.ctx = o),
            t && GL.makeContextCurrent(i),
            (Module.useWebGL = t),
            Browser.moduleContextCreatedCallbacks.forEach(function (e) {
              e();
            }),
            Browser.init()),
          o)
        : null;
    },
    destroyContext: function (e, t, r) {},
    fullscreenHandlersInstalled: !1,
    lockPointer: void 0,
    resizeCanvas: void 0,
    requestFullscreen: function (e, t) {
      (Browser.lockPointer = e),
        (Browser.resizeCanvas = t),
        void 0 === Browser.lockPointer && (Browser.lockPointer = !0),
        void 0 === Browser.resizeCanvas && (Browser.resizeCanvas = !1);
      var r = Module.canvas;
      function n() {
        Browser.isFullscreen = !1;
        var e = r.parentNode;
        (document.fullscreenElement ||
          document.mozFullScreenElement ||
          document.msFullscreenElement ||
          document.webkitFullscreenElement ||
          document.webkitCurrentFullScreenElement) === e
          ? ((r.exitFullscreen = Browser.exitFullscreen),
            Browser.lockPointer && r.requestPointerLock(),
            (Browser.isFullscreen = !0),
            Browser.resizeCanvas
              ? Browser.setFullscreenCanvasSize()
              : Browser.updateCanvasDimensions(r))
          : (e.parentNode.insertBefore(r, e),
            e.parentNode.removeChild(e),
            Browser.resizeCanvas
              ? Browser.setWindowedCanvasSize()
              : Browser.updateCanvasDimensions(r)),
          Module.onFullScreen && Module.onFullScreen(Browser.isFullscreen),
          Module.onFullscreen && Module.onFullscreen(Browser.isFullscreen);
      }
      Browser.fullscreenHandlersInstalled ||
        ((Browser.fullscreenHandlersInstalled = !0),
        document.addEventListener('fullscreenchange', n, !1),
        document.addEventListener('mozfullscreenchange', n, !1),
        document.addEventListener('webkitfullscreenchange', n, !1),
        document.addEventListener('MSFullscreenChange', n, !1));
      var o = document.createElement('div');
      r.parentNode.insertBefore(o, r),
        o.appendChild(r),
        (o.requestFullscreen =
          o.requestFullscreen ||
          o.mozRequestFullScreen ||
          o.msRequestFullscreen ||
          (o.webkitRequestFullscreen
            ? function () {
                o.webkitRequestFullscreen(Element.ALLOW_KEYBOARD_INPUT);
              }
            : null) ||
          (o.webkitRequestFullScreen
            ? function () {
                o.webkitRequestFullScreen(Element.ALLOW_KEYBOARD_INPUT);
              }
            : null)),
        o.requestFullscreen();
    },
    exitFullscreen: function () {
      return (
        !!Browser.isFullscreen &&
        ((
          document.exitFullscreen ||
          document.cancelFullScreen ||
          document.mozCancelFullScreen ||
          document.msExitFullscreen ||
          document.webkitCancelFullScreen ||
          function () {}
        ).apply(document, []),
        !0)
      );
    },
    nextRAF: 0,
    fakeRequestAnimationFrame: function (e) {
      var t = Date.now();
      if (0 === Browser.nextRAF) Browser.nextRAF = t + 1e3 / 60;
      else for (; t + 2 >= Browser.nextRAF; ) Browser.nextRAF += 1e3 / 60;
      var r = Math.max(Browser.nextRAF - t, 0);
      setTimeout(e, r);
    },
    requestAnimationFrame: function (e) {
      ('function' != typeof requestAnimationFrame
        ? Browser.fakeRequestAnimationFrame
        : requestAnimationFrame)(e);
    },
    safeRequestAnimationFrame: function (e) {
      return Browser.requestAnimationFrame(function () {
        ABORT || e();
      });
    },
    safeSetTimeout: function (e, t) {
      return (
        (noExitRuntime = !0),
        setTimeout(function () {
          ABORT || e();
        }, t)
      );
    },
    getMimetype: function (e) {
      return {
        jpg: 'image/jpeg',
        jpeg: 'image/jpeg',
        png: 'image/png',
        bmp: 'image/bmp',
        ogg: 'audio/ogg',
        wav: 'audio/wav',
        mp3: 'audio/mpeg',
      }[e.substr(e.lastIndexOf('.') + 1)];
    },
    getUserMedia: function (e) {
      window.getUserMedia ||
        (window.getUserMedia =
          navigator.getUserMedia || navigator.mozGetUserMedia),
        window.getUserMedia(e);
    },
    getMovementX: function (e) {
      return e.movementX || e.mozMovementX || e.webkitMovementX || 0;
    },
    getMovementY: function (e) {
      return e.movementY || e.mozMovementY || e.webkitMovementY || 0;
    },
    getMouseWheelDelta: function (e) {
      var t = 0;
      switch (e.type) {
        case 'DOMMouseScroll':
          t = e.detail / 3;
          break;
        case 'mousewheel':
          t = e.wheelDelta / 120;
          break;
        case 'wheel':
          switch (((t = e.deltaY), e.deltaMode)) {
            case 0:
              t /= 100;
              break;
            case 1:
              t /= 3;
              break;
            case 2:
              t *= 80;
              break;
            default:
              throw 'unrecognized mouse wheel delta mode: ' + e.deltaMode;
          }
          break;
        default:
          throw 'unrecognized mouse wheel event: ' + e.type;
      }
      return t;
    },
    mouseX: 0,
    mouseY: 0,
    mouseMovementX: 0,
    mouseMovementY: 0,
    touches: {},
    lastTouches: {},
    calculateMouseEvent: function (e) {
      var t, r, n, o, i, a, s;
      Browser.pointerLock
        ? ('mousemove' != e.type && 'mozMovementX' in e
            ? (Browser.mouseMovementX = Browser.mouseMovementY = 0)
            : ((Browser.mouseMovementX = Browser.getMovementX(e)),
              (Browser.mouseMovementY = Browser.getMovementY(e))),
          'undefined' != typeof SDL
            ? ((Browser.mouseX = SDL.mouseX + Browser.mouseMovementX),
              (Browser.mouseY = SDL.mouseY + Browser.mouseMovementY))
            : ((Browser.mouseX += Browser.mouseMovementX),
              (Browser.mouseY += Browser.mouseMovementY)))
        : ((t = Module.canvas.getBoundingClientRect()),
          (r = Module.canvas.width),
          (n = Module.canvas.height),
          (a = void 0 !== window.scrollX ? window.scrollX : window.pageXOffset),
          (s = void 0 !== window.scrollY ? window.scrollY : window.pageYOffset),
          'touchstart' !== e.type &&
          'touchend' !== e.type &&
          'touchmove' !== e.type
            ? ((o = e.pageX - (a + t.left)),
              (i = e.pageY - (s + t.top)),
              (o *= r / t.width),
              (i *= n / t.height),
              (Browser.mouseMovementX = o - Browser.mouseX),
              (Browser.mouseMovementY = i - Browser.mouseY),
              (Browser.mouseX = o),
              (Browser.mouseY = i))
            : void 0 !== (i = e.touch) &&
              ((a = i.pageX - (a + t.left)),
              (s = i.pageY - (s + t.top)),
              (s = { x: (a *= r / t.width), y: (s *= n / t.height) }),
              'touchstart' === e.type
                ? ((Browser.lastTouches[i.identifier] = s),
                  (Browser.touches[i.identifier] = s))
                : ('touchend' !== e.type && 'touchmove' !== e.type) ||
                  ((e = Browser.touches[i.identifier]),
                  (Browser.lastTouches[i.identifier] = e = e || s),
                  (Browser.touches[i.identifier] = s))));
    },
    asyncLoad: function (t, r, n, e) {
      var o = e ? '' : getUniqueRunDependency('al ' + t);
      readAsync(
        t,
        function (e) {
          assert(e, 'Loading data file "' + t + '" failed (no arrayBuffer).'),
            r(new Uint8Array(e)),
            o && removeRunDependency(o);
        },
        function (e) {
          if (!n) throw 'Loading data file "' + t + '" failed.';
          n();
        }
      ),
        o && addRunDependency(o);
    },
    resizeListeners: [],
    updateResizeListeners: function () {
      var t = Module.canvas;
      Browser.resizeListeners.forEach(function (e) {
        e(t.width, t.height);
      });
    },
    setCanvasSize: function (e, t, r) {
      var n = Module.canvas;
      Browser.updateCanvasDimensions(n, e, t),
        r || Browser.updateResizeListeners();
    },
    windowedWidth: 0,
    windowedHeight: 0,
    setFullscreenCanvasSize: function () {
      var e;
      'undefined' != typeof SDL &&
        ((e = HEAPU32[SDL.screen >> 2]),
        (HEAP32[SDL.screen >> 2] = e |= 8388608)),
        Browser.updateCanvasDimensions(Module.canvas),
        Browser.updateResizeListeners();
    },
    setWindowedCanvasSize: function () {
      var e;
      'undefined' != typeof SDL &&
        ((e = HEAPU32[SDL.screen >> 2]),
        (HEAP32[SDL.screen >> 2] = e &= -8388609)),
        Browser.updateCanvasDimensions(Module.canvas),
        Browser.updateResizeListeners();
    },
    updateCanvasDimensions: function (e, t, r) {
      t && r
        ? ((e.widthNative = t), (e.heightNative = r))
        : ((t = e.widthNative), (r = e.heightNative));
      var n,
        o = t,
        i = r;
      Module.forcedAspectRatio &&
        0 < Module.forcedAspectRatio &&
        (o / i < Module.forcedAspectRatio
          ? (o = Math.round(i * Module.forcedAspectRatio))
          : (i = Math.round(o / Module.forcedAspectRatio))),
        (document.fullscreenElement ||
          document.mozFullScreenElement ||
          document.msFullscreenElement ||
          document.webkitFullscreenElement ||
          document.webkitCurrentFullScreenElement) === e.parentNode &&
          'undefined' != typeof screen &&
          ((n = Math.min(screen.width / o, screen.height / i)),
          (o = Math.round(o * n)),
          (i = Math.round(i * n))),
        Browser.resizeCanvas
          ? (e.width != o && (e.width = o),
            e.height != i && (e.height = i),
            void 0 !== e.style &&
              (e.style.removeProperty('width'),
              e.style.removeProperty('height')))
          : (e.width != t && (e.width = t),
            e.height != r && (e.height = r),
            void 0 !== e.style &&
              (o != t || i != r
                ? (e.style.setProperty('width', o + 'px', 'important'),
                  e.style.setProperty('height', i + 'px', 'important'))
                : (e.style.removeProperty('width'),
                  e.style.removeProperty('height'))));
    },
    wgetRequests: {},
    nextWgetRequestHandle: 0,
    getNextWgetRequestHandle: function () {
      var e = Browser.nextWgetRequestHandle;
      return Browser.nextWgetRequestHandle++, e;
    },
  },
  EGL = {
    errorCode: 12288,
    defaultDisplayInitialized: !1,
    currentContext: 0,
    currentReadSurface: 0,
    currentDrawSurface: 0,
    contextAttributes: { alpha: !1, depth: !1, stencil: !1, antialias: !1 },
    stringCache: {},
    setErrorCode: function (e) {
      EGL.errorCode = e;
    },
    chooseConfig: function (e, t, r, n, o) {
      if (62e3 != e) return EGL.setErrorCode(12296), 0;
      if (t)
        for (;;) {
          var i = HEAP32[t >> 2];
          if (12321 == i) {
            var a = HEAP32[(t + 4) >> 2];
            EGL.contextAttributes.alpha = 0 < a;
          } else if (12325 == i)
            (a = HEAP32[(t + 4) >> 2]), (EGL.contextAttributes.depth = 0 < a);
          else if (12326 == i) {
            var s = HEAP32[(t + 4) >> 2];
            EGL.contextAttributes.stencil = 0 < s;
          } else if (12337 == i) {
            var c = HEAP32[(t + 4) >> 2];
            EGL.contextAttributes.antialias = 0 < c;
          } else if (12338 == i)
            (c = HEAP32[(t + 4) >> 2]),
              (EGL.contextAttributes.antialias = 1 == c);
          else if (12544 == i)
            (s = HEAP32[(t + 4) >> 2]),
              (EGL.contextAttributes.lowLatency = 12547 != s);
          else if (12344 == i) break;
          t += 8;
        }
      return (r && n) || o
        ? (o && (HEAP32[o >> 2] = 1),
          r && 0 < n && (HEAP32[r >> 2] = 62002),
          EGL.setErrorCode(12288),
          1)
        : (EGL.setErrorCode(12300), 0);
    },
  };
function _eglBindAPI(e) {
  return 12448 == e
    ? (EGL.setErrorCode(12288), 1)
    : (EGL.setErrorCode(12300), 0);
}
function _eglChooseConfig(e, t, r, n, o) {
  return EGL.chooseConfig(e, t, r, n, o);
}
function __webgl_enable_ANGLE_instanced_arrays(e) {
  var i = e.getExtension('ANGLE_instanced_arrays');
  if (i)
    return (
      (e.vertexAttribDivisor = function (e, t) {
        i.vertexAttribDivisorANGLE(e, t);
      }),
      (e.drawArraysInstanced = function (e, t, r, n) {
        i.drawArraysInstancedANGLE(e, t, r, n);
      }),
      (e.drawElementsInstanced = function (e, t, r, n, o) {
        i.drawElementsInstancedANGLE(e, t, r, n, o);
      }),
      1
    );
}
function __webgl_enable_OES_vertex_array_object(e) {
  var t = e.getExtension('OES_vertex_array_object');
  if (t)
    return (
      (e.createVertexArray = function () {
        return t.createVertexArrayOES();
      }),
      (e.deleteVertexArray = function (e) {
        t.deleteVertexArrayOES(e);
      }),
      (e.bindVertexArray = function (e) {
        t.bindVertexArrayOES(e);
      }),
      (e.isVertexArray = function (e) {
        return t.isVertexArrayOES(e);
      }),
      1
    );
}
function __webgl_enable_WEBGL_draw_buffers(e) {
  var r = e.getExtension('WEBGL_draw_buffers');
  if (r)
    return (
      (e.drawBuffers = function (e, t) {
        r.drawBuffersWEBGL(e, t);
      }),
      1
    );
}
function __webgl_enable_WEBGL_multi_draw(e) {
  return !!(e.multiDrawWebgl = e.getExtension('WEBGL_multi_draw'));
}
var GL = {
  counter: 1,
  buffers: [],
  programs: [],
  framebuffers: [],
  renderbuffers: [],
  textures: [],
  uniforms: [],
  shaders: [],
  vaos: [],
  contexts: [],
  offscreenCanvases: {},
  timerQueriesEXT: [],
  programInfos: {},
  stringCache: {},
  unpackAlignment: 4,
  recordError: function (e) {
    GL.lastError || (GL.lastError = e);
  },
  getNewId: function (e) {
    for (var t = GL.counter++, r = e.length; r < t; r++) e[r] = null;
    return t;
  },
  getSource: function (e, t, r, n) {
    for (var o = '', i = 0; i < t; ++i) {
      var a = n ? HEAP32[(n + 4 * i) >> 2] : -1;
      o += UTF8ToString(HEAP32[(r + 4 * i) >> 2], a < 0 ? void 0 : a);
    }
    return o;
  },
  createContext: function (e, t) {
    return (e = e.getContext('webgl', t)) ? GL.registerContext(e, t) : 0;
  },
  registerContext: function (e, t) {
    var r = GL.getNewId(GL.contexts),
      n = { handle: r, attributes: t, version: t.majorVersion, GLctx: e };
    return (
      e.canvas && (e.canvas.GLctxObject = n),
      (GL.contexts[r] = n),
      (void 0 !== t.enableExtensionsByDefault &&
        !t.enableExtensionsByDefault) ||
        GL.initExtensions(n),
      r
    );
  },
  makeContextCurrent: function (e) {
    return (
      (GL.currentContext = GL.contexts[e]),
      (Module.ctx = GLctx = GL.currentContext && GL.currentContext.GLctx),
      !(e && !GLctx)
    );
  },
  getContext: function (e) {
    return GL.contexts[e];
  },
  deleteContext: function (e) {
    GL.currentContext === GL.contexts[e] && (GL.currentContext = null),
      'object' == typeof JSEvents &&
        JSEvents.removeAllHandlersOnTarget(GL.contexts[e].GLctx.canvas),
      GL.contexts[e] &&
        GL.contexts[e].GLctx.canvas &&
        (GL.contexts[e].GLctx.canvas.GLctxObject = void 0),
      (GL.contexts[e] = null);
  },
  initExtensions: function (e) {
    var t;
    (e = e || GL.currentContext).initExtensionsDone ||
      ((e.initExtensionsDone = !0),
      __webgl_enable_ANGLE_instanced_arrays((t = e.GLctx)),
      __webgl_enable_OES_vertex_array_object(t),
      __webgl_enable_WEBGL_draw_buffers(t),
      (t.disjointTimerQueryExt = t.getExtension('EXT_disjoint_timer_query')),
      __webgl_enable_WEBGL_multi_draw(t),
      (t.getSupportedExtensions() || []).forEach(function (e) {
        e.indexOf('lose_context') < 0 &&
          e.indexOf('debug') < 0 &&
          t.getExtension(e);
      }));
  },
  populateUniformTable: function (e) {
    for (
      var t = GL.programs[e],
        r = (GL.programInfos[e] = {
          uniforms: {},
          maxUniformLength: 0,
          maxAttributeLength: -1,
          maxUniformBlockNameLength: -1,
        }),
        n = r.uniforms,
        o = GLctx.getProgramParameter(t, 35718),
        i = 0;
      i < o;
      ++i
    ) {
      var a = GLctx.getActiveUniform(t, i),
        s = a.name;
      if (
        ((r.maxUniformLength = Math.max(r.maxUniformLength, s.length + 1)),
        ']' == s.slice(-1) && (s = s.slice(0, s.lastIndexOf('['))),
        (l = GLctx.getUniformLocation(t, s)))
      ) {
        var c = GL.getNewId(GL.uniforms);
        (n[s] = [a.size, c]), (GL.uniforms[c] = l);
        for (var u = 1; u < a.size; ++u) {
          var l = GLctx.getUniformLocation(t, s + '[' + u + ']'),
            c = GL.getNewId(GL.uniforms);
          GL.uniforms[c] = l;
        }
      }
    }
  },
};
function _eglCreateContext(e, t, r, n) {
  if (62e3 != e) return EGL.setErrorCode(12296), 0;
  for (var o = 1; ; ) {
    var i = HEAP32[n >> 2];
    if (12440 != i) {
      if (12344 == i) break;
      return EGL.setErrorCode(12292), 0;
    }
    (o = HEAP32[(n + 4) >> 2]), (n += 8);
  }
  return 2 != o
    ? (EGL.setErrorCode(12293), 0)
    : ((EGL.contextAttributes.majorVersion = o - 1),
      (EGL.contextAttributes.minorVersion = 0),
      (EGL.context = GL.createContext(Module.canvas, EGL.contextAttributes)),
      0 != EGL.context
        ? (EGL.setErrorCode(12288),
          GL.makeContextCurrent(EGL.context),
          (Module.useWebGL = !0),
          Browser.moduleContextCreatedCallbacks.forEach(function (e) {
            e();
          }),
          GL.makeContextCurrent(null),
          62004)
        : (EGL.setErrorCode(12297), 0));
}
function _eglCreateWindowSurface(e, t, r, n) {
  return 62e3 != e
    ? (EGL.setErrorCode(12296), 0)
    : 62002 != t
    ? (EGL.setErrorCode(12293), 0)
    : (EGL.setErrorCode(12288), 62006);
}
function _eglDestroyContext(e, t) {
  return 62e3 != e
    ? (EGL.setErrorCode(12296), 0)
    : 62004 != t
    ? (EGL.setErrorCode(12294), 0)
    : (GL.deleteContext(EGL.context),
      EGL.setErrorCode(12288),
      EGL.currentContext == t && (EGL.currentContext = 0),
      1);
}
function _eglDestroySurface(e, t) {
  return 62e3 != e
    ? (EGL.setErrorCode(12296), 0)
    : (62006 != t
        ? EGL.setErrorCode(12301)
        : (EGL.currentReadSurface == t && (EGL.currentReadSurface = 0),
          EGL.currentDrawSurface == t && (EGL.currentDrawSurface = 0),
          EGL.setErrorCode(12288)),
      1);
}
function _eglGetCurrentContext() {
  return EGL.currentContext;
}
function _eglGetCurrentDisplay() {
  return EGL.currentContext ? 62e3 : 0;
}
function _eglGetDisplay(e) {
  return EGL.setErrorCode(12288), 62e3;
}
function _eglInitialize(e, t, r) {
  return 62e3 == e
    ? (t && (HEAP32[t >> 2] = 1),
      r && (HEAP32[r >> 2] = 4),
      (EGL.defaultDisplayInitialized = !0),
      EGL.setErrorCode(12288),
      1)
    : (EGL.setErrorCode(12296), 0);
}
function _eglMakeCurrent(e, t, r, n) {
  return 62e3 != e
    ? (EGL.setErrorCode(12296), 0)
    : 0 != n && 62004 != n
    ? (EGL.setErrorCode(12294), 0)
    : (0 != r && 62006 != r) || (0 != t && 62006 != t)
    ? (EGL.setErrorCode(12301), 0)
    : (GL.makeContextCurrent(n ? EGL.context : null),
      (EGL.currentContext = n),
      (EGL.currentDrawSurface = t),
      (EGL.currentReadSurface = r),
      EGL.setErrorCode(12288),
      1);
}
function _eglTerminate(e) {
  return 62e3 != e
    ? (EGL.setErrorCode(12296), 0)
    : ((EGL.currentContext = 0),
      (EGL.currentReadSurface = 0),
      (EGL.currentDrawSurface = 0),
      (EGL.defaultDisplayInitialized = !1),
      EGL.setErrorCode(12288),
      1);
}
function _emscripten_asm_const_int(e, t, r) {
  return (r = readAsmConstArgs(t, r)), ASM_CONSTS[e].apply(null, r);
}
function _emscripten_async_call(e, t, r) {
  function n() {
    wasmTable.get(e)(t);
  }
  (noExitRuntime = !0),
    0 <= r
      ? Browser.safeSetTimeout(n, r)
      : Browser.safeRequestAnimationFrame(n);
}
function _emscripten_memcpy_big(e, t, r) {
  HEAPU8.copyWithin(e, t, t + r);
}
function _emscripten_get_heap_size() {
  return HEAPU8.length;
}
function emscripten_realloc_buffer(e) {
  try {
    return (
      wasmMemory.grow((e - buffer.byteLength + 65535) >>> 16),
      updateGlobalBufferAndViews(wasmMemory.buffer),
      1
    );
  } catch (e) {}
}
function _emscripten_resize_heap(e) {
  var t = _emscripten_get_heap_size(),
    r = 2147483648;
  if (r < e) return !1;
  for (var n = 1; n <= 4; n *= 2) {
    var o = t * (1 + 0.2 / n),
      o = Math.min(o, e + 100663296);
    if (emscripten_realloc_buffer(Math.min(r, alignUp(Math.max(e, o), 65536))))
      return !0;
  }
  return !1;
}
function _emscripten_thread_sleep(e) {
  for (var t = _emscripten_get_now(); _emscripten_get_now() - t < e; );
}
var ENV = {};
function getExecutableName() {
  return thisProgram || './this.program';
}
function getEnvStrings() {
  if (!getEnvStrings.strings) {
    var e = {
      USER: 'web_user',
      LOGNAME: 'web_user',
      PATH: '/',
      PWD: '/',
      HOME: '/home/web_user',
      LANG:
        (
          ('object' == typeof navigator &&
            navigator.languages &&
            navigator.languages[0]) ||
          'C'
        ).replace('-', '_') + '.UTF-8',
      _: getExecutableName(),
    };
    for (t in ENV) e[t] = ENV[t];
    var t,
      r = [];
    for (t in e) r.push(t + '=' + e[t]);
    getEnvStrings.strings = r;
  }
  return getEnvStrings.strings;
}
function _environ_get(r, n) {
  try {
    var o = 0;
    return (
      getEnvStrings().forEach(function (e, t) {
        writeAsciiToMemory(e, (HEAP32[(r + 4 * t) >> 2] = n + o)),
          (o += e.length + 1);
      }),
      0
    );
  } catch (e) {
    return (void 0 !== FS && e instanceof FS.ErrnoError) || abort(e), e.errno;
  }
}
function _environ_sizes_get(e, t) {
  try {
    var r = getEnvStrings();
    HEAP32[e >> 2] = r.length;
    var n = 0;
    return (
      r.forEach(function (e) {
        n += e.length + 1;
      }),
      (HEAP32[t >> 2] = n),
      0
    );
  } catch (e) {
    return (void 0 !== FS && e instanceof FS.ErrnoError) || abort(e), e.errno;
  }
}
function _fd_close(e) {
  try {
    var t = SYSCALLS.getStreamFromFD(e);
    return FS.close(t), 0;
  } catch (e) {
    return (void 0 !== FS && e instanceof FS.ErrnoError) || abort(e), e.errno;
  }
}
function _fd_read(e, t, r, n) {
  try {
    var o = SYSCALLS.getStreamFromFD(e),
      i = SYSCALLS.doReadv(o, t, r);
    return (HEAP32[n >> 2] = i), 0;
  } catch (e) {
    return (void 0 !== FS && e instanceof FS.ErrnoError) || abort(e), e.errno;
  }
}
function _fd_seek(e, t, r, n, o) {
  try {
    var i = SYSCALLS.getStreamFromFD(e),
      a = 4294967296 * r + (t >>> 0),
      s = 9007199254740992;
    return a <= -s || s <= a
      ? -61
      : (FS.llseek(i, a, n),
        (tempI64 = [
          i.position >>> 0,
          ((tempDouble = i.position),
          1 <= +Math.abs(tempDouble)
            ? 0 < tempDouble
              ? (0 |
                  Math.min(
                    +Math.floor(tempDouble / 4294967296),
                    4294967295
                  )) >>>
                0
              : ~~+Math.ceil(
                  (tempDouble - (~~tempDouble >>> 0)) / 4294967296
                ) >>> 0
            : 0),
        ]),
        (HEAP32[o >> 2] = tempI64[0]),
        (HEAP32[(o + 4) >> 2] = tempI64[1]),
        i.getdents && 0 == a && 0 === n && (i.getdents = null),
        0);
  } catch (e) {
    return (void 0 !== FS && e instanceof FS.ErrnoError) || abort(e), e.errno;
  }
}
function _fd_write(e, t, r, n) {
  try {
    var o = SYSCALLS.getStreamFromFD(e),
      i = SYSCALLS.doWritev(o, t, r);
    return (HEAP32[n >> 2] = i), 0;
  } catch (e) {
    return (void 0 !== FS && e instanceof FS.ErrnoError) || abort(e), e.errno;
  }
}
function _getTempRet0() {
  return 0 | getTempRet0();
}
function _getentropy(e, t) {
  _getentropy.randomDevice || (_getentropy.randomDevice = getRandomDevice());
  for (var r = 0; r < t; r++) HEAP8[(e + r) >> 0] = _getentropy.randomDevice();
  return 0;
}
function _glActiveTexture(e) {
  GLctx.activeTexture(e);
}
function _glAttachShader(e, t) {
  GLctx.attachShader(GL.programs[e], GL.shaders[t]);
}
function _glBindBuffer(e, t) {
  GLctx.bindBuffer(e, GL.buffers[t]);
}
function _glBindFramebuffer(e, t) {
  GLctx.bindFramebuffer(e, GL.framebuffers[t]);
}
function _glBindTexture(e, t) {
  GLctx.bindTexture(e, GL.textures[t]);
}
function _glBufferData(e, t, r, n) {
  GLctx.bufferData(e, r ? HEAPU8.subarray(r, r + t) : t, n);
}
function _glCheckFramebufferStatus(e) {
  return GLctx.checkFramebufferStatus(e);
}
function _glCompileShader(e) {
  GLctx.compileShader(GL.shaders[e]);
}
function _glCreateProgram() {
  var e = GL.getNewId(GL.programs),
    t = GLctx.createProgram();
  return (t.name = e), (GL.programs[e] = t), e;
}
function _glCreateShader(e) {
  var t = GL.getNewId(GL.shaders);
  return (GL.shaders[t] = GLctx.createShader(e)), t;
}
function _glDeleteBuffers(e, t) {
  for (var r = 0; r < e; r++) {
    var n = HEAP32[(t + 4 * r) >> 2],
      o = GL.buffers[n];
    o && (GLctx.deleteBuffer(o), (o.name = 0), (GL.buffers[n] = null));
  }
}
function _glDeleteFramebuffers(e, t) {
  for (var r = 0; r < e; ++r) {
    var n = HEAP32[(t + 4 * r) >> 2],
      o = GL.framebuffers[n];
    o &&
      (GLctx.deleteFramebuffer(o), (o.name = 0), (GL.framebuffers[n] = null));
  }
}
function _glDeleteProgram(e) {
  var t;
  e &&
    ((t = GL.programs[e])
      ? (GLctx.deleteProgram(t),
        (t.name = 0),
        (GL.programs[e] = null),
        (GL.programInfos[e] = null))
      : GL.recordError(1281));
}
function _glDeleteShader(e) {
  var t;
  e &&
    ((t = GL.shaders[e])
      ? (GLctx.deleteShader(t), (GL.shaders[e] = null))
      : GL.recordError(1281));
}
function _glDeleteTextures(e, t) {
  for (var r = 0; r < e; r++) {
    var n = HEAP32[(t + 4 * r) >> 2],
      o = GL.textures[n];
    o && (GLctx.deleteTexture(o), (o.name = 0), (GL.textures[n] = null));
  }
}
function _glDrawArrays(e, t, r) {
  GLctx.drawArrays(e, t, r);
}
function _glEnableVertexAttribArray(e) {
  GLctx.enableVertexAttribArray(e);
}
function _glFramebufferTexture2D(e, t, r, n, o) {
  GLctx.framebufferTexture2D(e, t, r, GL.textures[n], o);
}
function __glGenObject(e, t, r, n) {
  for (var o = 0; o < e; o++) {
    var i = GLctx[r](),
      a = i && GL.getNewId(n);
    i ? (n[(i.name = a)] = i) : GL.recordError(1282),
      (HEAP32[(t + 4 * o) >> 2] = a);
  }
}
function _glGenBuffers(e, t) {
  __glGenObject(e, t, 'createBuffer', GL.buffers);
}
function _glGenFramebuffers(e, t) {
  __glGenObject(e, t, 'createFramebuffer', GL.framebuffers);
}
function _glGenTextures(e, t) {
  __glGenObject(e, t, 'createTexture', GL.textures);
}
function _glGetError() {
  var e = GLctx.getError() || GL.lastError;
  return (GL.lastError = 0), e;
}
function writeI53ToI64(e, t) {
  (HEAPU32[e >> 2] = t),
    (HEAPU32[(e + 4) >> 2] = (t - HEAPU32[e >> 2]) / 4294967296);
}
function emscriptenWebGLGet(t, e, r) {
  if (e) {
    var n = void 0;
    switch (t) {
      case 36346:
        n = 1;
        break;
      case 36344:
        return void (0 != r && 1 != r && GL.recordError(1280));
      case 36345:
        n = 0;
        break;
      case 34466:
        var o = GLctx.getParameter(34467),
          n = o ? o.length : 0;
    }
    if (void 0 === n) {
      var i = GLctx.getParameter(t);
      switch (typeof i) {
        case 'number':
          n = i;
          break;
        case 'boolean':
          n = i ? 1 : 0;
          break;
        case 'string':
          return void GL.recordError(1280);
        case 'object':
          if (null === i)
            switch (t) {
              case 34964:
              case 35725:
              case 34965:
              case 36006:
              case 36007:
              case 32873:
              case 34229:
              case 34068:
                n = 0;
                break;
              default:
                return void GL.recordError(1280);
            }
          else {
            if (
              i instanceof Float32Array ||
              i instanceof Uint32Array ||
              i instanceof Int32Array ||
              i instanceof Array
            ) {
              for (var a = 0; a < i.length; ++a)
                switch (r) {
                  case 0:
                    HEAP32[(e + 4 * a) >> 2] = i[a];
                    break;
                  case 2:
                    HEAPF32[(e + 4 * a) >> 2] = i[a];
                    break;
                  case 4:
                    HEAP8[(e + a) >> 0] = i[a] ? 1 : 0;
                }
              return;
            }
            try {
              n = 0 | i.name;
            } catch (e) {
              return (
                GL.recordError(1280),
                void err(
                  'GL_INVALID_ENUM in glGet' +
                    r +
                    'v: Unknown object returned from WebGL getParameter(' +
                    t +
                    ')! (error: ' +
                    e +
                    ')'
                )
              );
            }
          }
          break;
        default:
          return (
            GL.recordError(1280),
            void err(
              'GL_INVALID_ENUM in glGet' +
                r +
                'v: Native code calling glGet' +
                r +
                'v(' +
                t +
                ') and it returns ' +
                i +
                ' of type ' +
                typeof i +
                '!'
            )
          );
      }
    }
    switch (r) {
      case 1:
        writeI53ToI64(e, n);
        break;
      case 0:
        HEAP32[e >> 2] = n;
        break;
      case 2:
        HEAPF32[e >> 2] = n;
        break;
      case 4:
        HEAP8[e >> 0] = n ? 1 : 0;
    }
  } else GL.recordError(1281);
}
function _glGetIntegerv(e, t) {
  emscriptenWebGLGet(e, t, 0);
}
function _glGetProgramInfoLog(e, t, r, n) {
  null === (e = GLctx.getProgramInfoLog(GL.programs[e])) &&
    (e = '(unknown error)'),
    (t = 0 < t && n ? stringToUTF8(e, n, t) : 0),
    r && (HEAP32[r >> 2] = t);
}
function _glGetProgramiv(e, t, r) {
  if (r)
    if (e >= GL.counter) GL.recordError(1281);
    else {
      var n = GL.programInfos[e];
      if (n)
        if (35716 == t) {
          var o = GLctx.getProgramInfoLog(GL.programs[e]);
          HEAP32[r >> 2] = (o = null === o ? '(unknown error)' : o).length + 1;
        } else if (35719 == t) HEAP32[r >> 2] = n.maxUniformLength;
        else if (35722 == t) {
          if (-1 == n.maxAttributeLength) {
            e = GL.programs[e];
            for (
              var i = GLctx.getProgramParameter(e, 35721),
                a = (n.maxAttributeLength = 0);
              a < i;
              ++a
            ) {
              var s = GLctx.getActiveAttrib(e, a);
              n.maxAttributeLength = Math.max(
                n.maxAttributeLength,
                s.name.length + 1
              );
            }
          }
          HEAP32[r >> 2] = n.maxAttributeLength;
        } else if (35381 == t) {
          if (-1 == n.maxUniformBlockNameLength) {
            e = GL.programs[e];
            for (
              var c = GLctx.getProgramParameter(e, 35382),
                a = (n.maxUniformBlockNameLength = 0);
              a < c;
              ++a
            ) {
              var u = GLctx.getActiveUniformBlockName(e, a);
              n.maxUniformBlockNameLength = Math.max(
                n.maxUniformBlockNameLength,
                u.length + 1
              );
            }
          }
          HEAP32[r >> 2] = n.maxUniformBlockNameLength;
        } else HEAP32[r >> 2] = GLctx.getProgramParameter(GL.programs[e], t);
      else GL.recordError(1282);
    }
  else GL.recordError(1281);
}
function _glGetShaderInfoLog(e, t, r, n) {
  null === (e = GLctx.getShaderInfoLog(GL.shaders[e])) &&
    (e = '(unknown error)'),
    (t = 0 < t && n ? stringToUTF8(e, n, t) : 0),
    r && (HEAP32[r >> 2] = t);
}
function _glGetShaderPrecisionFormat(e, t, r, n) {
  (t = GLctx.getShaderPrecisionFormat(e, t)),
    (HEAP32[r >> 2] = t.rangeMin),
    (HEAP32[(r + 4) >> 2] = t.rangeMax),
    (HEAP32[n >> 2] = t.precision);
}
function _glGetShaderiv(e, t, r) {
  var n;
  r
    ? 35716 == t
      ? ((n = (n =
          null === (n = GLctx.getShaderInfoLog(GL.shaders[e]))
            ? '(unknown error)'
            : n)
          ? n.length + 1
          : 0),
        (HEAP32[r >> 2] = n))
      : 35720 == t
      ? ((n = (n = GLctx.getShaderSource(GL.shaders[e])) ? n.length + 1 : 0),
        (HEAP32[r >> 2] = n))
      : (HEAP32[r >> 2] = GLctx.getShaderParameter(GL.shaders[e], t))
    : GL.recordError(1281);
}
function jstoi_q(e) {
  return parseInt(e);
}
function _glGetUniformLocation(e, t) {
  var r,
    n = 0;
  return (
    ']' == (t = UTF8ToString(t))[t.length - 1] &&
      ((r = t.lastIndexOf('[')),
      (n = ']' != t[r + 1] ? jstoi_q(t.slice(r + 1)) : 0),
      (t = t.slice(0, r))),
    (t = GL.programInfos[e] && GL.programInfos[e].uniforms[t]) &&
    0 <= n &&
    n < t[0]
      ? t[1] + n
      : -1
  );
}
function _glLinkProgram(e) {
  GLctx.linkProgram(GL.programs[e]), GL.populateUniformTable(e);
}
function _glPixelStorei(e, t) {
  3317 == e && (GL.unpackAlignment = t), GLctx.pixelStorei(e, t);
}
function computeUnpackAlignedImageSize(e, t, r, n) {
  return t * ((e * r + n - 1) & -n);
}
function __colorChannelsInGlTextureFormat(e) {
  return { 5: 3, 6: 4, 8: 2, 29502: 3, 29504: 4 }[e - 6402] || 1;
}
function heapObjectForWebGLType(e) {
  return 1 == (e -= 5120)
    ? HEAPU8
    : 4 == e
    ? HEAP32
    : 6 == e
    ? HEAPF32
    : 5 == e || 28922 == e
    ? HEAPU32
    : HEAPU16;
}
function heapAccessShiftForWebGLHeap(e) {
  return 31 - Math.clz32(e.BYTES_PER_ELEMENT);
}
function emscriptenWebGLGetTexPixelData(e, t, r, n, o, i) {
  var a = heapObjectForWebGLType(e),
    s = heapAccessShiftForWebGLHeap(a),
    e = 1 << s,
    e = computeUnpackAlignedImageSize(
      r,
      n,
      __colorChannelsInGlTextureFormat(t) * e,
      GL.unpackAlignment
    );
  return a.subarray(o >> s, (o + e) >> s);
}
function _glReadPixels(e, t, r, n, o, i, a) {
  (a = emscriptenWebGLGetTexPixelData(i, o, r, n, a, o))
    ? GLctx.readPixels(e, t, r, n, o, i, a)
    : GL.recordError(1280);
}
function _glShaderSource(e, t, r, n) {
  (n = GL.getSource(e, t, r, n)), GLctx.shaderSource(GL.shaders[e], n);
}
function _glTexImage2D(e, t, r, n, o, i, a, s, c) {
  GLctx.texImage2D(
    e,
    t,
    r,
    n,
    o,
    i,
    a,
    s,
    c ? emscriptenWebGLGetTexPixelData(s, a, n, o, c, r) : null
  );
}
function _glTexParameteri(e, t, r) {
  GLctx.texParameteri(e, t, r);
}
function _glUniform1f(e, t) {
  GLctx.uniform1f(GL.uniforms[e], t);
}
function _glUniform1i(e, t) {
  GLctx.uniform1i(GL.uniforms[e], t);
}
function _glUniform2f(e, t, r) {
  GLctx.uniform2f(GL.uniforms[e], t, r);
}
function _glUseProgram(e) {
  GLctx.useProgram(GL.programs[e]);
}
function _glVertexAttribPointer(e, t, r, n, o, i) {
  GLctx.vertexAttribPointer(e, t, r, !!n, o, i);
}
function _glViewport(e, t, r, n) {
  GLctx.viewport(e, t, r, n);
}
function _gmtime_r(e, t) {
  var r = new Date(1e3 * HEAP32[e >> 2]);
  return (
    (HEAP32[t >> 2] = r.getUTCSeconds()),
    (HEAP32[(t + 4) >> 2] = r.getUTCMinutes()),
    (HEAP32[(t + 8) >> 2] = r.getUTCHours()),
    (HEAP32[(t + 12) >> 2] = r.getUTCDate()),
    (HEAP32[(t + 16) >> 2] = r.getUTCMonth()),
    (HEAP32[(t + 20) >> 2] = r.getUTCFullYear() - 1900),
    (HEAP32[(t + 24) >> 2] = r.getUTCDay()),
    (HEAP32[(t + 36) >> 2] = 0),
    (HEAP32[(t + 32) >> 2] = 0),
    (e = Date.UTC(r.getUTCFullYear(), 0, 1, 0, 0, 0, 0)),
    (e = ((r.getTime() - e) / 864e5) | 0),
    (HEAP32[(t + 28) >> 2] = e),
    _gmtime_r.GMTString || (_gmtime_r.GMTString = allocateUTF8('GMT')),
    (HEAP32[(t + 40) >> 2] = _gmtime_r.GMTString),
    t
  );
}
function _llvm_eh_typeid_for(e) {
  return e;
}
function _mktime(e) {
  _tzset();
  var t = new Date(
      HEAP32[(e + 20) >> 2] + 1900,
      HEAP32[(e + 16) >> 2],
      HEAP32[(e + 12) >> 2],
      HEAP32[(e + 8) >> 2],
      HEAP32[(e + 4) >> 2],
      HEAP32[e >> 2],
      0
    ),
    r = HEAP32[(e + 32) >> 2],
    n = t.getTimezoneOffset(),
    o = new Date(t.getFullYear(), 0, 1),
    i = new Date(t.getFullYear(), 6, 1).getTimezoneOffset(),
    a = o.getTimezoneOffset(),
    s = Math.min(a, i);
  return (
    r < 0
      ? (HEAP32[(e + 32) >> 2] = Number(i != a && s == n))
      : 0 < r != (s == n) &&
        ((i = Math.max(a, i)),
        (i = 0 < r ? s : i),
        t.setTime(t.getTime() + 6e4 * (i - n))),
    (HEAP32[(e + 24) >> 2] = t.getDay()),
    (o = ((t.getTime() - o.getTime()) / 864e5) | 0),
    (HEAP32[(e + 28) >> 2] = o),
    (HEAP32[e >> 2] = t.getSeconds()),
    (HEAP32[(e + 4) >> 2] = t.getMinutes()),
    (HEAP32[(e + 8) >> 2] = t.getHours()),
    (HEAP32[(e + 12) >> 2] = t.getDate()),
    (HEAP32[(e + 16) >> 2] = t.getMonth()),
    (t.getTime() / 1e3) | 0
  );
}
function _setTempRet0(e) {
  setTempRet0(0 | e);
}
function __isLeapYear(e) {
  return e % 4 == 0 && (e % 100 != 0 || e % 400 == 0);
}
function __arraySum(e, t) {
  for (var r = 0, n = 0; n <= t; r += e[n++]);
  return r;
}
var __MONTH_DAYS_LEAP = [31, 29, 31, 30, 31, 30, 31, 31, 30, 31, 30, 31],
  __MONTH_DAYS_REGULAR = [31, 28, 31, 30, 31, 30, 31, 31, 30, 31, 30, 31];
function __addDays(e, t) {
  for (var r = new Date(e.getTime()); 0 < t; ) {
    var n = __isLeapYear(r.getFullYear()),
      o = r.getMonth();
    if (
      !(
        t >
        (n = (n ? __MONTH_DAYS_LEAP : __MONTH_DAYS_REGULAR)[o]) - r.getDate()
      )
    )
      return r.setDate(r.getDate() + t), r;
    (t -= n - r.getDate() + 1),
      r.setDate(1),
      o < 11
        ? r.setMonth(o + 1)
        : (r.setMonth(0), r.setFullYear(r.getFullYear() + 1));
  }
  return r;
}
function _strftime(e, t, r, n) {
  var o = HEAP32[(n + 40) >> 2],
    i = {
      tm_sec: HEAP32[n >> 2],
      tm_min: HEAP32[(n + 4) >> 2],
      tm_hour: HEAP32[(n + 8) >> 2],
      tm_mday: HEAP32[(n + 12) >> 2],
      tm_mon: HEAP32[(n + 16) >> 2],
      tm_year: HEAP32[(n + 20) >> 2],
      tm_wday: HEAP32[(n + 24) >> 2],
      tm_yday: HEAP32[(n + 28) >> 2],
      tm_isdst: HEAP32[(n + 32) >> 2],
      tm_gmtoff: HEAP32[(n + 36) >> 2],
      tm_zone: o ? UTF8ToString(o) : '',
    },
    a = UTF8ToString(r),
    s = {
      '%c': '%a %b %d %H:%M:%S %Y',
      '%D': '%m/%d/%y',
      '%F': '%Y-%m-%d',
      '%h': '%b',
      '%r': '%I:%M:%S %p',
      '%R': '%H:%M',
      '%T': '%H:%M:%S',
      '%x': '%m/%d/%y',
      '%X': '%H:%M:%S',
      '%Ec': '%c',
      '%EC': '%C',
      '%Ex': '%m/%d/%y',
      '%EX': '%H:%M:%S',
      '%Ey': '%y',
      '%EY': '%Y',
      '%Od': '%d',
      '%Oe': '%e',
      '%OH': '%H',
      '%OI': '%I',
      '%Om': '%m',
      '%OM': '%M',
      '%OS': '%S',
      '%Ou': '%u',
      '%OU': '%U',
      '%OV': '%V',
      '%Ow': '%w',
      '%OW': '%W',
      '%Oy': '%y',
    };
  for (p in s) a = a.replace(new RegExp(p, 'g'), s[p]);
  var c = [
      'Sunday',
      'Monday',
      'Tuesday',
      'Wednesday',
      'Thursday',
      'Friday',
      'Saturday',
    ],
    u = [
      'January',
      'February',
      'March',
      'April',
      'May',
      'June',
      'July',
      'August',
      'September',
      'October',
      'November',
      'December',
    ];
  function l(e, t, r) {
    for (var n = 'number' == typeof e ? e.toString() : e || ''; n.length < t; )
      n = r[0] + n;
    return n;
  }
  function d(e, t) {
    return l(e, t, '0');
  }
  function f(e, t) {
    function r(e) {
      return e < 0 ? -1 : 0 < e ? 1 : 0;
    }
    var n;
    return 0 === (n = r(e.getFullYear() - t.getFullYear())) &&
      0 === (n = r(e.getMonth() - t.getMonth()))
      ? r(e.getDate() - t.getDate())
      : n;
  }
  function m(e) {
    switch (e.getDay()) {
      case 0:
        return new Date(e.getFullYear() - 1, 11, 29);
      case 1:
        return e;
      case 2:
        return new Date(e.getFullYear(), 0, 3);
      case 3:
        return new Date(e.getFullYear(), 0, 2);
      case 4:
        return new Date(e.getFullYear(), 0, 1);
      case 5:
        return new Date(e.getFullYear() - 1, 11, 31);
      case 6:
        return new Date(e.getFullYear() - 1, 11, 30);
    }
  }
  function _(e) {
    var t = __addDays(new Date(e.tm_year + 1900, 0, 1), e.tm_yday),
      r = new Date(t.getFullYear(), 0, 4),
      e = new Date(t.getFullYear() + 1, 0, 4),
      r = m(r),
      e = m(e);
    return f(r, t) <= 0
      ? f(e, t) <= 0
        ? t.getFullYear() + 1
        : t.getFullYear()
      : t.getFullYear() - 1;
  }
  var p,
    h = {
      '%a': function (e) {
        return c[e.tm_wday].substring(0, 3);
      },
      '%A': function (e) {
        return c[e.tm_wday];
      },
      '%b': function (e) {
        return u[e.tm_mon].substring(0, 3);
      },
      '%B': function (e) {
        return u[e.tm_mon];
      },
      '%C': function (e) {
        return d(((e.tm_year + 1900) / 100) | 0, 2);
      },
      '%d': function (e) {
        return d(e.tm_mday, 2);
      },
      '%e': function (e) {
        return l(e.tm_mday, 2, ' ');
      },
      '%g': function (e) {
        return _(e).toString().substring(2);
      },
      '%G': _,
      '%H': function (e) {
        return d(e.tm_hour, 2);
      },
      '%I': function (e) {
        return 0 == (e = e.tm_hour) ? (e = 12) : 12 < e && (e -= 12), d(e, 2);
      },
      '%j': function (e) {
        return d(
          e.tm_mday +
            __arraySum(
              __isLeapYear(e.tm_year + 1900)
                ? __MONTH_DAYS_LEAP
                : __MONTH_DAYS_REGULAR,
              e.tm_mon - 1
            ),
          3
        );
      },
      '%m': function (e) {
        return d(e.tm_mon + 1, 2);
      },
      '%M': function (e) {
        return d(e.tm_min, 2);
      },
      '%n': function () {
        return '\n';
      },
      '%p': function (e) {
        return 0 <= e.tm_hour && e.tm_hour < 12 ? 'AM' : 'PM';
      },
      '%S': function (e) {
        return d(e.tm_sec, 2);
      },
      '%t': function () {
        return '\t';
      },
      '%u': function (e) {
        return e.tm_wday || 7;
      },
      '%U': function (e) {
        var t = new Date(e.tm_year + 1900, 0, 1),
          r = 0 === t.getDay() ? t : __addDays(t, 7 - t.getDay()),
          n = new Date(e.tm_year + 1900, e.tm_mon, e.tm_mday);
        return f(r, n) < 0
          ? ((e =
              __arraySum(
                __isLeapYear(n.getFullYear())
                  ? __MONTH_DAYS_LEAP
                  : __MONTH_DAYS_REGULAR,
                n.getMonth() - 1
              ) - 31),
            (n = 31 - r.getDate() + e + n.getDate()),
            d(Math.ceil(n / 7), 2))
          : 0 === f(r, t)
          ? '01'
          : '00';
      },
      '%V': function (e) {
        var t = new Date(e.tm_year + 1900, 0, 4),
          r = new Date(e.tm_year + 1901, 0, 4),
          n = m(t),
          t = m(r);
        return f(
          (r = __addDays(new Date(e.tm_year + 1900, 0, 1), e.tm_yday)),
          n
        ) < 0
          ? '53'
          : f(t, r) <= 0
          ? '01'
          : ((n =
              n.getFullYear() < e.tm_year + 1900
                ? e.tm_yday + 32 - n.getDate()
                : e.tm_yday + 1 - n.getDate()),
            d(Math.ceil(n / 7), 2));
      },
      '%w': function (e) {
        return e.tm_wday;
      },
      '%W': function (e) {
        var t = new Date(e.tm_year, 0, 1),
          r =
            1 === t.getDay()
              ? t
              : __addDays(t, 0 === t.getDay() ? 1 : 7 - t.getDay() + 1),
          n = new Date(e.tm_year + 1900, e.tm_mon, e.tm_mday);
        return f(r, n) < 0
          ? ((e =
              __arraySum(
                __isLeapYear(n.getFullYear())
                  ? __MONTH_DAYS_LEAP
                  : __MONTH_DAYS_REGULAR,
                n.getMonth() - 1
              ) - 31),
            (n = 31 - r.getDate() + e + n.getDate()),
            d(Math.ceil(n / 7), 2))
          : 0 === f(r, t)
          ? '01'
          : '00';
      },
      '%y': function (e) {
        return (e.tm_year + 1900).toString().substring(2);
      },
      '%Y': function (e) {
        return e.tm_year + 1900;
      },
      '%z': function (e) {
        var e = 0 <= (t = e.tm_gmtoff),
          t = ((t = Math.abs(t) / 60) / 60) * 100 + (t % 60);
        return (e ? '+' : '-') + String('0000' + t).slice(-4);
      },
      '%Z': function (e) {
        return e.tm_zone;
      },
      '%%': function () {
        return '%';
      },
    };
  for (p in h)
    0 <= a.indexOf(p) && (a = a.replace(new RegExp(p, 'g'), h[p](i)));
  return (r = intArrayFromString(a, !1)).length > t
    ? 0
    : (writeArrayToMemory(r, e), r.length - 1);
}
function _strftime_l(e, t, r, n) {
  return _strftime(e, t, r, n);
}
function _sysconf(e) {
  switch (e) {
    case 30:
      return 16384;
    case 85:
      return 131072;
    case 132:
    case 133:
    case 12:
    case 137:
    case 138:
    case 15:
    case 235:
    case 16:
    case 17:
    case 18:
    case 19:
    case 20:
    case 149:
    case 13:
    case 10:
    case 236:
    case 153:
    case 9:
    case 21:
    case 22:
    case 159:
    case 154:
    case 14:
    case 77:
    case 78:
    case 139:
    case 82:
    case 68:
    case 67:
    case 164:
    case 11:
    case 29:
    case 47:
    case 48:
    case 95:
    case 52:
    case 51:
    case 46:
      return 200809;
    case 27:
    case 246:
    case 127:
    case 128:
    case 23:
    case 24:
    case 160:
    case 161:
    case 181:
    case 182:
    case 242:
    case 183:
    case 184:
    case 243:
    case 244:
    case 245:
    case 165:
    case 178:
    case 179:
    case 49:
    case 50:
    case 168:
    case 169:
    case 175:
    case 170:
    case 171:
    case 172:
    case 97:
    case 76:
    case 32:
    case 173:
    case 35:
    case 80:
    case 81:
    case 79:
      return -1;
    case 176:
    case 177:
    case 7:
    case 155:
    case 8:
    case 157:
    case 125:
    case 126:
    case 92:
    case 93:
    case 129:
    case 130:
    case 131:
    case 94:
    case 91:
      return 1;
    case 74:
    case 60:
    case 69:
    case 70:
    case 4:
      return 1024;
    case 31:
    case 42:
    case 72:
      return 32;
    case 87:
    case 26:
    case 33:
      return 2147483647;
    case 34:
    case 1:
      return 47839;
    case 38:
    case 36:
      return 99;
    case 43:
    case 37:
      return 2048;
    case 0:
      return 2097152;
    case 3:
      return 65536;
    case 28:
      return 32768;
    case 44:
      return 32767;
    case 75:
      return 16384;
    case 39:
      return 1e3;
    case 89:
      return 700;
    case 71:
      return 256;
    case 40:
      return 255;
    case 2:
      return 100;
    case 180:
      return 64;
    case 25:
      return 20;
    case 5:
      return 16;
    case 6:
      return 6;
    case 73:
      return 4;
    case 84:
      return (
        ('object' == typeof navigator && navigator.hardwareConcurrency) || 1
      );
  }
  return setErrNo(28), -1;
}
function _time(e) {
  var t = (Date.now() / 1e3) | 0;
  return e && (HEAP32[e >> 2] = t), t;
}
function _timegm(e) {
  _tzset();
  var t = Date.UTC(
      HEAP32[(e + 20) >> 2] + 1900,
      HEAP32[(e + 16) >> 2],
      HEAP32[(e + 12) >> 2],
      HEAP32[(e + 8) >> 2],
      HEAP32[(e + 4) >> 2],
      HEAP32[e >> 2],
      0
    ),
    r = new Date(t);
  return (
    (HEAP32[(e + 24) >> 2] = r.getUTCDay()),
    (t = Date.UTC(r.getUTCFullYear(), 0, 1, 0, 0, 0, 0)),
    (t = ((r.getTime() - t) / 864e5) | 0),
    (HEAP32[(e + 28) >> 2] = t),
    (r.getTime() / 1e3) | 0
  );
}
var readAsmConstArgsArray = [];
function readAsmConstArgs(e, t) {
  for (readAsmConstArgsArray.length = 0, t >>= 2; (r = HEAPU8[e++]); ) {
    var r = r < 105;
    r && 1 & t && t++,
      readAsmConstArgsArray.push(r ? HEAPF64[t++ >> 1] : HEAP32[t]),
      ++t;
  }
  return readAsmConstArgsArray;
}
var GLctx,
  FSNode = function (e, t, r, n) {
    (this.parent = e = e || this),
      (this.mount = e.mount),
      (this.mounted = null),
      (this.id = FS.nextInode++),
      (this.name = t),
      (this.mode = r),
      (this.node_ops = {}),
      (this.stream_ops = {}),
      (this.rdev = n);
  },
  readMode = 365,
  writeMode = 146;
function intArrayFromString(e, t, r) {
  return (
    (r = 0 < r ? r : lengthBytesUTF8(e) + 1),
    (e = stringToUTF8Array(e, (r = new Array(r)), 0, r.length)),
    t && (r.length = e),
    r
  );
}
Object.defineProperties(FSNode.prototype, {
  read: {
    get: function () {
      return (this.mode & readMode) === readMode;
    },
    set: function (e) {
      e ? (this.mode |= readMode) : (this.mode &= ~readMode);
    },
  },
  write: {
    get: function () {
      return (this.mode & writeMode) === writeMode;
    },
    set: function (e) {
      e ? (this.mode |= writeMode) : (this.mode &= ~writeMode);
    },
  },
  isFolder: {
    get: function () {
      return FS.isDir(this.mode);
    },
  },
  isDevice: {
    get: function () {
      return FS.isChrdev(this.mode);
    },
  },
}),
  (FS.FSNode = FSNode),
  FS.staticInit(),
  (Module.requestFullscreen = function (e, t) {
    Browser.requestFullscreen(e, t);
  }),
  (Module.requestAnimationFrame = function (e) {
    Browser.requestAnimationFrame(e);
  }),
  (Module.setCanvasSize = function (e, t, r) {
    Browser.setCanvasSize(e, t, r);
  }),
  (Module.pauseMainLoop = function () {
    Browser.mainLoop.pause();
  }),
  (Module.resumeMainLoop = function () {
    Browser.mainLoop.resume();
  }),
  (Module.getUserMedia = function () {
    Browser.getUserMedia();
  }),
  (Module.createContext = function (e, t, r, n) {
    return Browser.createContext(e, t, r, n);
  });
var calledRun,
  asmLibraryArg = {
    n: ___cxa_allocate_exception,
    r: ___cxa_begin_catch,
    yb: ___cxa_decrement_exception_refcount,
    v: ___cxa_end_catch,
    b: ___cxa_find_matching_catch_2,
    k: ___cxa_find_matching_catch_3,
    x: ___cxa_find_matching_catch_4,
    o: ___cxa_free_exception,
    xb: ___cxa_increment_exception_refcount,
    ma: ___cxa_rethrow,
    wb: ___cxa_rethrow_primary_exception,
    s: ___cxa_throw,
    zb: ___cxa_uncaught_exceptions,
    Hb: ___localtime_r,
    c: ___resumeException,
    pa: ___sys_fcntl64,
    Mb: ___sys_getdents64,
    Jb: ___sys_ioctl,
    qa: ___sys_open,
    ub: ___sys_rename,
    Lb: ___sys_rmdir,
    Ob: ___sys_stat64,
    Nb: ___sys_statfs64,
    Kb: ___sys_unlink,
    g: _abort,
    vb: _clock_gettime,
    _a: _eglBindAPI,
    Za: _eglChooseConfig,
    Xa: _eglCreateContext,
    Ya: _eglCreateWindowSurface,
    Va: _eglDestroyContext,
    Wa: _eglDestroySurface,
    Y: _eglGetCurrentContext,
    Ua: _eglGetCurrentDisplay,
    ab: _eglGetDisplay,
    $a: _eglInitialize,
    P: _eglMakeCurrent,
    X: _eglTerminate,
    D: _emscripten_asm_const_int,
    ra: _emscripten_async_call,
    sb: _emscripten_memcpy_big,
    tb: _emscripten_resize_heap,
    Bb: _emscripten_thread_sleep,
    Fb: _environ_get,
    Gb: _environ_sizes_get,
    U: _fd_close,
    Ib: _fd_read,
    kb: _fd_seek,
    oa: _fd_write,
    a: _getTempRet0,
    Ab: _getentropy,
    ka: _glActiveTexture,
    fa: _glAttachShader,
    ea: _glBindBuffer,
    V: _glBindFramebuffer,
    K: _glBindTexture,
    Ca: _glBufferData,
    Ra: _glCheckFramebufferStatus,
    Ma: _glCompileShader,
    Ja: _glCreateProgram,
    Oa: _glCreateShader,
    Ba: _glDeleteBuffers,
    W: _glDeleteFramebuffers,
    ga: _glDeleteProgram,
    J: _glDeleteShader,
    O: _glDeleteTextures,
    ya: _glDrawArrays,
    za: _glEnableVertexAttribArray,
    Sa: _glFramebufferTexture2D,
    Da: _glGenBuffers,
    Ta: _glGenFramebuffers,
    ja: _glGenTextures,
    la: _glGetError,
    wa: _glGetIntegerv,
    Ga: _glGetProgramInfoLog,
    Ha: _glGetProgramiv,
    Ka: _glGetShaderInfoLog,
    G: _glGetShaderPrecisionFormat,
    La: _glGetShaderiv,
    E: _glGetUniformLocation,
    Ia: _glLinkProgram,
    ha: _glPixelStorei,
    Qa: _glReadPixels,
    Na: _glShaderSource,
    ia: _glTexImage2D,
    B: _glTexParameteri,
    xa: _glUniform1f,
    Ea: _glUniform1i,
    I: _glUniform2f,
    Fa: _glUseProgram,
    Aa: _glVertexAttribPointer,
    Pa: _glViewport,
    Z: _gmtime_r,
    na: invoke_diii,
    $: invoke_fi,
    R: invoke_fii,
    ba: invoke_fiii,
    u: invoke_i,
    e: invoke_ii,
    d: invoke_iii,
    h: invoke_iiii,
    fb: invoke_iiiifi,
    m: invoke_iiiii,
    Eb: invoke_iiiiid,
    q: invoke_iiiiii,
    Ub: invoke_iiiiiif,
    t: invoke_iiiiiii,
    L: invoke_iiiiiiii,
    M: invoke_iiiiiiiii,
    T: invoke_iiiiiiiiiiii,
    Qb: invoke_iiiiiiiiiiiiiii,
    Sb: invoke_iiiiiiiiiiiiiiii,
    Rb: invoke_iiiiiiiiiiiiiiiii,
    ib: invoke_iiiiij,
    pb: invoke_iiij,
    qb: invoke_iij,
    lb: invoke_iiji,
    jb: invoke_ji,
    nb: invoke_jii,
    hb: invoke_jiiii,
    l: invoke_v,
    j: invoke_vi,
    Vb: invoke_vidi,
    C: invoke_viffiiiiii,
    Pb: invoke_vifi,
    f: invoke_vii,
    N: invoke_viid,
    va: invoke_viidii,
    Wb: invoke_viif,
    Q: invoke_viifi,
    _: invoke_viifii,
    i: invoke_viii,
    ua: invoke_viiif,
    p: invoke_viiii,
    sa: invoke_viiiif,
    eb: invoke_viiiiff,
    w: invoke_viiiii,
    F: invoke_viiiiii,
    z: invoke_viiiiiii,
    ca: invoke_viiiiiiifiiii,
    ta: invoke_viiiiiiii,
    da: invoke_viiiiiiiii,
    H: invoke_viiiiiiiiii,
    gb: invoke_viiiiiiiiiiii,
    S: invoke_viiiiiiiiiiiiiii,
    Tb: invoke_viiiiiiiiiiiiiiii,
    ob: invoke_viiiij,
    mb: invoke_viijii,
    rb: invoke_vij,
    y: _llvm_eh_typeid_for,
    db: _localtime_r,
    bb: _mktime,
    aa: _setTempRet0,
    Db: _strftime_l,
    Cb: _sysconf,
    A: _time,
    cb: _timegm,
  },
  asm = createWasm(),
  ___wasm_call_ctors = (Module.___wasm_call_ctors = function () {
    return (___wasm_call_ctors = Module.___wasm_call_ctors =
      Module.asm.Yb).apply(null, arguments);
  }),
  _create_context = (Module._create_context = function () {
    return (_create_context = Module._create_context = Module.asm._b).apply(
      null,
      arguments
    );
  }),
  _create_blurry_table = (Module._create_blurry_table = function () {
    return (_create_blurry_table = Module._create_blurry_table =
      Module.asm.$b).apply(null, arguments);
  }),
  _scanner_settings_new_from_json = (Module._scanner_settings_new_from_json =
    function () {
      return (_scanner_settings_new_from_json =
        Module._scanner_settings_new_from_json =
          Module.asm.ac).apply(null, arguments);
    }),
  _scanner_image_settings_new = (Module._scanner_image_settings_new =
    function () {
      return (_scanner_image_settings_new = Module._scanner_image_settings_new =
        Module.asm.bc).apply(null, arguments);
    }),
  _scanner_session_clear = (Module._scanner_session_clear = function () {
    return (_scanner_session_clear = Module._scanner_session_clear =
      Module.asm.cc).apply(null, arguments);
  }),
  _scanner_scan = (Module._scanner_scan = function () {
    return (_scanner_scan = Module._scanner_scan = Module.asm.dc).apply(
      null,
      arguments
    );
  }),
  _parser_parse_string = (Module._parser_parse_string = function () {
    return (_parser_parse_string = Module._parser_parse_string =
      Module.asm.ec).apply(null, arguments);
  }),
  _can_hide_logo = (Module._can_hide_logo = function () {
    return (_can_hide_logo = Module._can_hide_logo = Module.asm.fc).apply(
      null,
      arguments
    );
  }),
  _report_camera_properties = (Module._report_camera_properties = function () {
    return (_report_camera_properties = Module._report_camera_properties =
      Module.asm.gc).apply(null, arguments);
  }),
  _set_device_name = (Module._set_device_name = function () {
    return (_set_device_name = Module._set_device_name = Module.asm.hc).apply(
      null,
      arguments
    );
  }),
  _exception_to_string = (Module._exception_to_string = function () {
    return (_exception_to_string = Module._exception_to_string =
      Module.asm.ic).apply(null, arguments);
  }),
  _main = (Module._main = function () {
    return (_main = Module._main = Module.asm.jc).apply(null, arguments);
  }),
  _free = (Module._free = function () {
    return (_free = Module._free = Module.asm.kc).apply(null, arguments);
  }),
  _malloc = (Module._malloc = function () {
    return (_malloc = Module._malloc = Module.asm.lc).apply(null, arguments);
  }),
  _js_syncfs_done = (Module._js_syncfs_done = function () {
    return (_js_syncfs_done = Module._js_syncfs_done = Module.asm.mc).apply(
      null,
      arguments
    );
  }),
  ___errno_location = (Module.___errno_location = function () {
    return (___errno_location = Module.___errno_location = Module.asm.nc).apply(
      null,
      arguments
    );
  }),
  __get_tzname = (Module.__get_tzname = function () {
    return (__get_tzname = Module.__get_tzname = Module.asm.oc).apply(
      null,
      arguments
    );
  }),
  __get_daylight = (Module.__get_daylight = function () {
    return (__get_daylight = Module.__get_daylight = Module.asm.pc).apply(
      null,
      arguments
    );
  }),
  __get_timezone = (Module.__get_timezone = function () {
    return (__get_timezone = Module.__get_timezone = Module.asm.qc).apply(
      null,
      arguments
    );
  }),
  stackSave = (Module.stackSave = function () {
    return (stackSave = Module.stackSave = Module.asm.rc).apply(
      null,
      arguments
    );
  }),
  stackRestore = (Module.stackRestore = function () {
    return (stackRestore = Module.stackRestore = Module.asm.sc).apply(
      null,
      arguments
    );
  }),
  stackAlloc = (Module.stackAlloc = function () {
    return (stackAlloc = Module.stackAlloc = Module.asm.tc).apply(
      null,
      arguments
    );
  }),
  _setThrew = (Module._setThrew = function () {
    return (_setThrew = Module._setThrew = Module.asm.uc).apply(
      null,
      arguments
    );
  }),
  ___cxa_can_catch = (Module.___cxa_can_catch = function () {
    return (___cxa_can_catch = Module.___cxa_can_catch = Module.asm.vc).apply(
      null,
      arguments
    );
  }),
  ___cxa_is_pointer_type = (Module.___cxa_is_pointer_type = function () {
    return (___cxa_is_pointer_type = Module.___cxa_is_pointer_type =
      Module.asm.wc).apply(null, arguments);
  }),
  dynCall_viijii = (Module.dynCall_viijii = function () {
    return (dynCall_viijii = Module.dynCall_viijii = Module.asm.xc).apply(
      null,
      arguments
    );
  }),
  dynCall_vij = (Module.dynCall_vij = function () {
    return (dynCall_vij = Module.dynCall_vij = Module.asm.yc).apply(
      null,
      arguments
    );
  }),
  dynCall_iij = (Module.dynCall_iij = function () {
    return (dynCall_iij = Module.dynCall_iij = Module.asm.zc).apply(
      null,
      arguments
    );
  }),
  dynCall_iiij = (Module.dynCall_iiij = function () {
    return (dynCall_iiij = Module.dynCall_iiij = Module.asm.Ac).apply(
      null,
      arguments
    );
  }),
  dynCall_viiiij = (Module.dynCall_viiiij = function () {
    return (dynCall_viiiij = Module.dynCall_viiiij = Module.asm.Bc).apply(
      null,
      arguments
    );
  }),
  dynCall_ji = (Module.dynCall_ji = function () {
    return (dynCall_ji = Module.dynCall_ji = Module.asm.Cc).apply(
      null,
      arguments
    );
  }),
  dynCall_iiji = (Module.dynCall_iiji = function () {
    return (dynCall_iiji = Module.dynCall_iiji = Module.asm.Dc).apply(
      null,
      arguments
    );
  }),
  dynCall_jii = (Module.dynCall_jii = function () {
    return (dynCall_jii = Module.dynCall_jii = Module.asm.Ec).apply(
      null,
      arguments
    );
  }),
  dynCall_iiiiij = (Module.dynCall_iiiiij = function () {
    return (dynCall_iiiiij = Module.dynCall_iiiiij = Module.asm.Fc).apply(
      null,
      arguments
    );
  }),
  dynCall_jiiii = (Module.dynCall_jiiii = function () {
    return (dynCall_jiiii = Module.dynCall_jiiii = Module.asm.Gc).apply(
      null,
      arguments
    );
  });
function invoke_viii(e, t, r, n) {
  var o = stackSave();
  try {
    wasmTable.get(e)(t, r, n);
  } catch (e) {
    if ((stackRestore(o), e !== e + 0 && 'longjmp' !== e)) throw e;
    _setThrew(1, 0);
  }
}
function invoke_viiiii(e, t, r, n, o, i) {
  var a = stackSave();
  try {
    wasmTable.get(e)(t, r, n, o, i);
  } catch (e) {
    if ((stackRestore(a), e !== e + 0 && 'longjmp' !== e)) throw e;
    _setThrew(1, 0);
  }
}
function invoke_ii(e, t) {
  var r = stackSave();
  try {
    return wasmTable.get(e)(t);
  } catch (e) {
    if ((stackRestore(r), e !== e + 0 && 'longjmp' !== e)) throw e;
    _setThrew(1, 0);
  }
}
function invoke_viiii(e, t, r, n, o) {
  var i = stackSave();
  try {
    wasmTable.get(e)(t, r, n, o);
  } catch (e) {
    if ((stackRestore(i), e !== e + 0 && 'longjmp' !== e)) throw e;
    _setThrew(1, 0);
  }
}
function invoke_vii(e, t, r) {
  var n = stackSave();
  try {
    wasmTable.get(e)(t, r);
  } catch (e) {
    if ((stackRestore(n), e !== e + 0 && 'longjmp' !== e)) throw e;
    _setThrew(1, 0);
  }
}
function invoke_v(e) {
  var t = stackSave();
  try {
    wasmTable.get(e)();
  } catch (e) {
    if ((stackRestore(t), e !== e + 0 && 'longjmp' !== e)) throw e;
    _setThrew(1, 0);
  }
}
function invoke_iii(e, t, r) {
  var n = stackSave();
  try {
    return wasmTable.get(e)(t, r);
  } catch (e) {
    if ((stackRestore(n), e !== e + 0 && 'longjmp' !== e)) throw e;
    _setThrew(1, 0);
  }
}
function invoke_iiii(e, t, r, n) {
  var o = stackSave();
  try {
    return wasmTable.get(e)(t, r, n);
  } catch (e) {
    if ((stackRestore(o), e !== e + 0 && 'longjmp' !== e)) throw e;
    _setThrew(1, 0);
  }
}
function invoke_iiiiiii(e, t, r, n, o, i, a) {
  var s = stackSave();
  try {
    return wasmTable.get(e)(t, r, n, o, i, a);
  } catch (e) {
    if ((stackRestore(s), e !== e + 0 && 'longjmp' !== e)) throw e;
    _setThrew(1, 0);
  }
}
function invoke_vi(e, t) {
  var r = stackSave();
  try {
    wasmTable.get(e)(t);
  } catch (e) {
    if ((stackRestore(r), e !== e + 0 && 'longjmp' !== e)) throw e;
    _setThrew(1, 0);
  }
}
function invoke_iiiiii(e, t, r, n, o, i) {
  var a = stackSave();
  try {
    return wasmTable.get(e)(t, r, n, o, i);
  } catch (e) {
    if ((stackRestore(a), e !== e + 0 && 'longjmp' !== e)) throw e;
    _setThrew(1, 0);
  }
}
function invoke_viiiiiiiiiiii(e, t, r, n, o, i, a, s, c, u, l, d, f) {
  var m = stackSave();
  try {
    wasmTable.get(e)(t, r, n, o, i, a, s, c, u, l, d, f);
  } catch (e) {
    if ((stackRestore(m), e !== e + 0 && 'longjmp' !== e)) throw e;
    _setThrew(1, 0);
  }
}
function invoke_i(e) {
  var t = stackSave();
  try {
    return wasmTable.get(e)();
  } catch (e) {
    if ((stackRestore(t), e !== e + 0 && 'longjmp' !== e)) throw e;
    _setThrew(1, 0);
  }
}
function invoke_fii(e, t, r) {
  var n = stackSave();
  try {
    return wasmTable.get(e)(t, r);
  } catch (e) {
    if ((stackRestore(n), e !== e + 0 && 'longjmp' !== e)) throw e;
    _setThrew(1, 0);
  }
}
function invoke_iiiii(e, t, r, n, o) {
  var i = stackSave();
  try {
    return wasmTable.get(e)(t, r, n, o);
  } catch (e) {
    if ((stackRestore(i), e !== e + 0 && 'longjmp' !== e)) throw e;
    _setThrew(1, 0);
  }
}
function invoke_fi(e, t) {
  var r = stackSave();
  try {
    return wasmTable.get(e)(t);
  } catch (e) {
    if ((stackRestore(r), e !== e + 0 && 'longjmp' !== e)) throw e;
    _setThrew(1, 0);
  }
}
function invoke_viiiiii(e, t, r, n, o, i, a) {
  var s = stackSave();
  try {
    wasmTable.get(e)(t, r, n, o, i, a);
  } catch (e) {
    if ((stackRestore(s), e !== e + 0 && 'longjmp' !== e)) throw e;
    _setThrew(1, 0);
  }
}
function invoke_viifi(e, t, r, n, o) {
  var i = stackSave();
  try {
    wasmTable.get(e)(t, r, n, o);
  } catch (e) {
    if ((stackRestore(i), e !== e + 0 && 'longjmp' !== e)) throw e;
    _setThrew(1, 0);
  }
}
function invoke_iiiifi(e, t, r, n, o, i) {
  var a = stackSave();
  try {
    return wasmTable.get(e)(t, r, n, o, i);
  } catch (e) {
    if ((stackRestore(a), e !== e + 0 && 'longjmp' !== e)) throw e;
    _setThrew(1, 0);
  }
}
function invoke_viffiiiiii(e, t, r, n, o, i, a, s, c, u) {
  var l = stackSave();
  try {
    wasmTable.get(e)(t, r, n, o, i, a, s, c, u);
  } catch (e) {
    if ((stackRestore(l), e !== e + 0 && 'longjmp' !== e)) throw e;
    _setThrew(1, 0);
  }
}
function invoke_viiiiff(e, t, r, n, o, i, a) {
  var s = stackSave();
  try {
    wasmTable.get(e)(t, r, n, o, i, a);
  } catch (e) {
    if ((stackRestore(s), e !== e + 0 && 'longjmp' !== e)) throw e;
    _setThrew(1, 0);
  }
}
function invoke_viifii(e, t, r, n, o, i) {
  var a = stackSave();
  try {
    wasmTable.get(e)(t, r, n, o, i);
  } catch (e) {
    if ((stackRestore(a), e !== e + 0 && 'longjmp' !== e)) throw e;
    _setThrew(1, 0);
  }
}
function invoke_viiiiiii(e, t, r, n, o, i, a, s) {
  var c = stackSave();
  try {
    wasmTable.get(e)(t, r, n, o, i, a, s);
  } catch (e) {
    if ((stackRestore(c), e !== e + 0 && 'longjmp' !== e)) throw e;
    _setThrew(1, 0);
  }
}
function invoke_viidii(e, t, r, n, o, i) {
  var a = stackSave();
  try {
    wasmTable.get(e)(t, r, n, o, i);
  } catch (e) {
    if ((stackRestore(a), e !== e + 0 && 'longjmp' !== e)) throw e;
    _setThrew(1, 0);
  }
}
function invoke_viiif(e, t, r, n, o) {
  var i = stackSave();
  try {
    wasmTable.get(e)(t, r, n, o);
  } catch (e) {
    if ((stackRestore(i), e !== e + 0 && 'longjmp' !== e)) throw e;
    _setThrew(1, 0);
  }
}
function invoke_viid(e, t, r, n) {
  var o = stackSave();
  try {
    wasmTable.get(e)(t, r, n);
  } catch (e) {
    if ((stackRestore(o), e !== e + 0 && 'longjmp' !== e)) throw e;
    _setThrew(1, 0);
  }
}
function invoke_iiiiiiiii(e, t, r, n, o, i, a, s, c) {
  var u = stackSave();
  try {
    return wasmTable.get(e)(t, r, n, o, i, a, s, c);
  } catch (e) {
    if ((stackRestore(u), e !== e + 0 && 'longjmp' !== e)) throw e;
    _setThrew(1, 0);
  }
}
function invoke_viiiiiiiii(e, t, r, n, o, i, a, s, c, u) {
  var l = stackSave();
  try {
    wasmTable.get(e)(t, r, n, o, i, a, s, c, u);
  } catch (e) {
    if ((stackRestore(l), e !== e + 0 && 'longjmp' !== e)) throw e;
    _setThrew(1, 0);
  }
}
function invoke_viiiiiiifiiii(e, t, r, n, o, i, a, s, c, u, l, d, f) {
  var m = stackSave();
  try {
    wasmTable.get(e)(t, r, n, o, i, a, s, c, u, l, d, f);
  } catch (e) {
    if ((stackRestore(m), e !== e + 0 && 'longjmp' !== e)) throw e;
    _setThrew(1, 0);
  }
}
function invoke_viif(e, t, r, n) {
  var o = stackSave();
  try {
    wasmTable.get(e)(t, r, n);
  } catch (e) {
    if ((stackRestore(o), e !== e + 0 && 'longjmp' !== e)) throw e;
    _setThrew(1, 0);
  }
}
function invoke_vidi(e, t, r, n) {
  var o = stackSave();
  try {
    wasmTable.get(e)(t, r, n);
  } catch (e) {
    if ((stackRestore(o), e !== e + 0 && 'longjmp' !== e)) throw e;
    _setThrew(1, 0);
  }
}
function invoke_viiiiiiii(e, t, r, n, o, i, a, s, c) {
  var u = stackSave();
  try {
    wasmTable.get(e)(t, r, n, o, i, a, s, c);
  } catch (e) {
    if ((stackRestore(u), e !== e + 0 && 'longjmp' !== e)) throw e;
    _setThrew(1, 0);
  }
}
function invoke_iiiiiif(e, t, r, n, o, i, a) {
  var s = stackSave();
  try {
    return wasmTable.get(e)(t, r, n, o, i, a);
  } catch (e) {
    if ((stackRestore(s), e !== e + 0 && 'longjmp' !== e)) throw e;
    _setThrew(1, 0);
  }
}
function invoke_viiiiiiiiiiiiiiii(
  e,
  t,
  r,
  n,
  o,
  i,
  a,
  s,
  c,
  u,
  l,
  d,
  f,
  m,
  _,
  p,
  h
) {
  var g = stackSave();
  try {
    wasmTable.get(e)(t, r, n, o, i, a, s, c, u, l, d, f, m, _, p, h);
  } catch (e) {
    if ((stackRestore(g), e !== e + 0 && 'longjmp' !== e)) throw e;
    _setThrew(1, 0);
  }
}
function invoke_iiiiiiiiiiiiiiii(
  e,
  t,
  r,
  n,
  o,
  i,
  a,
  s,
  c,
  u,
  l,
  d,
  f,
  m,
  _,
  p
) {
  var h = stackSave();
  try {
    return wasmTable.get(e)(t, r, n, o, i, a, s, c, u, l, d, f, m, _, p);
  } catch (e) {
    if ((stackRestore(h), e !== e + 0 && 'longjmp' !== e)) throw e;
    _setThrew(1, 0);
  }
}
function invoke_iiiiiiiiiiiiiiiii(
  e,
  t,
  r,
  n,
  o,
  i,
  a,
  s,
  c,
  u,
  l,
  d,
  f,
  m,
  _,
  p,
  h
) {
  var g = stackSave();
  try {
    return wasmTable.get(e)(t, r, n, o, i, a, s, c, u, l, d, f, m, _, p, h);
  } catch (e) {
    if ((stackRestore(g), e !== e + 0 && 'longjmp' !== e)) throw e;
    _setThrew(1, 0);
  }
}
function invoke_iiiiiiii(e, t, r, n, o, i, a, s) {
  var c = stackSave();
  try {
    return wasmTable.get(e)(t, r, n, o, i, a, s);
  } catch (e) {
    if ((stackRestore(c), e !== e + 0 && 'longjmp' !== e)) throw e;
    _setThrew(1, 0);
  }
}
function invoke_iiiiiiiiiiiiiii(e, t, r, n, o, i, a, s, c, u, l, d, f, m, _) {
  var p = stackSave();
  try {
    return wasmTable.get(e)(t, r, n, o, i, a, s, c, u, l, d, f, m, _);
  } catch (e) {
    if ((stackRestore(p), e !== e + 0 && 'longjmp' !== e)) throw e;
    _setThrew(1, 0);
  }
}
function invoke_fiii(e, t, r, n) {
  var o = stackSave();
  try {
    return wasmTable.get(e)(t, r, n);
  } catch (e) {
    if ((stackRestore(o), e !== e + 0 && 'longjmp' !== e)) throw e;
    _setThrew(1, 0);
  }
}
function invoke_vifi(e, t, r, n) {
  var o = stackSave();
  try {
    wasmTable.get(e)(t, r, n);
  } catch (e) {
    if ((stackRestore(o), e !== e + 0 && 'longjmp' !== e)) throw e;
    _setThrew(1, 0);
  }
}
function invoke_viiiif(e, t, r, n, o, i) {
  var a = stackSave();
  try {
    wasmTable.get(e)(t, r, n, o, i);
  } catch (e) {
    if ((stackRestore(a), e !== e + 0 && 'longjmp' !== e)) throw e;
    _setThrew(1, 0);
  }
}
function invoke_iiiiid(e, t, r, n, o, i) {
  var a = stackSave();
  try {
    return wasmTable.get(e)(t, r, n, o, i);
  } catch (e) {
    if ((stackRestore(a), e !== e + 0 && 'longjmp' !== e)) throw e;
    _setThrew(1, 0);
  }
}
function invoke_diii(e, t, r, n) {
  var o = stackSave();
  try {
    return wasmTable.get(e)(t, r, n);
  } catch (e) {
    if ((stackRestore(o), e !== e + 0 && 'longjmp' !== e)) throw e;
    _setThrew(1, 0);
  }
}
function invoke_iiiiiiiiiiii(e, t, r, n, o, i, a, s, c, u, l, d) {
  var f = stackSave();
  try {
    return wasmTable.get(e)(t, r, n, o, i, a, s, c, u, l, d);
  } catch (e) {
    if ((stackRestore(f), e !== e + 0 && 'longjmp' !== e)) throw e;
    _setThrew(1, 0);
  }
}
function invoke_viiiiiiiiii(e, t, r, n, o, i, a, s, c, u, l) {
  var d = stackSave();
  try {
    wasmTable.get(e)(t, r, n, o, i, a, s, c, u, l);
  } catch (e) {
    if ((stackRestore(d), e !== e + 0 && 'longjmp' !== e)) throw e;
    _setThrew(1, 0);
  }
}
function invoke_viiiiiiiiiiiiiii(
  e,
  t,
  r,
  n,
  o,
  i,
  a,
  s,
  c,
  u,
  l,
  d,
  f,
  m,
  _,
  p
) {
  var h = stackSave();
  try {
    wasmTable.get(e)(t, r, n, o, i, a, s, c, u, l, d, f, m, _, p);
  } catch (e) {
    if ((stackRestore(h), e !== e + 0 && 'longjmp' !== e)) throw e;
    _setThrew(1, 0);
  }
}
function invoke_vij(e, t, r, n) {
  var o = stackSave();
  try {
    dynCall_vij(e, t, r, n);
  } catch (e) {
    if ((stackRestore(o), e !== e + 0 && 'longjmp' !== e)) throw e;
    _setThrew(1, 0);
  }
}
function invoke_iij(e, t, r, n) {
  var o = stackSave();
  try {
    return dynCall_iij(e, t, r, n);
  } catch (e) {
    if ((stackRestore(o), e !== e + 0 && 'longjmp' !== e)) throw e;
    _setThrew(1, 0);
  }
}
function invoke_iiij(e, t, r, n, o) {
  var i = stackSave();
  try {
    return dynCall_iiij(e, t, r, n, o);
  } catch (e) {
    if ((stackRestore(i), e !== e + 0 && 'longjmp' !== e)) throw e;
    _setThrew(1, 0);
  }
}
function invoke_viiiij(e, t, r, n, o, i, a) {
  var s = stackSave();
  try {
    dynCall_viiiij(e, t, r, n, o, i, a);
  } catch (e) {
    if ((stackRestore(s), e !== e + 0 && 'longjmp' !== e)) throw e;
    _setThrew(1, 0);
  }
}
function invoke_jii(e, t, r) {
  var n = stackSave();
  try {
    return dynCall_jii(e, t, r);
  } catch (e) {
    if ((stackRestore(n), e !== e + 0 && 'longjmp' !== e)) throw e;
    _setThrew(1, 0);
  }
}
function invoke_viijii(e, t, r, n, o, i, a) {
  var s = stackSave();
  try {
    dynCall_viijii(e, t, r, n, o, i, a);
  } catch (e) {
    if ((stackRestore(s), e !== e + 0 && 'longjmp' !== e)) throw e;
    _setThrew(1, 0);
  }
}
function invoke_iiji(e, t, r, n, o) {
  var i = stackSave();
  try {
    return dynCall_iiji(e, t, r, n, o);
  } catch (e) {
    if ((stackRestore(i), e !== e + 0 && 'longjmp' !== e)) throw e;
    _setThrew(1, 0);
  }
}
function invoke_ji(e, t) {
  var r = stackSave();
  try {
    return dynCall_ji(e, t);
  } catch (e) {
    if ((stackRestore(r), e !== e + 0 && 'longjmp' !== e)) throw e;
    _setThrew(1, 0);
  }
}
function invoke_iiiiij(e, t, r, n, o, i, a) {
  var s = stackSave();
  try {
    return dynCall_iiiiij(e, t, r, n, o, i, a);
  } catch (e) {
    if ((stackRestore(s), e !== e + 0 && 'longjmp' !== e)) throw e;
    _setThrew(1, 0);
  }
}
function invoke_jiiii(e, t, r, n, o) {
  var i = stackSave();
  try {
    return dynCall_jiiii(e, t, r, n, o);
  } catch (e) {
    if ((stackRestore(i), e !== e + 0 && 'longjmp' !== e)) throw e;
    _setThrew(1, 0);
  }
}
function ExitStatus(e) {
  (this.name = 'ExitStatus'),
    (this.message = 'Program terminated with exit(' + e + ')'),
    (this.status = e);
}
Module.callMain = callMain;
var calledMain = !1;
function callMain(e) {
  var t = Module._main,
    r = (e = e || []).length + 1,
    n = stackAlloc(4 * (r + 1));
  HEAP32[n >> 2] = allocateUTF8OnStack(thisProgram);
  for (var o = 1; o < r; o++)
    HEAP32[(n >> 2) + o] = allocateUTF8OnStack(e[o - 1]);
  HEAP32[(n >> 2) + r] = 0;
  try {
    exit(t(r, n), !0);
  } catch (e) {
    if (e instanceof ExitStatus) return;
    if ('unwind' == e) return void (noExitRuntime = !0);
    var i = e;
    e && 'object' == typeof e && e.stack && (i = [e, e.stack]),
      err('exception thrown: ' + i),
      quit_(1, e);
  } finally {
    calledMain = !0;
  }
}
function run(e) {
  function t() {
    calledRun ||
      ((calledRun = !0),
      (Module.calledRun = !0),
      ABORT ||
        (initRuntime(),
        preMain(),
        Module.onRuntimeInitialized && Module.onRuntimeInitialized(),
        shouldRunNow && callMain(e),
        postRun()));
  }
  (e = e || arguments_),
    0 < runDependencies ||
      (preRun(),
      0 < runDependencies ||
        (Module.setStatus
          ? (Module.setStatus('Running...'),
            setTimeout(function () {
              setTimeout(function () {
                Module.setStatus('');
              }, 1),
                t();
            }, 1))
          : t()));
}
function exit(e, t) {
  (t && noExitRuntime && 0 === e) ||
    (noExitRuntime ||
      ((EXITSTATUS = e),
      exitRuntime(),
      Module.onExit && Module.onExit(e),
      (ABORT = !0)),
    quit_(e, new ExitStatus(e)));
}
if (
  ((dependenciesFulfilled = function e() {
    calledRun || run(), calledRun || (dependenciesFulfilled = e);
  }),
  (Module.run = run),
  Module.preInit)
)
  for (
    'function' == typeof Module.preInit && (Module.preInit = [Module.preInit]);
    0 < Module.preInit.length;

  )
    Module.preInit.pop()();
var shouldRunNow = !0;
Module.noInitialRun && (shouldRunNow = !1), run();
